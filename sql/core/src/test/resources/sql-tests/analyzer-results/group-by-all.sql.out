-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view data as select * from values
  ("USA", "San Francisco", "Reynold", 1, 11.0),
  ("USA", "San Francisco", "Matei", 2, 12.0),
  ("USA", "Berkeley", "Xiao", 3, 13.0),
  ("China", "Hangzhou", "Wenchen", 4, 14.0),
  ("China", "Shanghai", "Shanghaiese", 5, 15.0),
  ("Korea", "Seoul", "Hyukjin", 6, 16.0),
  ("UK", "London", "Sean", 7, 17.0)
  as data(country, city, name, id, power)
-- !query analysis
CreateViewCommand `data`, select * from values
  ("USA", "San Francisco", "Reynold", 1, 11.0),
  ("USA", "San Francisco", "Matei", 2, 12.0),
  ("USA", "Berkeley", "Xiao", 3, 13.0),
  ("China", "Hangzhou", "Wenchen", 4, 14.0),
  ("China", "Shanghai", "Shanghaiese", 5, 15.0),
  ("Korea", "Seoul", "Hyukjin", 6, 16.0),
  ("UK", "London", "Sean", 7, 17.0)
  as data(country, city, name, id, power), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [country#x, city#x, name#x, id#x, power#x]
      +- SubqueryAlias data
         +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select country, count(*) from data group by ALL
-- !query analysis
Aggregate [country#x], [country#x, count(1) AS count(1)#xL]
+- SubqueryAlias data
   +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
      +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
         +- Project [country#x, city#x, name#x, id#x, power#x]
            +- SubqueryAlias data
               +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select country, count(*) from data group by aLl
-- !query analysis
Aggregate [country#x], [country#x, count(1) AS count(1)#xL]
+- SubqueryAlias data
   +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
      +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
         +- Project [country#x, city#x, name#x, id#x, power#x]
            +- SubqueryAlias data
               +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select all, city, count(*) from (select country as all, city, id from data) group by all, city
-- !query analysis
Aggregate [all#x, city#x], [all#x, city#x, count(1) AS count(1)#xL]
+- SubqueryAlias __auto_generated_subquery_name
   +- Project [country#x AS all#x, city#x, id#x]
      +- SubqueryAlias data
         +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
            +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
               +- Project [country#x, city#x, name#x, id#x, power#x]
                  +- SubqueryAlias data
                     +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
SELECT count(1) FROM VALUES(1), (2), (3) AS T(all) GROUP BY all
-- !query analysis
Aggregate [all#x], [count(1) AS count(1)#xL]
+- SubqueryAlias T
   +- LocalRelation [all#x]


-- !query
select country, city, count(*), sum(power) from data group by all
-- !query analysis
Aggregate [country#x, city#x], [country#x, city#x, count(1) AS count(1)#xL, sum(power#x) AS sum(power)#x]
+- SubqueryAlias data
   +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
      +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
         +- Project [country#x, city#x, name#x, id#x, power#x]
            +- SubqueryAlias data
               +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select count(*), country, city, sum(power) from data group by all
-- !query analysis
Aggregate [country#x, city#x], [count(1) AS count(1)#xL, country#x, city#x, sum(power#x) AS sum(power)#x]
+- SubqueryAlias data
   +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
      +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
         +- Project [country#x, city#x, name#x, id#x, power#x]
            +- SubqueryAlias data
               +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select country as con, count(*) from data group by all
-- !query analysis
Aggregate [country#x], [country#x AS con#x, count(1) AS count(1)#xL]
+- SubqueryAlias data
   +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
      +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
         +- Project [country#x, city#x, name#x, id#x, power#x]
            +- SubqueryAlias data
               +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select country, count(*) as cnt from data group by all
-- !query analysis
Aggregate [country#x], [country#x, count(1) AS cnt#xL]
+- SubqueryAlias data
   +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
      +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
         +- Project [country#x, city#x, name#x, id#x, power#x]
            +- SubqueryAlias data
               +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select upper(country), count(*) as powerup from data group by all
-- !query analysis
Aggregate [upper(country#x)], [upper(country#x) AS upper(country)#x, count(1) AS powerup#xL]
+- SubqueryAlias data
   +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
      +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
         +- Project [country#x, city#x, name#x, id#x, power#x]
            +- SubqueryAlias data
               +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select country, sum(power) + 10 as powerup from data group by all
-- !query analysis
Aggregate [country#x], [country#x, (sum(power#x) + cast(10 as decimal(2,0))) AS powerup#x]
+- SubqueryAlias data
   +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
      +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
         +- Project [country#x, city#x, name#x, id#x, power#x]
            +- SubqueryAlias data
               +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select country, city from data group by all
-- !query analysis
Aggregate [country#x, city#x], [country#x, city#x]
+- SubqueryAlias data
   +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
      +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
         +- Project [country#x, city#x, name#x, id#x, power#x]
            +- SubqueryAlias data
               +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select con, powerup from
  (select country as con, sum(power) + 10 as powerup from data group by all)
-- !query analysis
Project [con#x, powerup#x]
+- SubqueryAlias __auto_generated_subquery_name
   +- Aggregate [country#x], [country#x AS con#x, (sum(power#x) + cast(10 as decimal(2,0))) AS powerup#x]
      +- SubqueryAlias data
         +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
            +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
               +- Project [country#x, city#x, name#x, id#x, power#x]
                  +- SubqueryAlias data
                     +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select country, count(id) as cnt from data group by all having cnt > 1
-- !query analysis
Filter (cnt#xL > cast(1 as bigint))
+- Aggregate [country#x], [country#x, count(id#x) AS cnt#xL]
   +- SubqueryAlias data
      +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
         +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
            +- Project [country#x, city#x, name#x, id#x, power#x]
               +- SubqueryAlias data
                  +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select count(id) from data group by all
-- !query analysis
Aggregate [count(id#x) AS count(id)#xL]
+- SubqueryAlias data
   +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
      +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
         +- Project [country#x, city#x, name#x, id#x, power#x]
            +- SubqueryAlias data
               +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select count(id + power / 2) * 3 from data group by all
-- !query analysis
Aggregate [(count((cast(id#x as decimal(10,0)) + (power#x / cast(2 as decimal(1,0))))) * cast(3 as bigint)) AS (count((id + (power / 2))) * 3)#xL]
+- SubqueryAlias data
   +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
      +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
         +- Project [country#x, city#x, name#x, id#x, power#x]
            +- SubqueryAlias data
               +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select count(*) from (select * from data where country = "DNS") group by all
-- !query analysis
Aggregate [count(1) AS count(1)#xL]
+- SubqueryAlias __auto_generated_subquery_name
   +- Project [country#x, city#x, name#x, id#x, power#x]
      +- Filter (country#x = DNS)
         +- SubqueryAlias data
            +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
               +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
                  +- Project [country#x, city#x, name#x, id#x, power#x]
                     +- SubqueryAlias data
                        +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select id + count(*) from data group by all
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_ALL_IN_GROUP_BY",
  "sqlState" : "42803",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 32,
    "stopIndex" : 43,
    "fragment" : "group by all"
  } ]
}


-- !query
select (id + id) / 2 + count(*) * 2 from data group by all
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_ALL_IN_GROUP_BY",
  "sqlState" : "42803",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 47,
    "stopIndex" : 58,
    "fragment" : "group by all"
  } ]
}


-- !query
select country, (select count(*) from data) as cnt, count(id) as cnt_id from data group by all
-- !query analysis
Aggregate [country#x, scalar-subquery#x []], [country#x, scalar-subquery#x [] AS cnt#xL, count(id#x) AS cnt_id#xL]
:  :- Aggregate [count(1) AS count(1)#xL]
:  :  +- SubqueryAlias data
:  :     +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
:  :        +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
:  :           +- Project [country#x, city#x, name#x, id#x, power#x]
:  :              +- SubqueryAlias data
:  :                 +- LocalRelation [country#x, city#x, name#x, id#x, power#x]
:  +- Aggregate [count(1) AS count(1)#xL]
:     +- SubqueryAlias data
:        +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
:           +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
:              +- Project [country#x, city#x, name#x, id#x, power#x]
:                 +- SubqueryAlias data
:                    +- LocalRelation [country#x, city#x, name#x, id#x, power#x]
+- SubqueryAlias data
   +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
      +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
         +- Project [country#x, city#x, name#x, id#x, power#x]
            +- SubqueryAlias data
               +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select country, (select count(*) from data d1 where d1.country = d2.country), count(id) from data d2 group by all
-- !query analysis
Aggregate [country#x, scalar-subquery#x [country#x]], [country#x, scalar-subquery#x [country#x] AS scalarsubquery(country)#xL, count(id#x) AS count(id)#xL]
:  :- Aggregate [count(1) AS count(1)#xL]
:  :  +- Filter (country#x = outer(country#x))
:  :     +- SubqueryAlias d1
:  :        +- SubqueryAlias data
:  :           +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
:  :              +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
:  :                 +- Project [country#x, city#x, name#x, id#x, power#x]
:  :                    +- SubqueryAlias data
:  :                       +- LocalRelation [country#x, city#x, name#x, id#x, power#x]
:  +- Aggregate [count(1) AS count(1)#xL]
:     +- Filter (country#x = outer(country#x))
:        +- SubqueryAlias d1
:           +- SubqueryAlias data
:              +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
:                 +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
:                    +- Project [country#x, city#x, name#x, id#x, power#x]
:                       +- SubqueryAlias data
:                          +- LocalRelation [country#x, city#x, name#x, id#x, power#x]
+- SubqueryAlias d2
   +- SubqueryAlias data
      +- View (`data`, [country#x, city#x, name#x, id#x, power#x])
         +- Project [cast(country#x as string) AS country#x, cast(city#x as string) AS city#x, cast(name#x as string) AS name#x, cast(id#x as int) AS id#x, cast(power#x as decimal(3,1)) AS power#x]
            +- Project [country#x, city#x, name#x, id#x, power#x]
               +- SubqueryAlias data
                  +- LocalRelation [country#x, city#x, name#x, id#x, power#x]


-- !query
select (select count(*) from data d1 where d1.country = d2.country) + count(id) from data d2 group by all
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_ALL_IN_GROUP_BY",
  "sqlState" : "42803",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 94,
    "stopIndex" : 105,
    "fragment" : "group by all"
  } ]
}


-- !query
select non_exist from data group by all
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`non_exist`",
    "proposal" : "`id`, `name`, `power`, `city`, `country`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 16,
    "fragment" : "non_exist"
  } ]
}
