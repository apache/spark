-- Automatically generated by SQLQueryTestSuite
-- !query
WITH t as (
  WITH t2 AS (SELECT 1)
  SELECT * FROM t2
)
SELECT * FROM t
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t2
:     +- Project [1 AS 1#x]
:        +- OneRowRelation
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t
:     +- Project [1#x]
:        +- SubqueryAlias t2
:           +- CTERelationRef xxxx, true, [1#x], false, false
+- Project [1#x]
   +- SubqueryAlias t
      +- CTERelationRef xxxx, true, [1#x], false, false


-- !query
SELECT max(c) FROM (
  WITH t(c) AS (SELECT 1)
  SELECT * FROM t
)
-- !query analysis
Aggregate [max(c#x) AS max(c)#x]
+- SubqueryAlias __auto_generated_subquery_name
   +- WithCTE
      :- CTERelationDef xxxx, false
      :  +- SubqueryAlias t
      :     +- Project [1#x AS c#x]
      :        +- Project [1 AS 1#x]
      :           +- OneRowRelation
      +- Project [c#x]
         +- SubqueryAlias t
            +- CTERelationRef xxxx, true, [c#x], false, false


-- !query
SELECT (
  WITH t AS (SELECT 1)
  SELECT * FROM t
)
-- !query analysis
Project [scalar-subquery#x [] AS scalarsubquery()#x]
:  +- WithCTE
:     :- CTERelationDef xxxx, false
:     :  +- SubqueryAlias t
:     :     +- Project [1 AS 1#x]
:     :        +- OneRowRelation
:     +- Project [1#x]
:        +- SubqueryAlias t
:           +- CTERelationRef xxxx, true, [1#x], false, false
+- OneRowRelation


-- !query
SELECT (
  WITH unreferenced AS (SELECT id)
  SELECT 1
) FROM range(1)
-- !query analysis
Project [scalar-subquery#x [id#xL] AS scalarsubquery(id)#x]
:  +- WithCTE
:     :- CTERelationDef xxxx, false
:     :  +- SubqueryAlias unreferenced
:     :     +- Project [outer(id#xL)]
:     :        +- OneRowRelation
:     +- Project [1 AS 1#x]
:        +- OneRowRelation
+- Range (0, 1, step=1)


-- !query
SELECT (
  WITH unreferenced AS (SELECT 1)
  SELECT id
) FROM range(1)
-- !query analysis
Project [scalar-subquery#x [id#xL] AS scalarsubquery(id)#xL]
:  +- WithCTE
:     :- CTERelationDef xxxx, false
:     :  +- SubqueryAlias unreferenced
:     :     +- Project [1 AS 1#x]
:     :        +- OneRowRelation
:     +- Project [outer(id#xL)]
:        +- OneRowRelation
+- Range (0, 1, step=1)


-- !query
SELECT * FROM
  (
   WITH cte AS (SELECT * FROM range(10))
   SELECT * FROM cte WHERE id = 8
  ) a
UNION
SELECT * FROM cte
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`cte`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 120,
    "stopIndex" : 122,
    "fragment" : "cte"
  } ]
}


-- !query
WITH
  t AS (SELECT 1),
  t2 AS (
    WITH t AS (SELECT 2)
    SELECT * FROM t
  )
SELECT * FROM t2
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_ALIAS_IN_NESTED_CTE",
  "sqlState" : "42KD0",
  "messageParameters" : {
    "config" : "\"spark.sql.legacy.ctePrecedencePolicy\"",
    "docroot" : "https://spark.apache.org/docs/latest",
    "name" : "`t`"
  }
}


-- !query
WITH
  t(c) AS (SELECT 1),
  t2 AS (
    SELECT (
      SELECT max(c) FROM (
        WITH t(c) AS (SELECT 2)
        SELECT * FROM t
      )
    )
  )
SELECT * FROM t2
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t
:     +- Project [1#x AS c#x]
:        +- Project [1 AS 1#x]
:           +- OneRowRelation
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t2
:     +- Project [scalar-subquery#x [] AS scalarsubquery()#x]
:        :  +- Aggregate [max(c#x) AS max(c)#x]
:        :     +- SubqueryAlias __auto_generated_subquery_name
:        :        +- WithCTE
:        :           :- CTERelationDef xxxx, false
:        :           :  +- SubqueryAlias t
:        :           :     +- Project [2#x AS c#x]
:        :           :        +- Project [2 AS 2#x]
:        :           :           +- OneRowRelation
:        :           +- Project [c#x]
:        :              +- SubqueryAlias t
:        :                 +- CTERelationRef xxxx, true, [c#x], false, false
:        +- OneRowRelation
+- Project [scalarsubquery()#x]
   +- SubqueryAlias t2
      +- CTERelationRef xxxx, true, [scalarsubquery()#x], false, false


-- !query
WITH
  t AS (SELECT 1),
  t2 AS (
    WITH t AS (SELECT 2),
    t2 AS (
      WITH t AS (SELECT 3)
      SELECT * FROM t
    )
    SELECT * FROM t2
  )
SELECT * FROM t2
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_ALIAS_IN_NESTED_CTE",
  "sqlState" : "42KD0",
  "messageParameters" : {
    "config" : "\"spark.sql.legacy.ctePrecedencePolicy\"",
    "docroot" : "https://spark.apache.org/docs/latest",
    "name" : "`t`"
  }
}


-- !query
WITH t(c) AS (SELECT 1)
SELECT max(c) FROM (
  WITH t(c) AS (SELECT 2)
  SELECT * FROM t
)
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t
:     +- Project [1#x AS c#x]
:        +- Project [1 AS 1#x]
:           +- OneRowRelation
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t
:     +- Project [2#x AS c#x]
:        +- Project [2 AS 2#x]
:           +- OneRowRelation
+- Aggregate [max(c#x) AS max(c)#x]
   +- SubqueryAlias __auto_generated_subquery_name
      +- Project [c#x]
         +- SubqueryAlias t
            +- CTERelationRef xxxx, true, [c#x], false, false


-- !query
WITH t(c) AS (SELECT 1)
SELECT sum(c) FROM (
  SELECT max(c) AS c FROM (
    WITH t(c) AS (SELECT 2)
    SELECT * FROM t
  )
)
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t
:     +- Project [1#x AS c#x]
:        +- Project [1 AS 1#x]
:           +- OneRowRelation
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t
:     +- Project [2#x AS c#x]
:        +- Project [2 AS 2#x]
:           +- OneRowRelation
+- Aggregate [sum(c#x) AS sum(c)#xL]
   +- SubqueryAlias __auto_generated_subquery_name
      +- Aggregate [max(c#x) AS c#x]
         +- SubqueryAlias __auto_generated_subquery_name
            +- Project [c#x]
               +- SubqueryAlias t
                  +- CTERelationRef xxxx, true, [c#x], false, false


-- !query
WITH t(c) AS (SELECT 1)
SELECT sum(c) FROM (
  WITH t(c) AS (SELECT 2)
  SELECT max(c) AS c FROM (
    WITH t(c) AS (SELECT 3)
    SELECT * FROM t
  )
)
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t
:     +- Project [1#x AS c#x]
:        +- Project [1 AS 1#x]
:           +- OneRowRelation
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t
:     +- Project [2#x AS c#x]
:        +- Project [2 AS 2#x]
:           +- OneRowRelation
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t
:     +- Project [3#x AS c#x]
:        +- Project [3 AS 3#x]
:           +- OneRowRelation
+- Aggregate [sum(c#x) AS sum(c)#xL]
   +- SubqueryAlias __auto_generated_subquery_name
      +- Aggregate [max(c#x) AS c#x]
         +- SubqueryAlias __auto_generated_subquery_name
            +- Project [c#x]
               +- SubqueryAlias t
                  +- CTERelationRef xxxx, true, [c#x], false, false


-- !query
WITH t AS (SELECT 1)
SELECT (
  WITH t AS (SELECT 2)
  SELECT * FROM t
)
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_ALIAS_IN_NESTED_CTE",
  "sqlState" : "42KD0",
  "messageParameters" : {
    "config" : "\"spark.sql.legacy.ctePrecedencePolicy\"",
    "docroot" : "https://spark.apache.org/docs/latest",
    "name" : "`t`"
  }
}


-- !query
WITH t AS (SELECT 1)
SELECT (
  SELECT (
    WITH t AS (SELECT 2)
    SELECT * FROM t
  )
)
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_ALIAS_IN_NESTED_CTE",
  "sqlState" : "42KD0",
  "messageParameters" : {
    "config" : "\"spark.sql.legacy.ctePrecedencePolicy\"",
    "docroot" : "https://spark.apache.org/docs/latest",
    "name" : "`t`"
  }
}


-- !query
WITH t AS (SELECT 1)
SELECT (
  WITH t AS (SELECT 2)
  SELECT (
    WITH t AS (SELECT 3)
    SELECT * FROM t
  )
)
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_ALIAS_IN_NESTED_CTE",
  "sqlState" : "42KD0",
  "messageParameters" : {
    "config" : "\"spark.sql.legacy.ctePrecedencePolicy\"",
    "docroot" : "https://spark.apache.org/docs/latest",
    "name" : "`t`"
  }
}


-- !query
WITH t(c) AS (SELECT 1)
SELECT * FROM t
WHERE c IN (
  WITH t(c) AS (SELECT 2)
  SELECT * FROM t
)
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_ALIAS_IN_NESTED_CTE",
  "sqlState" : "42KD0",
  "messageParameters" : {
    "config" : "\"spark.sql.legacy.ctePrecedencePolicy\"",
    "docroot" : "https://spark.apache.org/docs/latest",
    "name" : "`t`"
  }
}


-- !query
WITH
  t AS (
    WITH t2 AS (SELECT 1)
    SELECT * FROM t2
  ),
  t2 AS (SELECT 2)
SELECT * FROM t
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t2
:     +- Project [1 AS 1#x]
:        +- OneRowRelation
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t
:     +- Project [1#x]
:        +- SubqueryAlias t2
:           +- CTERelationRef xxxx, true, [1#x], false, false
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t2
:     +- Project [2 AS 2#x]
:        +- OneRowRelation
+- Project [1#x]
   +- SubqueryAlias t
      +- CTERelationRef xxxx, true, [1#x], false, false


-- !query
WITH
  abc AS (SELECT 1),
  t AS (
    WITH aBc AS (SELECT 2)
    SELECT * FROM aBC
  )
SELECT * FROM t
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_ALIAS_IN_NESTED_CTE",
  "sqlState" : "42KD0",
  "messageParameters" : {
    "config" : "\"spark.sql.legacy.ctePrecedencePolicy\"",
    "docroot" : "https://spark.apache.org/docs/latest",
    "name" : "`aBc`"
  }
}


-- !query
WITH abc AS (SELECT 1)
SELECT (
  WITH aBc AS (SELECT 2)
  SELECT * FROM aBC
)
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_ALIAS_IN_NESTED_CTE",
  "sqlState" : "42KD0",
  "messageParameters" : {
    "config" : "\"spark.sql.legacy.ctePrecedencePolicy\"",
    "docroot" : "https://spark.apache.org/docs/latest",
    "name" : "`aBc`"
  }
}


-- !query
WITH
  t1 AS (SELECT 1),
  t2 AS (
    WITH t3 AS (
      SELECT * FROM t1
    )
    SELECT * FROM t3
  )
SELECT * FROM t2
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t1
:     +- Project [1 AS 1#x]
:        +- OneRowRelation
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t3
:     +- Project [1#x]
:        +- SubqueryAlias t1
:           +- CTERelationRef xxxx, true, [1#x], false, false
:- CTERelationDef xxxx, false
:  +- SubqueryAlias t2
:     +- Project [1#x]
:        +- SubqueryAlias t3
:           +- CTERelationRef xxxx, true, [1#x], false, false
+- Project [1#x]
   +- SubqueryAlias t2
      +- CTERelationRef xxxx, true, [1#x], false, false


-- !query
WITH cte_outer AS (
  SELECT 1
)
SELECT * FROM (
  WITH cte_inner AS (
    SELECT * FROM cte_outer
  )
  SELECT * FROM cte_inner
)
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias cte_outer
:     +- Project [1 AS 1#x]
:        +- OneRowRelation
:- CTERelationDef xxxx, false
:  +- SubqueryAlias cte_inner
:     +- Project [1#x]
:        +- SubqueryAlias cte_outer
:           +- CTERelationRef xxxx, true, [1#x], false, false
+- Project [1#x]
   +- SubqueryAlias __auto_generated_subquery_name
      +- Project [1#x]
         +- SubqueryAlias cte_inner
            +- CTERelationRef xxxx, true, [1#x], false, false


-- !query
WITH cte_outer AS (
  SELECT 1
)
SELECT * FROM (
  WITH cte_inner AS (
    SELECT * FROM (
      WITH cte_inner_inner AS (
        SELECT * FROM cte_outer
      )
      SELECT * FROM cte_inner_inner
    )
  )
  SELECT * FROM cte_inner
)
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias cte_outer
:     +- Project [1 AS 1#x]
:        +- OneRowRelation
:- CTERelationDef xxxx, false
:  +- SubqueryAlias cte_inner_inner
:     +- Project [1#x]
:        +- SubqueryAlias cte_outer
:           +- CTERelationRef xxxx, true, [1#x], false, false
:- CTERelationDef xxxx, false
:  +- SubqueryAlias cte_inner
:     +- Project [1#x]
:        +- SubqueryAlias __auto_generated_subquery_name
:           +- Project [1#x]
:              +- SubqueryAlias cte_inner_inner
:                 +- CTERelationRef xxxx, true, [1#x], false, false
+- Project [1#x]
   +- SubqueryAlias __auto_generated_subquery_name
      +- Project [1#x]
         +- SubqueryAlias cte_inner
            +- CTERelationRef xxxx, true, [1#x], false, false


-- !query
WITH cte_outer AS (
  WITH cte_invisible_inner AS (
    SELECT 1
  )
  SELECT * FROM cte_invisible_inner
)
SELECT * FROM (
  WITH cte_inner AS (
    SELECT * FROM cte_invisible_inner
  )
  SELECT * FROM cte_inner
)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`cte_invisible_inner`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 164,
    "stopIndex" : 182,
    "fragment" : "cte_invisible_inner"
  } ]
}


-- !query
WITH cte_outer AS (
  SELECT * FROM (
    WITH cte_invisible_inner AS (
      SELECT 1
    )
    SELECT * FROM cte_invisible_inner
  )
)
SELECT * FROM (
  WITH cte_inner AS (
    SELECT * FROM cte_invisible_inner
  )
  SELECT * FROM cte_inner
)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`cte_invisible_inner`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 194,
    "stopIndex" : 212,
    "fragment" : "cte_invisible_inner"
  } ]
}
