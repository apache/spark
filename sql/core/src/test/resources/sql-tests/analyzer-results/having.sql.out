-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view hav as select * from values
  ("one", 1),
  ("two", 2),
  ("three", 3),
  ("one", 5)
  as hav(k, v)
-- !query analysis
CreateViewCommand `hav`, select * from values
  ("one", 1),
  ("two", 2),
  ("three", 3),
  ("one", 5)
  as hav(k, v), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [k#x, v#x]
      +- SubqueryAlias hav
         +- LocalRelation [k#x, v#x]


-- !query
SELECT k, sum(v) FROM hav GROUP BY k HAVING sum(v) > 2
-- !query analysis
Filter (sum(v)#xL > cast(2 as bigint))
+- Aggregate [k#x], [k#x, sum(v#x) AS sum(v)#xL]
   +- SubqueryAlias hav
      +- View (`hav`, [k#x, v#x])
         +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
            +- Project [k#x, v#x]
               +- SubqueryAlias hav
                  +- LocalRelation [k#x, v#x]


-- !query
SELECT count(k) FROM hav GROUP BY v + 1 HAVING v + 1 = 2
-- !query analysis
Project [count(k)#xL]
+- Filter ((v#x + 1)#x = 2)
   +- Aggregate [(v#x + 1)], [count(k#x) AS count(k)#xL, (v#x + 1) AS (v#x + 1)#x]
      +- SubqueryAlias hav
         +- View (`hav`, [k#x, v#x])
            +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
               +- Project [k#x, v#x]
                  +- SubqueryAlias hav
                     +- LocalRelation [k#x, v#x]


-- !query
SELECT count(k) FROM hav GROUP BY v HAVING v = array(1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"INT\"",
    "right" : "\"ARRAY<INT>\"",
    "sqlExpr" : "\"(v = array(1))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 44,
    "stopIndex" : 55,
    "fragment" : "v = array(1)"
  } ]
}


-- !query
SELECT MIN(t.v) FROM (SELECT * FROM hav WHERE v > 0) t HAVING(COUNT(1) > 0)
-- !query analysis
Project [min(v)#x]
+- Filter (count(1)#xL > cast(0 as bigint))
   +- Aggregate [min(v#x) AS min(v)#x, count(1) AS count(1)#xL]
      +- SubqueryAlias t
         +- Project [k#x, v#x]
            +- Filter (v#x > 0)
               +- SubqueryAlias hav
                  +- View (`hav`, [k#x, v#x])
                     +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
                        +- Project [k#x, v#x]
                           +- SubqueryAlias hav
                              +- LocalRelation [k#x, v#x]


-- !query
SELECT a + b FROM VALUES (1L, 2), (3L, 4) AS T(a, b) GROUP BY a + b HAVING a + b > 1
-- !query analysis
Filter ((a + b)#xL > cast(1 as bigint))
+- Aggregate [(a#xL + cast(b#x as bigint))], [(a#xL + cast(b#x as bigint)) AS (a + b)#xL]
   +- SubqueryAlias T
      +- LocalRelation [a#xL, b#x]


-- !query
SELECT SUM(a) AS b, CAST('2020-01-01' AS DATE) AS fake FROM VALUES (1, 10), (2, 20) AS T(a, b) GROUP BY b HAVING b > 10
-- !query analysis
Project [b#xL, fake#x]
+- Filter (b#x > 10)
   +- Aggregate [b#x], [sum(a#x) AS b#xL, cast(2020-01-01 as date) AS fake#x, b#x]
      +- SubqueryAlias T
         +- LocalRelation [a#x, b#x]


-- !query
SELECT SUM(a) AS b FROM VALUES (1, 10), (2, 20) AS T(a, b) GROUP BY GROUPING SETS ((b), (a, b)) HAVING b > 10
-- !query analysis
Project [b#xL]
+- Filter (b#x > 10)
   +- Aggregate [b#x, a#x, spark_grouping_id#xL], [sum(a#x) AS b#xL, b#x]
      +- Expand [[a#x, b#x, b#x, null, 1], [a#x, b#x, b#x, a#x, 0]], [a#x, b#x, b#x, a#x, spark_grouping_id#xL]
         +- Project [a#x, b#x, b#x AS b#x, a#x AS a#x]
            +- SubqueryAlias T
               +- LocalRelation [a#x, b#x]


-- !query
SELECT SUM(a) AS b FROM VALUES (1, 10), (2, 20) AS T(a, b) GROUP BY CUBE(a, b) HAVING b > 10
-- !query analysis
Project [b#xL]
+- Filter (b#x > 10)
   +- Aggregate [a#x, b#x, spark_grouping_id#xL], [sum(a#x) AS b#xL, b#x]
      +- Expand [[a#x, b#x, a#x, b#x, 0], [a#x, b#x, a#x, null, 1], [a#x, b#x, null, b#x, 2], [a#x, b#x, null, null, 3]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL]
         +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
            +- SubqueryAlias T
               +- LocalRelation [a#x, b#x]


-- !query
SELECT SUM(a) AS b FROM VALUES (1, 10), (2, 20) AS T(a, b) GROUP BY ROLLUP(a, b) HAVING b > 10
-- !query analysis
Project [b#xL]
+- Filter (b#x > 10)
   +- Aggregate [a#x, b#x, spark_grouping_id#xL], [sum(a#x) AS b#xL, b#x]
      +- Expand [[a#x, b#x, a#x, b#x, 0], [a#x, b#x, a#x, null, 1], [a#x, b#x, null, null, 3]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL]
         +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
            +- SubqueryAlias T
               +- LocalRelation [a#x, b#x]


-- !query
SELECT c1 FROM VALUES (1, 2) as t(c1, c2) GROUP BY GROUPING SETS(t.c1) HAVING t.c1 = 1
-- !query analysis
Filter (c1#x = 1)
+- Aggregate [c1#x, spark_grouping_id#xL], [c1#x]
   +- Expand [[c1#x, c2#x, c1#x, 0]], [c1#x, c2#x, c1#x, spark_grouping_id#xL]
      +- Project [c1#x, c2#x, c1#x AS c1#x]
         +- SubqueryAlias t
            +- LocalRelation [c1#x, c2#x]


-- !query
SELECT c1 FROM VALUES (1, 2) as t(c1, c2) GROUP BY CUBE(t.c1) HAVING t.c1 = 1
-- !query analysis
Filter (c1#x = 1)
+- Aggregate [c1#x, spark_grouping_id#xL], [c1#x]
   +- Expand [[c1#x, c2#x, c1#x, 0], [c1#x, c2#x, null, 1]], [c1#x, c2#x, c1#x, spark_grouping_id#xL]
      +- Project [c1#x, c2#x, c1#x AS c1#x]
         +- SubqueryAlias t
            +- LocalRelation [c1#x, c2#x]


-- !query
SELECT c1 FROM VALUES (1, 2) as t(c1, c2) GROUP BY ROLLUP(t.c1) HAVING t.c1 = 1
-- !query analysis
Filter (c1#x = 1)
+- Aggregate [c1#x, spark_grouping_id#xL], [c1#x]
   +- Expand [[c1#x, c2#x, c1#x, 0], [c1#x, c2#x, null, 1]], [c1#x, c2#x, c1#x, spark_grouping_id#xL]
      +- Project [c1#x, c2#x, c1#x AS c1#x]
         +- SubqueryAlias t
            +- LocalRelation [c1#x, c2#x]


-- !query
SELECT c1 FROM VALUES (1, 2) as t(c1, c2) GROUP BY t.c1 HAVING t.c1 = 1
-- !query analysis
Filter (c1#x = 1)
+- Aggregate [c1#x], [c1#x]
   +- SubqueryAlias t
      +- LocalRelation [c1#x, c2#x]


-- !query
SELECT k, sum(v) FROM hav GROUP BY k HAVING sum(v) > 2 ORDER BY sum(v)
-- !query analysis
Sort [sum(v)#xL ASC NULLS FIRST], true
+- Filter (sum(v)#xL > cast(2 as bigint))
   +- Aggregate [k#x], [k#x, sum(v#x) AS sum(v)#xL]
      +- SubqueryAlias hav
         +- View (`hav`, [k#x, v#x])
            +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
               +- Project [k#x, v#x]
                  +- SubqueryAlias hav
                     +- LocalRelation [k#x, v#x]


-- !query
SELECT k, sum(v) FROM hav GROUP BY k HAVING sum(v) > 2 ORDER BY avg(v)
-- !query analysis
Project [k#x, sum(v)#xL]
+- Sort [avg(v#x)#x ASC NULLS FIRST], true
   +- Filter (sum(v)#xL > cast(2 as bigint))
      +- Aggregate [k#x], [k#x, sum(v#x) AS sum(v)#xL, avg(v#x) AS avg(v#x)#x]
         +- SubqueryAlias hav
            +- View (`hav`, [k#x, v#x])
               +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
                  +- Project [k#x, v#x]
                     +- SubqueryAlias hav
                        +- LocalRelation [k#x, v#x]
