-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view stuff as select * from values
  (42, 9.75, 'hello world', '1970-08-07', '13.37', array(1,20,300)),
  (1337, 1.2345, 'oh no', '2000-01-01', '42.0', array(4000,50000,600000)),
  (42, 13.37, 'test', '1970-08-07', '1234567890', array(7000000,80000000,900000000))
  as stuff(i, f, s, t, d, a)
-- !query analysis
CreateViewCommand `stuff`, select * from values
  (42, 9.75, 'hello world', '1970-08-07', '13.37', array(1,20,300)),
  (1337, 1.2345, 'oh no', '2000-01-01', '42.0', array(4000,50000,600000)),
  (42, 13.37, 'test', '1970-08-07', '1234567890', array(7000000,80000000,900000000))
  as stuff(i, f, s, t, d, a), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [i#x, f#x, s#x, t#x, d#x, a#x]
      +- SubqueryAlias stuff
         +- LocalRelation [i#x, f#x, s#x, t#x, d#x, a#x]


-- !query
SELECT 100 * SUM(i) + SUM(f) / COUNT(s) AS f1, i AS f2 FROM stuff GROUP BY ALL ORDER BY f2
-- !query analysis
Sort [f2#x ASC NULLS FIRST], true
+- Aggregate [i#x], [(cast((cast(100 as bigint) * sum(i#x)) as decimal(20,0)) + (sum(f#x) / cast(count(s#x) as decimal(20,0)))) AS f1#x, i#x AS f2#x]
   +- SubqueryAlias stuff
      +- View (`stuff`, [i#x, f#x, s#x, t#x, d#x, a#x])
         +- Project [cast(i#x as int) AS i#x, cast(f#x as decimal(6,4)) AS f#x, cast(s#x as string) AS s#x, cast(t#x as string) AS t#x, cast(d#x as string) AS d#x, cast(a#x as array<int>) AS a#x]
            +- Project [i#x, f#x, s#x, t#x, d#x, a#x]
               +- SubqueryAlias stuff
                  +- LocalRelation [i#x, f#x, s#x, t#x, d#x, a#x]


-- !query
SELECT i + 1 AS i1, COUNT(i - 2) ci, f / i AS fi, SUM(i + f) sif FROM stuff GROUP BY ALL ORDER BY 1, 3
-- !query analysis
Sort [i1#x ASC NULLS FIRST, fi#x ASC NULLS FIRST], true
+- Aggregate [(i#x + 1), (f#x / cast(i#x as decimal(10,0)))], [(i#x + 1) AS i1#x, count((i#x - 2)) AS ci#xL, (f#x / cast(i#x as decimal(10,0))) AS fi#x, sum((cast(i#x as decimal(10,0)) + f#x)) AS sif#x]
   +- SubqueryAlias stuff
      +- View (`stuff`, [i#x, f#x, s#x, t#x, d#x, a#x])
         +- Project [cast(i#x as int) AS i#x, cast(f#x as decimal(6,4)) AS f#x, cast(s#x as string) AS s#x, cast(t#x as string) AS t#x, cast(d#x as string) AS d#x, cast(a#x as array<int>) AS a#x]
            +- Project [i#x, f#x, s#x, t#x, d#x, a#x]
               +- SubqueryAlias stuff
                  +- LocalRelation [i#x, f#x, s#x, t#x, d#x, a#x]


-- !query
SELECT i AS i, COUNT(i) ci, f AS f, SUM(i + f) sif FROM stuff GROUP BY ALL ORDER BY 1, i, 2, ci, 3, f, 4, sif
-- !query analysis
Sort [i#x ASC NULLS FIRST, i#x ASC NULLS FIRST, ci#xL ASC NULLS FIRST, ci#xL ASC NULLS FIRST, f#x ASC NULLS FIRST, f#x ASC NULLS FIRST, sif#x ASC NULLS FIRST, sif#x ASC NULLS FIRST], true
+- Aggregate [i#x, f#x], [i#x AS i#x, count(i#x) AS ci#xL, f#x AS f#x, sum((cast(i#x as decimal(10,0)) + f#x)) AS sif#x]
   +- SubqueryAlias stuff
      +- View (`stuff`, [i#x, f#x, s#x, t#x, d#x, a#x])
         +- Project [cast(i#x as int) AS i#x, cast(f#x as decimal(6,4)) AS f#x, cast(s#x as string) AS s#x, cast(t#x as string) AS t#x, cast(d#x as string) AS d#x, cast(a#x as array<int>) AS a#x]
            +- Project [i#x, f#x, s#x, t#x, d#x, a#x]
               +- SubqueryAlias stuff
                  +- LocalRelation [i#x, f#x, s#x, t#x, d#x, a#x]


-- !query
SELECT i + 1, f / i, substring(s, 2, 3), extract(year from t), octet_length(d), size(a) FROM stuff
GROUP BY ALL ORDER BY 1, 3, 4, 5, 6, 2
-- !query analysis
Sort [(i + 1)#x ASC NULLS FIRST, substring(s, 2, 3)#x ASC NULLS FIRST, extract(year FROM t)#x ASC NULLS FIRST, octet_length(d)#x ASC NULLS FIRST, size(a)#x ASC NULLS FIRST, (f / i)#x ASC NULLS FIRST], true
+- Aggregate [(i#x + 1), (f#x / cast(i#x as decimal(10,0))), substring(s#x, 2, 3), extract(year, t#x), octet_length(d#x), size(a#x, false)], [(i#x + 1) AS (i + 1)#x, (f#x / cast(i#x as decimal(10,0))) AS (f / i)#x, substring(s#x, 2, 3) AS substring(s, 2, 3)#x, extract(year, t#x) AS extract(year FROM t)#x, octet_length(d#x) AS octet_length(d)#x, size(a#x, false) AS size(a)#x]
   +- SubqueryAlias stuff
      +- View (`stuff`, [i#x, f#x, s#x, t#x, d#x, a#x])
         +- Project [cast(i#x as int) AS i#x, cast(f#x as decimal(6,4)) AS f#x, cast(s#x as string) AS s#x, cast(t#x as string) AS t#x, cast(d#x as string) AS d#x, cast(a#x as array<int>) AS a#x]
            +- Project [i#x, f#x, s#x, t#x, d#x, a#x]
               +- SubqueryAlias stuff
                  +- LocalRelation [i#x, f#x, s#x, t#x, d#x, a#x]


-- !query
SELECT i + SUM(f) FROM stuff GROUP BY ALL
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_ALL_IN_GROUP_BY",
  "sqlState" : "42803",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 30,
    "stopIndex" : 41,
    "fragment" : "GROUP BY ALL"
  } ]
}


-- !query
SELECT s AS s, COUNT(*) c FROM stuff GROUP BY ALL HAVING SUM(f) > 0 ORDER BY s
-- !query analysis
Sort [s#x ASC NULLS FIRST], true
+- Project [s#x, c#xL]
   +- Filter (sum(f#x)#x > cast(cast(0 as decimal(1,0)) as decimal(16,4)))
      +- Aggregate [s#x], [s#x AS s#x, count(1) AS c#xL, sum(f#x) AS sum(f#x)#x]
         +- SubqueryAlias stuff
            +- View (`stuff`, [i#x, f#x, s#x, t#x, d#x, a#x])
               +- Project [cast(i#x as int) AS i#x, cast(f#x as decimal(6,4)) AS f#x, cast(s#x as string) AS s#x, cast(t#x as string) AS t#x, cast(d#x as string) AS d#x, cast(a#x as array<int>) AS a#x]
                  +- Project [i#x, f#x, s#x, t#x, d#x, a#x]
                     +- SubqueryAlias stuff
                        +- LocalRelation [i#x, f#x, s#x, t#x, d#x, a#x]


-- !query
SELECT SUM(i) si FROM stuff GROUP BY ALL HAVING si > 2
-- !query analysis
Filter (si#xL > cast(2 as bigint))
+- Aggregate [sum(i#x) AS si#xL]
   +- SubqueryAlias stuff
      +- View (`stuff`, [i#x, f#x, s#x, t#x, d#x, a#x])
         +- Project [cast(i#x as int) AS i#x, cast(f#x as decimal(6,4)) AS f#x, cast(s#x as string) AS s#x, cast(t#x as string) AS t#x, cast(d#x as string) AS d#x, cast(a#x as array<int>) AS a#x]
            +- Project [i#x, f#x, s#x, t#x, d#x, a#x]
               +- SubqueryAlias stuff
                  +- LocalRelation [i#x, f#x, s#x, t#x, d#x, a#x]


-- !query
SELECT SUM(i) si FROM stuff GROUP BY ALL HAVING si < 2
-- !query analysis
Filter (si#xL < cast(2 as bigint))
+- Aggregate [sum(i#x) AS si#xL]
   +- SubqueryAlias stuff
      +- View (`stuff`, [i#x, f#x, s#x, t#x, d#x, a#x])
         +- Project [cast(i#x as int) AS i#x, cast(f#x as decimal(6,4)) AS f#x, cast(s#x as string) AS s#x, cast(t#x as string) AS t#x, cast(d#x as string) AS d#x, cast(a#x as array<int>) AS a#x]
            +- Project [i#x, f#x, s#x, t#x, d#x, a#x]
               +- SubqueryAlias stuff
                  +- LocalRelation [i#x, f#x, s#x, t#x, d#x, a#x]


-- !query
SELECT SUM(i) si FROM stuff GROUP BY ALL HAVING i > 2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`i`",
    "proposal" : "`si`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 49,
    "stopIndex" : 49,
    "fragment" : "i"
  } ]
}


-- !query
SELECT SUM(i) si FROM stuff GROUP BY ALL ORDER BY i DESC
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`i`",
    "proposal" : "`si`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 51,
    "stopIndex" : 51,
    "fragment" : "i"
  } ]
}
