-- Automatically generated by SQLQueryTestSuite
-- !query
create table spark_10747(col1 int, col2 int, col3 int) using parquet
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`spark_10747`, false


-- !query
INSERT INTO spark_10747 VALUES (6, 12, 10), (6, 11, 4), (6, 9, 10), (6, 15, 8),
(6, 15, 8), (6, 7, 4), (6, 7, 8), (6, 13, null), (6, 10, null)
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/spark_10747, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/spark_10747], Append, `spark_catalog`.`default`.`spark_10747`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/spark_10747), [col1, col2, col3]
+- LocalRelation [col1#x, col2#x, col3#x]


-- !query
select col1, col2, col3, sum(col2)
    over (partition by col1
       order by col3 desc nulls last, col2
       rows between 2 preceding and 2 following ) as sum_col2
from spark_10747 where col1 = 6 order by sum_col2
-- !query analysis
Sort [sum_col2#xL ASC NULLS FIRST], true
+- Project [col1#x, col2#x, col3#x, sum_col2#xL]
   +- Project [col1#x, col2#x, col3#x, sum_col2#xL, sum_col2#xL]
      +- Window [sum(col2#x) windowspecdefinition(col1#x, col3#x DESC NULLS LAST, col2#x ASC NULLS FIRST, specifiedwindowframe(RowFrame, -2, 2)) AS sum_col2#xL], [col1#x], [col3#x DESC NULLS LAST, col2#x ASC NULLS FIRST]
         +- Project [col1#x, col2#x, col3#x]
            +- Filter (col1#x = 6)
               +- SubqueryAlias spark_catalog.default.spark_10747
                  +- Relation spark_catalog.default.spark_10747[col1#x,col2#x,col3#x] parquet


-- !query
select col1, col2, col3, sum(col2)
    over (partition by col1
       order by col3 desc nulls first, col2
       rows between 2 preceding and 2 following ) as sum_col2
from spark_10747 where col1 = 6 order by sum_col2
-- !query analysis
Sort [sum_col2#xL ASC NULLS FIRST], true
+- Project [col1#x, col2#x, col3#x, sum_col2#xL]
   +- Project [col1#x, col2#x, col3#x, sum_col2#xL, sum_col2#xL]
      +- Window [sum(col2#x) windowspecdefinition(col1#x, col3#x DESC NULLS FIRST, col2#x ASC NULLS FIRST, specifiedwindowframe(RowFrame, -2, 2)) AS sum_col2#xL], [col1#x], [col3#x DESC NULLS FIRST, col2#x ASC NULLS FIRST]
         +- Project [col1#x, col2#x, col3#x]
            +- Filter (col1#x = 6)
               +- SubqueryAlias spark_catalog.default.spark_10747
                  +- Relation spark_catalog.default.spark_10747[col1#x,col2#x,col3#x] parquet


-- !query
select col1, col2, col3, sum(col2)
    over (partition by col1
       order by col3 asc nulls last, col2
       rows between 2 preceding and 2 following ) as sum_col2
from spark_10747 where col1 = 6 order by sum_col2
-- !query analysis
Sort [sum_col2#xL ASC NULLS FIRST], true
+- Project [col1#x, col2#x, col3#x, sum_col2#xL]
   +- Project [col1#x, col2#x, col3#x, sum_col2#xL, sum_col2#xL]
      +- Window [sum(col2#x) windowspecdefinition(col1#x, col3#x ASC NULLS LAST, col2#x ASC NULLS FIRST, specifiedwindowframe(RowFrame, -2, 2)) AS sum_col2#xL], [col1#x], [col3#x ASC NULLS LAST, col2#x ASC NULLS FIRST]
         +- Project [col1#x, col2#x, col3#x]
            +- Filter (col1#x = 6)
               +- SubqueryAlias spark_catalog.default.spark_10747
                  +- Relation spark_catalog.default.spark_10747[col1#x,col2#x,col3#x] parquet


-- !query
select col1, col2, col3, sum(col2)
    over (partition by col1
       order by col3 asc nulls first, col2
       rows between 2 preceding and 2 following ) as sum_col2
from spark_10747 where col1 = 6 order by sum_col2
-- !query analysis
Sort [sum_col2#xL ASC NULLS FIRST], true
+- Project [col1#x, col2#x, col3#x, sum_col2#xL]
   +- Project [col1#x, col2#x, col3#x, sum_col2#xL, sum_col2#xL]
      +- Window [sum(col2#x) windowspecdefinition(col1#x, col3#x ASC NULLS FIRST, col2#x ASC NULLS FIRST, specifiedwindowframe(RowFrame, -2, 2)) AS sum_col2#xL], [col1#x], [col3#x ASC NULLS FIRST, col2#x ASC NULLS FIRST]
         +- Project [col1#x, col2#x, col3#x]
            +- Filter (col1#x = 6)
               +- SubqueryAlias spark_catalog.default.spark_10747
                  +- Relation spark_catalog.default.spark_10747[col1#x,col2#x,col3#x] parquet


-- !query
SELECT COL1, COL2, COL3 FROM spark_10747 ORDER BY COL3 ASC NULLS FIRST, COL2
-- !query analysis
Sort [COL3#x ASC NULLS FIRST, COL2#x ASC NULLS FIRST], true
+- Project [COL1#x, COL2#x, COL3#x]
   +- SubqueryAlias spark_catalog.default.spark_10747
      +- Relation spark_catalog.default.spark_10747[col1#x,col2#x,col3#x] parquet


-- !query
SELECT COL1, COL2, COL3 FROM spark_10747 ORDER BY COL3 NULLS LAST, COL2
-- !query analysis
Sort [COL3#x ASC NULLS LAST, COL2#x ASC NULLS FIRST], true
+- Project [COL1#x, COL2#x, COL3#x]
   +- SubqueryAlias spark_catalog.default.spark_10747
      +- Relation spark_catalog.default.spark_10747[col1#x,col2#x,col3#x] parquet


-- !query
SELECT COL1, COL2, COL3 FROM spark_10747 ORDER BY COL3 DESC NULLS FIRST, COL2
-- !query analysis
Sort [COL3#x DESC NULLS FIRST, COL2#x ASC NULLS FIRST], true
+- Project [COL1#x, COL2#x, COL3#x]
   +- SubqueryAlias spark_catalog.default.spark_10747
      +- Relation spark_catalog.default.spark_10747[col1#x,col2#x,col3#x] parquet


-- !query
SELECT COL1, COL2, COL3 FROM spark_10747 ORDER BY COL3 DESC NULLS LAST, COL2
-- !query analysis
Sort [COL3#x DESC NULLS LAST, COL2#x ASC NULLS FIRST], true
+- Project [COL1#x, COL2#x, COL3#x]
   +- SubqueryAlias spark_catalog.default.spark_10747
      +- Relation spark_catalog.default.spark_10747[col1#x,col2#x,col3#x] parquet


-- !query
drop table spark_10747
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.spark_10747


-- !query
create table spark_10747_mix(
col1 string,
col2 int,
col3 double,
col4 decimal(10,2),
col5 decimal(20,1))
using parquet
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`spark_10747_mix`, false


-- !query
INSERT INTO spark_10747_mix VALUES
('b', 2, 1.0, 1.00, 10.0),
('d', 3, 2.0, 3.00, 0.0),
('c', 3, 2.0, 2.00, 15.1),
('d', 3, 0.0, 3.00, 1.0),
(null, 3, 0.0, 3.00, 1.0),
('d', 3, null, 4.00, 1.0),
('a', 1, 1.0, 1.00, null),
('c', 3, 2.0, 2.00, null)
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/spark_10747_mix, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/spark_10747_mix], Append, `spark_catalog`.`default`.`spark_10747_mix`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/spark_10747_mix), [col1, col2, col3, col4, col5]
+- Project [col1#x, col2#x, cast(col3#x as double) AS col3#x, cast(col4#x as decimal(10,2)) AS col4#x, cast(col5#x as decimal(20,1)) AS col5#x]
   +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]


-- !query
select * from spark_10747_mix order by col1 nulls last, col5 nulls last
-- !query analysis
Sort [col1#x ASC NULLS LAST, col5#x ASC NULLS LAST], true
+- Project [col1#x, col2#x, col3#x, col4#x, col5#x]
   +- SubqueryAlias spark_catalog.default.spark_10747_mix
      +- Relation spark_catalog.default.spark_10747_mix[col1#x,col2#x,col3#x,col4#x,col5#x] parquet


-- !query
select * from spark_10747_mix order by col1 desc nulls first, col5 desc nulls first
-- !query analysis
Sort [col1#x DESC NULLS FIRST, col5#x DESC NULLS FIRST], true
+- Project [col1#x, col2#x, col3#x, col4#x, col5#x]
   +- SubqueryAlias spark_catalog.default.spark_10747_mix
      +- Relation spark_catalog.default.spark_10747_mix[col1#x,col2#x,col3#x,col4#x,col5#x] parquet


-- !query
select * from spark_10747_mix order by col5 desc nulls first, col3 desc nulls last
-- !query analysis
Sort [col5#x DESC NULLS FIRST, col3#x DESC NULLS LAST], true
+- Project [col1#x, col2#x, col3#x, col4#x, col5#x]
   +- SubqueryAlias spark_catalog.default.spark_10747_mix
      +- Relation spark_catalog.default.spark_10747_mix[col1#x,col2#x,col3#x,col4#x,col5#x] parquet


-- !query
drop table spark_10747_mix
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.spark_10747_mix
