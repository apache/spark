-- Automatically generated by SQLQueryTestSuite
-- !query
DROP TABLE IF EXISTS t1
-- !query analysis
DropTable true, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.t1


-- !query
DROP VIEW  IF EXISTS v1
-- !query analysis
DropTableCommand `spark_catalog`.`default`.`v1`, true, true, false


-- !query
CREATE TABLE t1 (col1 STRING, col2 STRING, col3 STRING)
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`t1`, false


-- !query
CREATE VIEW v1 as SELECT * FROM t1
-- !query analysis
CreateViewCommand `spark_catalog`.`default`.`v1`, SELECT * FROM t1, false, false, PersistedView, COMPENSATION, true
   +- Project [col1#x, col2#x, col3#x]
      +- SubqueryAlias spark_catalog.default.t1
         +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet


-- !query
SELECT *
FROM (
         SELECT col1, col2 FROM t1
         UNION
         SELECT col3, col2 FROM t1
         UNION
         SELECT col2, col2 FROM t1
     )
-- !query analysis
Project [col1#x, col2#x]
+- SubqueryAlias __auto_generated_subquery_name
   +- Distinct
      +- Union false, false
         :- Distinct
         :  +- Union false, false
         :     :- Project [col1#x, col2#x]
         :     :  +- SubqueryAlias spark_catalog.default.t1
         :     :     +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         :     +- Project [col3#x, col2#x]
         :        +- SubqueryAlias spark_catalog.default.t1
         :           +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         +- Project [col2#x, col2#x AS col2#x]
            +- Project [col2#x, col2#x]
               +- SubqueryAlias spark_catalog.default.t1
                  +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet


-- !query
SELECT *
FROM (
         SELECT col1, col2 FROM v1
         UNION
         SELECT col3, col2 FROM v1
         UNION
         SELECT col2, col2 FROM v1
     )
-- !query analysis
Project [col1#x, col2#x]
+- SubqueryAlias __auto_generated_subquery_name
   +- Distinct
      +- Union false, false
         :- Distinct
         :  +- Union false, false
         :     :- Project [col1#x, col2#x]
         :     :  +- SubqueryAlias spark_catalog.default.v1
         :     :     +- View (`spark_catalog`.`default`.`v1`, [col1#x, col2#x, col3#x])
         :     :        +- Project [cast(col1#x as string) AS col1#x, cast(col2#x as string) AS col2#x, cast(col3#x as string) AS col3#x]
         :     :           +- Project [col1#x, col2#x, col3#x]
         :     :              +- SubqueryAlias spark_catalog.default.t1
         :     :                 +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         :     +- Project [col3#x, col2#x]
         :        +- SubqueryAlias spark_catalog.default.v1
         :           +- View (`spark_catalog`.`default`.`v1`, [col1#x, col2#x, col3#x])
         :              +- Project [cast(col1#x as string) AS col1#x, cast(col2#x as string) AS col2#x, cast(col3#x as string) AS col3#x]
         :                 +- Project [col1#x, col2#x, col3#x]
         :                    +- SubqueryAlias spark_catalog.default.t1
         :                       +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         +- Project [col2#x, col2#x AS col2#x]
            +- Project [col2#x, col2#x]
               +- SubqueryAlias spark_catalog.default.v1
                  +- View (`spark_catalog`.`default`.`v1`, [col1#x, col2#x, col3#x])
                     +- Project [cast(col1#x as string) AS col1#x, cast(col2#x as string) AS col2#x, cast(col3#x as string) AS col3#x]
                        +- Project [col1#x, col2#x, col3#x]
                           +- SubqueryAlias spark_catalog.default.t1
                              +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet


-- !query
SELECT *
FROM (
         SELECT col1, col2 FROM t1
         UNION
         SELECT col3, col2 FROM t1
         UNION
         SELECT col2, col2 FROM v1
     )
-- !query analysis
Project [col1#x, col2#x]
+- SubqueryAlias __auto_generated_subquery_name
   +- Distinct
      +- Union false, false
         :- Distinct
         :  +- Union false, false
         :     :- Project [col1#x, col2#x]
         :     :  +- SubqueryAlias spark_catalog.default.t1
         :     :     +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         :     +- Project [col3#x, col2#x]
         :        +- SubqueryAlias spark_catalog.default.t1
         :           +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         +- Project [col2#x, col2#x AS col2#x]
            +- Project [col2#x, col2#x]
               +- SubqueryAlias spark_catalog.default.v1
                  +- View (`spark_catalog`.`default`.`v1`, [col1#x, col2#x, col3#x])
                     +- Project [cast(col1#x as string) AS col1#x, cast(col2#x as string) AS col2#x, cast(col3#x as string) AS col3#x]
                        +- Project [col1#x, col2#x, col3#x]
                           +- SubqueryAlias spark_catalog.default.t1
                              +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet


-- !query
SELECT *
FROM (
         SELECT col1, col2 FROM t1
         UNION
         SELECT col3, col2 FROM v1
         UNION
         SELECT col2, col2 FROM t1
     )
-- !query analysis
Project [col1#x, col2#x]
+- SubqueryAlias __auto_generated_subquery_name
   +- Distinct
      +- Union false, false
         :- Distinct
         :  +- Union false, false
         :     :- Project [col1#x, col2#x]
         :     :  +- SubqueryAlias spark_catalog.default.t1
         :     :     +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         :     +- Project [col3#x, col2#x]
         :        +- SubqueryAlias spark_catalog.default.v1
         :           +- View (`spark_catalog`.`default`.`v1`, [col1#x, col2#x, col3#x])
         :              +- Project [cast(col1#x as string) AS col1#x, cast(col2#x as string) AS col2#x, cast(col3#x as string) AS col3#x]
         :                 +- Project [col1#x, col2#x, col3#x]
         :                    +- SubqueryAlias spark_catalog.default.t1
         :                       +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         +- Project [col2#x, col2#x AS col2#x]
            +- Project [col2#x, col2#x]
               +- SubqueryAlias spark_catalog.default.t1
                  +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet


-- !query
SELECT *
FROM (
         SELECT col1, col2 FROM v1
         UNION
         SELECT col3, col2 FROM t1
         UNION
         SELECT col2, col2 FROM t1
     )
-- !query analysis
Project [col1#x, col2#x]
+- SubqueryAlias __auto_generated_subquery_name
   +- Distinct
      +- Union false, false
         :- Distinct
         :  +- Union false, false
         :     :- Project [col1#x, col2#x]
         :     :  +- SubqueryAlias spark_catalog.default.v1
         :     :     +- View (`spark_catalog`.`default`.`v1`, [col1#x, col2#x, col3#x])
         :     :        +- Project [cast(col1#x as string) AS col1#x, cast(col2#x as string) AS col2#x, cast(col3#x as string) AS col3#x]
         :     :           +- Project [col1#x, col2#x, col3#x]
         :     :              +- SubqueryAlias spark_catalog.default.t1
         :     :                 +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         :     +- Project [col3#x, col2#x]
         :        +- SubqueryAlias spark_catalog.default.t1
         :           +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         +- Project [col2#x, col2#x AS col2#x]
            +- Project [col2#x, col2#x]
               +- SubqueryAlias spark_catalog.default.t1
                  +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet


-- !query
SELECT *
FROM (
         SELECT col1, col2 FROM v1
         UNION
         SELECT col3, col2 FROM v1
         UNION
         SELECT col2, col2 FROM t1
     )
-- !query analysis
Project [col1#x, col2#x]
+- SubqueryAlias __auto_generated_subquery_name
   +- Distinct
      +- Union false, false
         :- Distinct
         :  +- Union false, false
         :     :- Project [col1#x, col2#x]
         :     :  +- SubqueryAlias spark_catalog.default.v1
         :     :     +- View (`spark_catalog`.`default`.`v1`, [col1#x, col2#x, col3#x])
         :     :        +- Project [cast(col1#x as string) AS col1#x, cast(col2#x as string) AS col2#x, cast(col3#x as string) AS col3#x]
         :     :           +- Project [col1#x, col2#x, col3#x]
         :     :              +- SubqueryAlias spark_catalog.default.t1
         :     :                 +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         :     +- Project [col3#x, col2#x]
         :        +- SubqueryAlias spark_catalog.default.v1
         :           +- View (`spark_catalog`.`default`.`v1`, [col1#x, col2#x, col3#x])
         :              +- Project [cast(col1#x as string) AS col1#x, cast(col2#x as string) AS col2#x, cast(col3#x as string) AS col3#x]
         :                 +- Project [col1#x, col2#x, col3#x]
         :                    +- SubqueryAlias spark_catalog.default.t1
         :                       +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         +- Project [col2#x, col2#x AS col2#x]
            +- Project [col2#x, col2#x]
               +- SubqueryAlias spark_catalog.default.t1
                  +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet


-- !query
SELECT *
FROM (
         SELECT col1, col2 FROM v1
         UNION
         SELECT col3, col2 FROM t1
         UNION
         SELECT col2, col2 FROM v1
     )
-- !query analysis
Project [col1#x, col2#x]
+- SubqueryAlias __auto_generated_subquery_name
   +- Distinct
      +- Union false, false
         :- Distinct
         :  +- Union false, false
         :     :- Project [col1#x, col2#x]
         :     :  +- SubqueryAlias spark_catalog.default.v1
         :     :     +- View (`spark_catalog`.`default`.`v1`, [col1#x, col2#x, col3#x])
         :     :        +- Project [cast(col1#x as string) AS col1#x, cast(col2#x as string) AS col2#x, cast(col3#x as string) AS col3#x]
         :     :           +- Project [col1#x, col2#x, col3#x]
         :     :              +- SubqueryAlias spark_catalog.default.t1
         :     :                 +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         :     +- Project [col3#x, col2#x]
         :        +- SubqueryAlias spark_catalog.default.t1
         :           +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         +- Project [col2#x, col2#x AS col2#x]
            +- Project [col2#x, col2#x]
               +- SubqueryAlias spark_catalog.default.v1
                  +- View (`spark_catalog`.`default`.`v1`, [col1#x, col2#x, col3#x])
                     +- Project [cast(col1#x as string) AS col1#x, cast(col2#x as string) AS col2#x, cast(col3#x as string) AS col3#x]
                        +- Project [col1#x, col2#x, col3#x]
                           +- SubqueryAlias spark_catalog.default.t1
                              +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet


-- !query
SELECT *
FROM (
         SELECT col1, col2 FROM t1
         UNION
         SELECT col3, col2 FROM v1
         UNION
         SELECT col2, col2 FROM v1
     )
-- !query analysis
Project [col1#x, col2#x]
+- SubqueryAlias __auto_generated_subquery_name
   +- Distinct
      +- Union false, false
         :- Distinct
         :  +- Union false, false
         :     :- Project [col1#x, col2#x]
         :     :  +- SubqueryAlias spark_catalog.default.t1
         :     :     +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         :     +- Project [col3#x, col2#x]
         :        +- SubqueryAlias spark_catalog.default.v1
         :           +- View (`spark_catalog`.`default`.`v1`, [col1#x, col2#x, col3#x])
         :              +- Project [cast(col1#x as string) AS col1#x, cast(col2#x as string) AS col2#x, cast(col3#x as string) AS col3#x]
         :                 +- Project [col1#x, col2#x, col3#x]
         :                    +- SubqueryAlias spark_catalog.default.t1
         :                       +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet
         +- Project [col2#x, col2#x AS col2#x]
            +- Project [col2#x, col2#x]
               +- SubqueryAlias spark_catalog.default.v1
                  +- View (`spark_catalog`.`default`.`v1`, [col1#x, col2#x, col3#x])
                     +- Project [cast(col1#x as string) AS col1#x, cast(col2#x as string) AS col2#x, cast(col3#x as string) AS col3#x]
                        +- Project [col1#x, col2#x, col3#x]
                           +- SubqueryAlias spark_catalog.default.t1
                              +- Relation spark_catalog.default.t1[col1#x,col2#x,col3#x] parquet


-- !query
DROP VIEW v1
-- !query analysis
DropTableCommand `spark_catalog`.`default`.`v1`, false, true, false


-- !query
DROP TABLE t1
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.t1
