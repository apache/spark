-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW tmp AS
SELECT two, stringu1, ten, string4
FROM onek
-- !query analysis
CreateViewCommand `tmp`, SELECT two, stringu1, ten, string4
FROM onek, false, true, LocalTempView, UNSUPPORTED, true
   +- Project [two#x, stringu1#x, ten#x, string4#x]
      +- SubqueryAlias spark_catalog.default.onek
         +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT DISTINCT two FROM tmp ORDER BY 1
-- !query analysis
Sort [two#x ASC NULLS FIRST], true
+- Distinct
   +- Project [two#x]
      +- SubqueryAlias tmp
         +- View (`tmp`, [two#x, stringu1#x, ten#x, string4#x])
            +- Project [cast(two#x as int) AS two#x, cast(stringu1#x as string) AS stringu1#x, cast(ten#x as int) AS ten#x, cast(string4#x as string) AS string4#x]
               +- Project [two#x, stringu1#x, ten#x, string4#x]
                  +- SubqueryAlias spark_catalog.default.onek
                     +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT DISTINCT ten FROM tmp ORDER BY 1
-- !query analysis
Sort [ten#x ASC NULLS FIRST], true
+- Distinct
   +- Project [ten#x]
      +- SubqueryAlias tmp
         +- View (`tmp`, [two#x, stringu1#x, ten#x, string4#x])
            +- Project [cast(two#x as int) AS two#x, cast(stringu1#x as string) AS stringu1#x, cast(ten#x as int) AS ten#x, cast(string4#x as string) AS string4#x]
               +- Project [two#x, stringu1#x, ten#x, string4#x]
                  +- SubqueryAlias spark_catalog.default.onek
                     +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT DISTINCT string4 FROM tmp ORDER BY 1
-- !query analysis
Sort [string4#x ASC NULLS FIRST], true
+- Distinct
   +- Project [string4#x]
      +- SubqueryAlias tmp
         +- View (`tmp`, [two#x, stringu1#x, ten#x, string4#x])
            +- Project [cast(two#x as int) AS two#x, cast(stringu1#x as string) AS stringu1#x, cast(ten#x as int) AS ten#x, cast(string4#x as string) AS string4#x]
               +- Project [two#x, stringu1#x, ten#x, string4#x]
                  +- SubqueryAlias spark_catalog.default.onek
                     +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT DISTINCT two, string4, ten
   FROM tmp
   ORDER BY two ASC, string4 ASC, ten ASC
-- !query analysis
Sort [two#x ASC NULLS FIRST, string4#x ASC NULLS FIRST, ten#x ASC NULLS FIRST], true
+- Distinct
   +- Project [two#x, string4#x, ten#x]
      +- SubqueryAlias tmp
         +- View (`tmp`, [two#x, stringu1#x, ten#x, string4#x])
            +- Project [cast(two#x as int) AS two#x, cast(stringu1#x as string) AS stringu1#x, cast(ten#x as int) AS ten#x, cast(string4#x as string) AS string4#x]
               +- Project [two#x, stringu1#x, ten#x, string4#x]
                  +- SubqueryAlias spark_catalog.default.onek
                     +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT count(*) FROM
  (SELECT DISTINCT two, four, two FROM tenk1) ss
-- !query analysis
Aggregate [count(1) AS count(1)#xL]
+- SubqueryAlias ss
   +- Distinct
      +- Project [two#x, four#x, two#x]
         +- SubqueryAlias spark_catalog.default.tenk1
            +- Relation spark_catalog.default.tenk1[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
CREATE OR REPLACE TEMPORARY VIEW disttable AS SELECT * FROM
  (VALUES (1), (2), (3), (NULL))
  AS v(f1)
-- !query analysis
CreateViewCommand `disttable`, SELECT * FROM
  (VALUES (1), (2), (3), (NULL))
  AS v(f1), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [f1#x]
      +- SubqueryAlias v
         +- Project [col1#x AS f1#x]
            +- LocalRelation [col1#x]


-- !query
SELECT f1, f1 IS DISTINCT FROM 2 as `not 2` FROM disttable
-- !query analysis
Project [f1#x, NOT (f1#x <=> 2) AS not 2#x]
+- SubqueryAlias disttable
   +- View (`disttable`, [f1#x])
      +- Project [cast(f1#x as int) AS f1#x]
         +- Project [f1#x]
            +- SubqueryAlias v
               +- Project [col1#x AS f1#x]
                  +- LocalRelation [col1#x]


-- !query
SELECT f1, f1 IS DISTINCT FROM NULL as `not null` FROM disttable
-- !query analysis
Project [f1#x, NOT (f1#x <=> cast(null as int)) AS not null#x]
+- SubqueryAlias disttable
   +- View (`disttable`, [f1#x])
      +- Project [cast(f1#x as int) AS f1#x]
         +- Project [f1#x]
            +- SubqueryAlias v
               +- Project [col1#x AS f1#x]
                  +- LocalRelation [col1#x]


-- !query
SELECT f1, f1 IS DISTINCT FROM f1 as `false` FROM disttable
-- !query analysis
Project [f1#x, NOT (f1#x <=> f1#x) AS false#x]
+- SubqueryAlias disttable
   +- View (`disttable`, [f1#x])
      +- Project [cast(f1#x as int) AS f1#x]
         +- Project [f1#x]
            +- SubqueryAlias v
               +- Project [col1#x AS f1#x]
                  +- LocalRelation [col1#x]


-- !query
SELECT f1, f1 IS DISTINCT FROM f1+1 as `not null` FROM disttable
-- !query analysis
Project [f1#x, NOT (f1#x <=> (f1#x + 1)) AS not null#x]
+- SubqueryAlias disttable
   +- View (`disttable`, [f1#x])
      +- Project [cast(f1#x as int) AS f1#x]
         +- Project [f1#x]
            +- SubqueryAlias v
               +- Project [col1#x AS f1#x]
                  +- LocalRelation [col1#x]


-- !query
SELECT 1 IS DISTINCT FROM 2 as `yes`
-- !query analysis
Project [NOT (1 <=> 2) AS yes#x]
+- OneRowRelation


-- !query
SELECT 2 IS DISTINCT FROM 2 as `no`
-- !query analysis
Project [NOT (2 <=> 2) AS no#x]
+- OneRowRelation


-- !query
SELECT 2 IS DISTINCT FROM null as `yes`
-- !query analysis
Project [NOT (2 <=> cast(null as int)) AS yes#x]
+- OneRowRelation


-- !query
SELECT null IS DISTINCT FROM null as `no`
-- !query analysis
Project [NOT (null <=> null) AS no#x]
+- OneRowRelation


-- !query
SELECT 1 IS NOT DISTINCT FROM 2 as `no`
-- !query analysis
Project [(1 <=> 2) AS no#x]
+- OneRowRelation


-- !query
SELECT 2 IS NOT DISTINCT FROM 2 as `yes`
-- !query analysis
Project [(2 <=> 2) AS yes#x]
+- OneRowRelation


-- !query
SELECT 2 IS NOT DISTINCT FROM null as `no`
-- !query analysis
Project [(2 <=> cast(null as int)) AS no#x]
+- OneRowRelation


-- !query
SELECT null IS NOT DISTINCT FROM null as `yes`
-- !query analysis
Project [(null <=> null) AS yes#x]
+- OneRowRelation
