-- Automatically generated by SQLQueryTestSuite
-- !query
create or replace temporary view onek2 as select * from onek
-- !query analysis
CreateViewCommand `onek2`, select * from onek, false, true, LocalTempView, UNSUPPORTED, true
   +- Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
      +- SubqueryAlias spark_catalog.default.onek
         +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
create or replace temporary view INT8_TBL as select * from values
  (cast(trim('  123   ') as bigint), cast(trim('  456') as bigint)),
  (cast(trim('123   ') as bigint),cast('4567890123456789' as bigint)),
  (cast('4567890123456789' as bigint),cast('123' as bigint)),
  (cast(+4567890123456789 as bigint),cast('4567890123456789' as bigint)),
  (cast('+4567890123456789' as bigint),cast('-4567890123456789' as bigint))
  as INT8_TBL(q1, q2)
-- !query analysis
CreateViewCommand `INT8_TBL`, select * from values
  (cast(trim('  123   ') as bigint), cast(trim('  456') as bigint)),
  (cast(trim('123   ') as bigint),cast('4567890123456789' as bigint)),
  (cast('4567890123456789' as bigint),cast('123' as bigint)),
  (cast(+4567890123456789 as bigint),cast('4567890123456789' as bigint)),
  (cast('+4567890123456789' as bigint),cast('-4567890123456789' as bigint))
  as INT8_TBL(q1, q2), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [q1#xL, q2#xL]
      +- SubqueryAlias INT8_TBL
         +- LocalRelation [q1#xL, q2#xL]


-- !query
SELECT * FROM onek
   WHERE onek.unique1 < 10
   ORDER BY onek.unique1
-- !query analysis
Sort [unique1#x ASC NULLS FIRST], true
+- Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
   +- Filter (unique1#x < 10)
      +- SubqueryAlias spark_catalog.default.onek
         +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT onek.unique1, onek.stringu1 FROM onek
   WHERE onek.unique1 < 20
   ORDER BY unique1 DESC
-- !query analysis
Sort [unique1#x DESC NULLS LAST], true
+- Project [unique1#x, stringu1#x]
   +- Filter (unique1#x < 20)
      +- SubqueryAlias spark_catalog.default.onek
         +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT onek.unique1, onek.stringu1 FROM onek
   WHERE onek.unique1 > 980
   ORDER BY stringu1 ASC
-- !query analysis
Sort [stringu1#x ASC NULLS FIRST], true
+- Project [unique1#x, stringu1#x]
   +- Filter (unique1#x > 980)
      +- SubqueryAlias spark_catalog.default.onek
         +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT onek.unique1, onek.string4 FROM onek
   WHERE onek.unique1 > 980
   ORDER BY string4 ASC, unique1 DESC
-- !query analysis
Sort [string4#x ASC NULLS FIRST, unique1#x DESC NULLS LAST], true
+- Project [unique1#x, string4#x]
   +- Filter (unique1#x > 980)
      +- SubqueryAlias spark_catalog.default.onek
         +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT onek.unique1, onek.string4 FROM onek
   WHERE onek.unique1 > 980
   ORDER BY string4 DESC, unique1 ASC
-- !query analysis
Sort [string4#x DESC NULLS LAST, unique1#x ASC NULLS FIRST], true
+- Project [unique1#x, string4#x]
   +- Filter (unique1#x > 980)
      +- SubqueryAlias spark_catalog.default.onek
         +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT onek.unique1, onek.string4 FROM onek
   WHERE onek.unique1 < 20
   ORDER BY unique1 DESC, string4 ASC
-- !query analysis
Sort [unique1#x DESC NULLS LAST, string4#x ASC NULLS FIRST], true
+- Project [unique1#x, string4#x]
   +- Filter (unique1#x < 20)
      +- SubqueryAlias spark_catalog.default.onek
         +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT onek.unique1, onek.string4 FROM onek
   WHERE onek.unique1 < 20
   ORDER BY unique1 ASC, string4 DESC
-- !query analysis
Sort [unique1#x ASC NULLS FIRST, string4#x DESC NULLS LAST], true
+- Project [unique1#x, string4#x]
   +- Filter (unique1#x < 20)
      +- SubqueryAlias spark_catalog.default.onek
         +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT onek2.* FROM onek2 WHERE onek2.unique1 < 10
-- !query analysis
Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
+- Filter (unique1#x < 10)
   +- SubqueryAlias onek2
      +- View (`onek2`, [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x])
         +- Project [cast(unique1#x as int) AS unique1#x, cast(unique2#x as int) AS unique2#x, cast(two#x as int) AS two#x, cast(four#x as int) AS four#x, cast(ten#x as int) AS ten#x, cast(twenty#x as int) AS twenty#x, cast(hundred#x as int) AS hundred#x, cast(thousand#x as int) AS thousand#x, cast(twothousand#x as int) AS twothousand#x, cast(fivethous#x as int) AS fivethous#x, cast(tenthous#x as int) AS tenthous#x, cast(odd#x as int) AS odd#x, cast(even#x as int) AS even#x, cast(stringu1#x as string) AS stringu1#x, cast(stringu2#x as string) AS stringu2#x, cast(string4#x as string) AS string4#x]
            +- Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
               +- SubqueryAlias spark_catalog.default.onek
                  +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT onek2.unique1, onek2.stringu1 FROM onek2
    WHERE onek2.unique1 < 20
    ORDER BY unique1 DESC
-- !query analysis
Sort [unique1#x DESC NULLS LAST], true
+- Project [unique1#x, stringu1#x]
   +- Filter (unique1#x < 20)
      +- SubqueryAlias onek2
         +- View (`onek2`, [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x])
            +- Project [cast(unique1#x as int) AS unique1#x, cast(unique2#x as int) AS unique2#x, cast(two#x as int) AS two#x, cast(four#x as int) AS four#x, cast(ten#x as int) AS ten#x, cast(twenty#x as int) AS twenty#x, cast(hundred#x as int) AS hundred#x, cast(thousand#x as int) AS thousand#x, cast(twothousand#x as int) AS twothousand#x, cast(fivethous#x as int) AS fivethous#x, cast(tenthous#x as int) AS tenthous#x, cast(odd#x as int) AS odd#x, cast(even#x as int) AS even#x, cast(stringu1#x as string) AS stringu1#x, cast(stringu2#x as string) AS stringu2#x, cast(string4#x as string) AS string4#x]
               +- Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
                  +- SubqueryAlias spark_catalog.default.onek
                     +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT onek2.unique1, onek2.stringu1 FROM onek2
   WHERE onek2.unique1 > 980
-- !query analysis
Project [unique1#x, stringu1#x]
+- Filter (unique1#x > 980)
   +- SubqueryAlias onek2
      +- View (`onek2`, [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x])
         +- Project [cast(unique1#x as int) AS unique1#x, cast(unique2#x as int) AS unique2#x, cast(two#x as int) AS two#x, cast(four#x as int) AS four#x, cast(ten#x as int) AS ten#x, cast(twenty#x as int) AS twenty#x, cast(hundred#x as int) AS hundred#x, cast(thousand#x as int) AS thousand#x, cast(twothousand#x as int) AS twothousand#x, cast(fivethous#x as int) AS fivethous#x, cast(tenthous#x as int) AS tenthous#x, cast(odd#x as int) AS odd#x, cast(even#x as int) AS even#x, cast(stringu1#x as string) AS stringu1#x, cast(stringu2#x as string) AS stringu2#x, cast(string4#x as string) AS string4#x]
            +- Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
               +- SubqueryAlias spark_catalog.default.onek
                  +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
CREATE TABLE tmp USING parquet AS
SELECT two, stringu1, ten, string4
FROM onek
-- !query analysis
CreateDataSourceTableAsSelectCommand `spark_catalog`.`default`.`tmp`, ErrorIfExists, [two, stringu1, ten, string4]
   +- Project [two#x, stringu1#x, ten#x, string4#x]
      +- SubqueryAlias spark_catalog.default.onek
         +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
select foo.* from (select 1) as foo
-- !query analysis
Project [1#x]
+- SubqueryAlias foo
   +- Project [1 AS 1#x]
      +- OneRowRelation


-- !query
select foo.* from (select null) as foo
-- !query analysis
Project [NULL#x]
+- SubqueryAlias foo
   +- Project [null AS NULL#x]
      +- OneRowRelation


-- !query
select foo.* from (select 'xyzzy',1,null) as foo
-- !query analysis
Project [xyzzy#x, 1#x, NULL#x]
+- SubqueryAlias foo
   +- Project [xyzzy AS xyzzy#x, 1 AS 1#x, null AS NULL#x]
      +- OneRowRelation


-- !query
select * from onek, values(147, 'RFAAAA'), (931, 'VJAAAA') as v (i, j)
    WHERE onek.unique1 = v.i and onek.stringu1 = v.j
-- !query analysis
Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x, i#x, j#x]
+- Filter ((unique1#x = i#x) AND (stringu1#x = j#x))
   +- Join Inner
      :- SubqueryAlias spark_catalog.default.onek
      :  +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet
      +- SubqueryAlias v
         +- LocalRelation [i#x, j#x]


-- !query
VALUES (1,2), (3,4+4), (7,77.7)
-- !query analysis
LocalRelation [col1#x, col2#x]


-- !query
VALUES (1,2), (3,4+4), (7,77.7)
UNION ALL
SELECT 2+2, 57
UNION ALL
TABLE int8_tbl
-- !query analysis
Union false, false
:- Project [cast(col1#x as bigint) AS col1#xL, cast(col2#x as decimal(21,1)) AS col2#x]
:  +- Union false, false
:     :- LocalRelation [col1#x, col2#x]
:     +- Project [(2 + 2)#x, cast(57#x as decimal(11,1)) AS 57#x]
:        +- Project [(2 + 2) AS (2 + 2)#x, 57 AS 57#x]
:           +- OneRowRelation
+- Project [q1#xL, cast(q2#xL as decimal(21,1)) AS q2#x]
   +- SubqueryAlias int8_tbl
      +- View (`INT8_TBL`, [q1#xL, q2#xL])
         +- Project [cast(q1#xL as bigint) AS q1#xL, cast(q2#xL as bigint) AS q2#xL]
            +- Project [q1#xL, q2#xL]
               +- SubqueryAlias INT8_TBL
                  +- LocalRelation [q1#xL, q2#xL]


-- !query
CREATE OR REPLACE TEMPORARY VIEW foo AS
SELECT * FROM (values(42),(3),(10),(7),(null),(null),(1)) as foo (f1)
-- !query analysis
CreateViewCommand `foo`, SELECT * FROM (values(42),(3),(10),(7),(null),(null),(1)) as foo (f1), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [f1#x]
      +- SubqueryAlias foo
         +- Project [col1#x AS f1#x]
            +- LocalRelation [col1#x]


-- !query
SELECT * FROM foo ORDER BY f1
-- !query analysis
Sort [f1#x ASC NULLS FIRST], true
+- Project [f1#x]
   +- SubqueryAlias foo
      +- View (`foo`, [f1#x])
         +- Project [cast(f1#x as int) AS f1#x]
            +- Project [f1#x]
               +- SubqueryAlias foo
                  +- Project [col1#x AS f1#x]
                     +- LocalRelation [col1#x]


-- !query
SELECT * FROM foo ORDER BY f1 ASC
-- !query analysis
Sort [f1#x ASC NULLS FIRST], true
+- Project [f1#x]
   +- SubqueryAlias foo
      +- View (`foo`, [f1#x])
         +- Project [cast(f1#x as int) AS f1#x]
            +- Project [f1#x]
               +- SubqueryAlias foo
                  +- Project [col1#x AS f1#x]
                     +- LocalRelation [col1#x]


-- !query
SELECT * FROM foo ORDER BY f1 NULLS FIRST
-- !query analysis
Sort [f1#x ASC NULLS FIRST], true
+- Project [f1#x]
   +- SubqueryAlias foo
      +- View (`foo`, [f1#x])
         +- Project [cast(f1#x as int) AS f1#x]
            +- Project [f1#x]
               +- SubqueryAlias foo
                  +- Project [col1#x AS f1#x]
                     +- LocalRelation [col1#x]


-- !query
SELECT * FROM foo ORDER BY f1 DESC
-- !query analysis
Sort [f1#x DESC NULLS LAST], true
+- Project [f1#x]
   +- SubqueryAlias foo
      +- View (`foo`, [f1#x])
         +- Project [cast(f1#x as int) AS f1#x]
            +- Project [f1#x]
               +- SubqueryAlias foo
                  +- Project [col1#x AS f1#x]
                     +- LocalRelation [col1#x]


-- !query
SELECT * FROM foo ORDER BY f1 DESC NULLS LAST
-- !query analysis
Sort [f1#x DESC NULLS LAST], true
+- Project [f1#x]
   +- SubqueryAlias foo
      +- View (`foo`, [f1#x])
         +- Project [cast(f1#x as int) AS f1#x]
            +- Project [f1#x]
               +- SubqueryAlias foo
                  +- Project [col1#x AS f1#x]
                     +- LocalRelation [col1#x]


-- !query
select * from onek2 where unique2 = 11 and stringu1 = 'ATAAAA'
-- !query analysis
Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
+- Filter ((unique2#x = 11) AND (stringu1#x = ATAAAA))
   +- SubqueryAlias onek2
      +- View (`onek2`, [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x])
         +- Project [cast(unique1#x as int) AS unique1#x, cast(unique2#x as int) AS unique2#x, cast(two#x as int) AS two#x, cast(four#x as int) AS four#x, cast(ten#x as int) AS ten#x, cast(twenty#x as int) AS twenty#x, cast(hundred#x as int) AS hundred#x, cast(thousand#x as int) AS thousand#x, cast(twothousand#x as int) AS twothousand#x, cast(fivethous#x as int) AS fivethous#x, cast(tenthous#x as int) AS tenthous#x, cast(odd#x as int) AS odd#x, cast(even#x as int) AS even#x, cast(stringu1#x as string) AS stringu1#x, cast(stringu2#x as string) AS stringu2#x, cast(string4#x as string) AS string4#x]
            +- Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
               +- SubqueryAlias spark_catalog.default.onek
                  +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
select unique2 from onek2 where unique2 = 11 and stringu1 = 'ATAAAA'
-- !query analysis
Project [unique2#x]
+- Filter ((unique2#x = 11) AND (stringu1#x = ATAAAA))
   +- SubqueryAlias onek2
      +- View (`onek2`, [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x])
         +- Project [cast(unique1#x as int) AS unique1#x, cast(unique2#x as int) AS unique2#x, cast(two#x as int) AS two#x, cast(four#x as int) AS four#x, cast(ten#x as int) AS ten#x, cast(twenty#x as int) AS twenty#x, cast(hundred#x as int) AS hundred#x, cast(thousand#x as int) AS thousand#x, cast(twothousand#x as int) AS twothousand#x, cast(fivethous#x as int) AS fivethous#x, cast(tenthous#x as int) AS tenthous#x, cast(odd#x as int) AS odd#x, cast(even#x as int) AS even#x, cast(stringu1#x as string) AS stringu1#x, cast(stringu2#x as string) AS stringu2#x, cast(string4#x as string) AS string4#x]
            +- Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
               +- SubqueryAlias spark_catalog.default.onek
                  +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
select * from onek2 where unique2 = 11 and stringu1 < 'B'
-- !query analysis
Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
+- Filter ((unique2#x = 11) AND (stringu1#x < B))
   +- SubqueryAlias onek2
      +- View (`onek2`, [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x])
         +- Project [cast(unique1#x as int) AS unique1#x, cast(unique2#x as int) AS unique2#x, cast(two#x as int) AS two#x, cast(four#x as int) AS four#x, cast(ten#x as int) AS ten#x, cast(twenty#x as int) AS twenty#x, cast(hundred#x as int) AS hundred#x, cast(thousand#x as int) AS thousand#x, cast(twothousand#x as int) AS twothousand#x, cast(fivethous#x as int) AS fivethous#x, cast(tenthous#x as int) AS tenthous#x, cast(odd#x as int) AS odd#x, cast(even#x as int) AS even#x, cast(stringu1#x as string) AS stringu1#x, cast(stringu2#x as string) AS stringu2#x, cast(string4#x as string) AS string4#x]
            +- Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
               +- SubqueryAlias spark_catalog.default.onek
                  +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
select unique2 from onek2 where unique2 = 11 and stringu1 < 'B'
-- !query analysis
Project [unique2#x]
+- Filter ((unique2#x = 11) AND (stringu1#x < B))
   +- SubqueryAlias onek2
      +- View (`onek2`, [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x])
         +- Project [cast(unique1#x as int) AS unique1#x, cast(unique2#x as int) AS unique2#x, cast(two#x as int) AS two#x, cast(four#x as int) AS four#x, cast(ten#x as int) AS ten#x, cast(twenty#x as int) AS twenty#x, cast(hundred#x as int) AS hundred#x, cast(thousand#x as int) AS thousand#x, cast(twothousand#x as int) AS twothousand#x, cast(fivethous#x as int) AS fivethous#x, cast(tenthous#x as int) AS tenthous#x, cast(odd#x as int) AS odd#x, cast(even#x as int) AS even#x, cast(stringu1#x as string) AS stringu1#x, cast(stringu2#x as string) AS stringu2#x, cast(string4#x as string) AS string4#x]
            +- Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
               +- SubqueryAlias spark_catalog.default.onek
                  +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
select unique2 from onek2 where unique2 = 11 and stringu1 < 'C'
-- !query analysis
Project [unique2#x]
+- Filter ((unique2#x = 11) AND (stringu1#x < C))
   +- SubqueryAlias onek2
      +- View (`onek2`, [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x])
         +- Project [cast(unique1#x as int) AS unique1#x, cast(unique2#x as int) AS unique2#x, cast(two#x as int) AS two#x, cast(four#x as int) AS four#x, cast(ten#x as int) AS ten#x, cast(twenty#x as int) AS twenty#x, cast(hundred#x as int) AS hundred#x, cast(thousand#x as int) AS thousand#x, cast(twothousand#x as int) AS twothousand#x, cast(fivethous#x as int) AS fivethous#x, cast(tenthous#x as int) AS tenthous#x, cast(odd#x as int) AS odd#x, cast(even#x as int) AS even#x, cast(stringu1#x as string) AS stringu1#x, cast(stringu2#x as string) AS stringu2#x, cast(string4#x as string) AS string4#x]
            +- Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
               +- SubqueryAlias spark_catalog.default.onek
                  +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
select unique2 from onek2 where unique2 = 11 and stringu1 < 'B'
-- !query analysis
Project [unique2#x]
+- Filter ((unique2#x = 11) AND (stringu1#x < B))
   +- SubqueryAlias onek2
      +- View (`onek2`, [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x])
         +- Project [cast(unique1#x as int) AS unique1#x, cast(unique2#x as int) AS unique2#x, cast(two#x as int) AS two#x, cast(four#x as int) AS four#x, cast(ten#x as int) AS ten#x, cast(twenty#x as int) AS twenty#x, cast(hundred#x as int) AS hundred#x, cast(thousand#x as int) AS thousand#x, cast(twothousand#x as int) AS twothousand#x, cast(fivethous#x as int) AS fivethous#x, cast(tenthous#x as int) AS tenthous#x, cast(odd#x as int) AS odd#x, cast(even#x as int) AS even#x, cast(stringu1#x as string) AS stringu1#x, cast(stringu2#x as string) AS stringu2#x, cast(string4#x as string) AS string4#x]
            +- Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
               +- SubqueryAlias spark_catalog.default.onek
                  +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
select unique1, unique2 from onek2
  where (unique2 = 11 or unique1 = 0) and stringu1 < 'B'
-- !query analysis
Project [unique1#x, unique2#x]
+- Filter (((unique2#x = 11) OR (unique1#x = 0)) AND (stringu1#x < B))
   +- SubqueryAlias onek2
      +- View (`onek2`, [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x])
         +- Project [cast(unique1#x as int) AS unique1#x, cast(unique2#x as int) AS unique2#x, cast(two#x as int) AS two#x, cast(four#x as int) AS four#x, cast(ten#x as int) AS ten#x, cast(twenty#x as int) AS twenty#x, cast(hundred#x as int) AS hundred#x, cast(thousand#x as int) AS thousand#x, cast(twothousand#x as int) AS twothousand#x, cast(fivethous#x as int) AS fivethous#x, cast(tenthous#x as int) AS tenthous#x, cast(odd#x as int) AS odd#x, cast(even#x as int) AS even#x, cast(stringu1#x as string) AS stringu1#x, cast(stringu2#x as string) AS stringu2#x, cast(string4#x as string) AS string4#x]
            +- Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
               +- SubqueryAlias spark_catalog.default.onek
                  +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
select unique1, unique2 from onek2
  where (unique2 = 11 and stringu1 < 'B') or unique1 = 0
-- !query analysis
Project [unique1#x, unique2#x]
+- Filter (((unique2#x = 11) AND (stringu1#x < B)) OR (unique1#x = 0))
   +- SubqueryAlias onek2
      +- View (`onek2`, [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x])
         +- Project [cast(unique1#x as int) AS unique1#x, cast(unique2#x as int) AS unique2#x, cast(two#x as int) AS two#x, cast(four#x as int) AS four#x, cast(ten#x as int) AS ten#x, cast(twenty#x as int) AS twenty#x, cast(hundred#x as int) AS hundred#x, cast(thousand#x as int) AS thousand#x, cast(twothousand#x as int) AS twothousand#x, cast(fivethous#x as int) AS fivethous#x, cast(tenthous#x as int) AS tenthous#x, cast(odd#x as int) AS odd#x, cast(even#x as int) AS even#x, cast(stringu1#x as string) AS stringu1#x, cast(stringu2#x as string) AS stringu2#x, cast(string4#x as string) AS string4#x]
            +- Project [unique1#x, unique2#x, two#x, four#x, ten#x, twenty#x, hundred#x, thousand#x, twothousand#x, fivethous#x, tenthous#x, odd#x, even#x, stringu1#x, stringu2#x, string4#x]
               +- SubqueryAlias spark_catalog.default.onek
                  +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
SELECT 1 AS x ORDER BY x
-- !query analysis
Sort [x#x ASC NULLS FIRST], true
+- Project [1 AS x#x]
   +- OneRowRelation


-- !query
select * from (values (2),(null),(1)) v(k) where k = k order by k
-- !query analysis
Sort [k#x ASC NULLS FIRST], true
+- Project [k#x]
   +- Filter (k#x = k#x)
      +- SubqueryAlias v
         +- Project [col1#x AS k#x]
            +- LocalRelation [col1#x]


-- !query
select * from (values (2),(null),(1)) v(k) where k = k
-- !query analysis
Project [k#x]
+- Filter (k#x = k#x)
   +- SubqueryAlias v
      +- Project [col1#x AS k#x]
         +- LocalRelation [col1#x]


-- !query
drop table tmp
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.tmp
