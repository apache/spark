-- Automatically generated by SQLQueryTestSuite
-- !query
SELECT 1 AS one
-- !query analysis
Project [1 AS one#x]
+- OneRowRelation


-- !query
SELECT true AS true
-- !query analysis
Project [true AS true#x]
+- OneRowRelation


-- !query
SELECT false AS `false`
-- !query analysis
Project [false AS false#x]
+- OneRowRelation


-- !query
SELECT boolean('t') AS true
-- !query analysis
Project [cast(t as boolean) AS true#x]
+- OneRowRelation


-- !query
SELECT boolean('   f           ') AS `false`
-- !query analysis
Project [cast(   f            as boolean) AS false#x]
+- OneRowRelation


-- !query
SELECT boolean('true') AS true
-- !query analysis
Project [cast(true as boolean) AS true#x]
+- OneRowRelation


-- !query
SELECT boolean('test') AS error
-- !query analysis
Project [cast(test as boolean) AS error#x]
+- OneRowRelation


-- !query
SELECT boolean('false') AS `false`
-- !query analysis
Project [cast(false as boolean) AS false#x]
+- OneRowRelation


-- !query
SELECT boolean('foo') AS error
-- !query analysis
Project [cast(foo as boolean) AS error#x]
+- OneRowRelation


-- !query
SELECT boolean('y') AS true
-- !query analysis
Project [cast(y as boolean) AS true#x]
+- OneRowRelation


-- !query
SELECT boolean('yes') AS true
-- !query analysis
Project [cast(yes as boolean) AS true#x]
+- OneRowRelation


-- !query
SELECT boolean('yeah') AS error
-- !query analysis
Project [cast(yeah as boolean) AS error#x]
+- OneRowRelation


-- !query
SELECT boolean('n') AS `false`
-- !query analysis
Project [cast(n as boolean) AS false#x]
+- OneRowRelation


-- !query
SELECT boolean('no') AS `false`
-- !query analysis
Project [cast(no as boolean) AS false#x]
+- OneRowRelation


-- !query
SELECT boolean('nay') AS error
-- !query analysis
Project [cast(nay as boolean) AS error#x]
+- OneRowRelation


-- !query
SELECT boolean('on') AS true
-- !query analysis
Project [cast(on as boolean) AS true#x]
+- OneRowRelation


-- !query
SELECT boolean('off') AS `false`
-- !query analysis
Project [cast(off as boolean) AS false#x]
+- OneRowRelation


-- !query
SELECT boolean('of') AS `false`
-- !query analysis
Project [cast(of as boolean) AS false#x]
+- OneRowRelation


-- !query
SELECT boolean('o') AS error
-- !query analysis
Project [cast(o as boolean) AS error#x]
+- OneRowRelation


-- !query
SELECT boolean('on_') AS error
-- !query analysis
Project [cast(on_ as boolean) AS error#x]
+- OneRowRelation


-- !query
SELECT boolean('off_') AS error
-- !query analysis
Project [cast(off_ as boolean) AS error#x]
+- OneRowRelation


-- !query
SELECT boolean('1') AS true
-- !query analysis
Project [cast(1 as boolean) AS true#x]
+- OneRowRelation


-- !query
SELECT boolean('11') AS error
-- !query analysis
Project [cast(11 as boolean) AS error#x]
+- OneRowRelation


-- !query
SELECT boolean('0') AS `false`
-- !query analysis
Project [cast(0 as boolean) AS false#x]
+- OneRowRelation


-- !query
SELECT boolean('000') AS error
-- !query analysis
Project [cast(000 as boolean) AS error#x]
+- OneRowRelation


-- !query
SELECT boolean('') AS error
-- !query analysis
Project [cast( as boolean) AS error#x]
+- OneRowRelation


-- !query
SELECT boolean('t') or boolean('f') AS true
-- !query analysis
Project [(cast(t as boolean) OR cast(f as boolean)) AS true#x]
+- OneRowRelation


-- !query
SELECT boolean('t') and boolean('f') AS `false`
-- !query analysis
Project [(cast(t as boolean) AND cast(f as boolean)) AS false#x]
+- OneRowRelation


-- !query
SELECT not boolean('f') AS true
-- !query analysis
Project [NOT cast(f as boolean) AS true#x]
+- OneRowRelation


-- !query
SELECT boolean('t') = boolean('f') AS `false`
-- !query analysis
Project [(cast(t as boolean) = cast(f as boolean)) AS false#x]
+- OneRowRelation


-- !query
SELECT boolean('t') <> boolean('f') AS true
-- !query analysis
Project [NOT (cast(t as boolean) = cast(f as boolean)) AS true#x]
+- OneRowRelation


-- !query
SELECT boolean('t') > boolean('f') AS true
-- !query analysis
Project [(cast(t as boolean) > cast(f as boolean)) AS true#x]
+- OneRowRelation


-- !query
SELECT boolean('t') >= boolean('f') AS true
-- !query analysis
Project [(cast(t as boolean) >= cast(f as boolean)) AS true#x]
+- OneRowRelation


-- !query
SELECT boolean('f') < boolean('t') AS true
-- !query analysis
Project [(cast(f as boolean) < cast(t as boolean)) AS true#x]
+- OneRowRelation


-- !query
SELECT boolean('f') <= boolean('t') AS true
-- !query analysis
Project [(cast(f as boolean) <= cast(t as boolean)) AS true#x]
+- OneRowRelation


-- !query
SELECT boolean(string('TrUe')) AS true, boolean(string('fAlse')) AS `false`
-- !query analysis
Project [cast(cast(TrUe as string) as boolean) AS true#x, cast(cast(fAlse as string) as boolean) AS false#x]
+- OneRowRelation


-- !query
SELECT boolean(string('    true   ')) AS true,
       boolean(string('     FALSE')) AS `false`
-- !query analysis
Project [cast(cast(    true    as string) as boolean) AS true#x, cast(cast(     FALSE as string) as boolean) AS false#x]
+- OneRowRelation


-- !query
SELECT string(boolean(true)) AS true, string(boolean(false)) AS `false`
-- !query analysis
Project [cast(cast(true as boolean) as string) AS true#x, cast(cast(false as boolean) as string) AS false#x]
+- OneRowRelation


-- !query
SELECT boolean(string('  tru e ')) AS invalid
-- !query analysis
Project [cast(cast(  tru e  as string) as boolean) AS invalid#x]
+- OneRowRelation


-- !query
SELECT boolean(string('')) AS invalid
-- !query analysis
Project [cast(cast( as string) as boolean) AS invalid#x]
+- OneRowRelation


-- !query
CREATE TABLE BOOLTBL1 (f1 boolean) USING parquet
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`BOOLTBL1`, false


-- !query
INSERT INTO BOOLTBL1 VALUES (cast('t' as boolean))
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/booltbl1, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/booltbl1], Append, `spark_catalog`.`default`.`booltbl1`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/booltbl1), [f1]
+- Project [cast(col1#x as boolean) AS f1#x]
   +- LocalRelation [col1#x]


-- !query
INSERT INTO BOOLTBL1 VALUES (cast('True' as boolean))
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/booltbl1, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/booltbl1], Append, `spark_catalog`.`default`.`booltbl1`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/booltbl1), [f1]
+- Project [cast(col1#x as boolean) AS f1#x]
   +- LocalRelation [col1#x]


-- !query
INSERT INTO BOOLTBL1 VALUES (cast('true' as boolean))
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/booltbl1, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/booltbl1], Append, `spark_catalog`.`default`.`booltbl1`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/booltbl1), [f1]
+- Project [cast(col1#x as boolean) AS f1#x]
   +- LocalRelation [col1#x]


-- !query
SELECT '' AS t_3, BOOLTBL1.* FROM BOOLTBL1
-- !query analysis
Project [ AS t_3#x, f1#x]
+- SubqueryAlias spark_catalog.default.booltbl1
   +- Relation spark_catalog.default.booltbl1[f1#x] parquet


-- !query
SELECT '' AS t_3, BOOLTBL1.*
   FROM BOOLTBL1
   WHERE f1 = boolean('true')
-- !query analysis
Project [ AS t_3#x, f1#x]
+- Filter (f1#x = cast(true as boolean))
   +- SubqueryAlias spark_catalog.default.booltbl1
      +- Relation spark_catalog.default.booltbl1[f1#x] parquet


-- !query
SELECT '' AS t_3, BOOLTBL1.*
   FROM BOOLTBL1
   WHERE f1 <> boolean('false')
-- !query analysis
Project [ AS t_3#x, f1#x]
+- Filter NOT (f1#x = cast(false as boolean))
   +- SubqueryAlias spark_catalog.default.booltbl1
      +- Relation spark_catalog.default.booltbl1[f1#x] parquet


-- !query
SELECT '' AS zero, BOOLTBL1.*
   FROM BOOLTBL1
   WHERE booleq(boolean('false'), f1)
-- !query analysis
Project [ AS zero#x, f1#x]
+- Filter if ((isnull(cast(false as boolean)) OR isnull(f1#x))) null else booleq(knownnotnull(cast(false as boolean)), knownnotnull(f1#x))
   +- SubqueryAlias spark_catalog.default.booltbl1
      +- Relation spark_catalog.default.booltbl1[f1#x] parquet


-- !query
INSERT INTO BOOLTBL1 VALUES (boolean('f'))
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/booltbl1, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/booltbl1], Append, `spark_catalog`.`default`.`booltbl1`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/booltbl1), [f1]
+- Project [cast(col1#x as boolean) AS f1#x]
   +- LocalRelation [col1#x]


-- !query
SELECT '' AS f_1, BOOLTBL1.*
   FROM BOOLTBL1
   WHERE f1 = boolean('false')
-- !query analysis
Project [ AS f_1#x, f1#x]
+- Filter (f1#x = cast(false as boolean))
   +- SubqueryAlias spark_catalog.default.booltbl1
      +- Relation spark_catalog.default.booltbl1[f1#x] parquet


-- !query
CREATE TABLE BOOLTBL2 (f1 boolean) USING parquet
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`BOOLTBL2`, false


-- !query
INSERT INTO BOOLTBL2 VALUES (boolean('f'))
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/booltbl2, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/booltbl2], Append, `spark_catalog`.`default`.`booltbl2`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/booltbl2), [f1]
+- Project [cast(col1#x as boolean) AS f1#x]
   +- LocalRelation [col1#x]


-- !query
INSERT INTO BOOLTBL2 VALUES (boolean('false'))
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/booltbl2, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/booltbl2], Append, `spark_catalog`.`default`.`booltbl2`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/booltbl2), [f1]
+- Project [cast(col1#x as boolean) AS f1#x]
   +- LocalRelation [col1#x]


-- !query
INSERT INTO BOOLTBL2 VALUES (boolean('False'))
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/booltbl2, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/booltbl2], Append, `spark_catalog`.`default`.`booltbl2`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/booltbl2), [f1]
+- Project [cast(col1#x as boolean) AS f1#x]
   +- LocalRelation [col1#x]


-- !query
INSERT INTO BOOLTBL2 VALUES (boolean('FALSE'))
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/booltbl2, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/booltbl2], Append, `spark_catalog`.`default`.`booltbl2`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/booltbl2), [f1]
+- Project [cast(col1#x as boolean) AS f1#x]
   +- LocalRelation [col1#x]


-- !query
INSERT INTO BOOLTBL2
   VALUES (boolean('XXX'))
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_INLINE_TABLE.FAILED_SQL_EXPRESSION_EVALUATION",
  "sqlState" : "42000",
  "messageParameters" : {
    "sqlExpr" : "\"XXX\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 25,
    "stopIndex" : 47,
    "fragment" : "VALUES (boolean('XXX'))"
  } ]
}


-- !query
SELECT '' AS f_4, BOOLTBL2.* FROM BOOLTBL2
-- !query analysis
Project [ AS f_4#x, f1#x]
+- SubqueryAlias spark_catalog.default.booltbl2
   +- Relation spark_catalog.default.booltbl2[f1#x] parquet


-- !query
SELECT '' AS tf_12, BOOLTBL1.*, BOOLTBL2.*
   FROM BOOLTBL1, BOOLTBL2
   WHERE BOOLTBL2.f1 <> BOOLTBL1.f1
-- !query analysis
Project [ AS tf_12#x, f1#x, f1#x]
+- Filter NOT (f1#x = f1#x)
   +- Join Inner
      :- SubqueryAlias spark_catalog.default.booltbl1
      :  +- Relation spark_catalog.default.booltbl1[f1#x] parquet
      +- SubqueryAlias spark_catalog.default.booltbl2
         +- Relation spark_catalog.default.booltbl2[f1#x] parquet


-- !query
SELECT '' AS tf_12, BOOLTBL1.*, BOOLTBL2.*
   FROM BOOLTBL1, BOOLTBL2
   WHERE boolne(BOOLTBL2.f1,BOOLTBL1.f1)
-- !query analysis
Project [ AS tf_12#x, f1#x, f1#x]
+- Filter if ((isnull(f1#x) OR isnull(f1#x))) null else boolne(knownnotnull(f1#x), knownnotnull(f1#x))
   +- Join Inner
      :- SubqueryAlias spark_catalog.default.booltbl1
      :  +- Relation spark_catalog.default.booltbl1[f1#x] parquet
      +- SubqueryAlias spark_catalog.default.booltbl2
         +- Relation spark_catalog.default.booltbl2[f1#x] parquet


-- !query
SELECT '' AS ff_4, BOOLTBL1.*, BOOLTBL2.*
   FROM BOOLTBL1, BOOLTBL2
   WHERE BOOLTBL2.f1 = BOOLTBL1.f1 and BOOLTBL1.f1 = boolean('false')
-- !query analysis
Project [ AS ff_4#x, f1#x, f1#x]
+- Filter ((f1#x = f1#x) AND (f1#x = cast(false as boolean)))
   +- Join Inner
      :- SubqueryAlias spark_catalog.default.booltbl1
      :  +- Relation spark_catalog.default.booltbl1[f1#x] parquet
      +- SubqueryAlias spark_catalog.default.booltbl2
         +- Relation spark_catalog.default.booltbl2[f1#x] parquet


-- !query
SELECT '' AS tf_12_ff_4, BOOLTBL1.*, BOOLTBL2.*
   FROM BOOLTBL1, BOOLTBL2
   WHERE BOOLTBL2.f1 = BOOLTBL1.f1 or BOOLTBL1.f1 = boolean('true')
   ORDER BY BOOLTBL1.f1, BOOLTBL2.f1
-- !query analysis
Sort [f1#x ASC NULLS FIRST, f1#x ASC NULLS FIRST], true
+- Project [ AS tf_12_ff_4#x, f1#x, f1#x]
   +- Filter ((f1#x = f1#x) OR (f1#x = cast(true as boolean)))
      +- Join Inner
         :- SubqueryAlias spark_catalog.default.booltbl1
         :  +- Relation spark_catalog.default.booltbl1[f1#x] parquet
         +- SubqueryAlias spark_catalog.default.booltbl2
            +- Relation spark_catalog.default.booltbl2[f1#x] parquet


-- !query
SELECT '' AS True, f1
   FROM BOOLTBL1
   WHERE f1 IS TRUE
-- !query analysis
Project [ AS True#x, f1#x]
+- Filter (f1#x <=> true)
   +- SubqueryAlias spark_catalog.default.booltbl1
      +- Relation spark_catalog.default.booltbl1[f1#x] parquet


-- !query
SELECT '' AS `Not False`, f1
   FROM BOOLTBL1
   WHERE f1 IS NOT FALSE
-- !query analysis
Project [ AS Not False#x, f1#x]
+- Filter NOT (f1#x <=> false)
   +- SubqueryAlias spark_catalog.default.booltbl1
      +- Relation spark_catalog.default.booltbl1[f1#x] parquet


-- !query
SELECT '' AS `False`, f1
   FROM BOOLTBL1
   WHERE f1 IS FALSE
-- !query analysis
Project [ AS False#x, f1#x]
+- Filter (f1#x <=> false)
   +- SubqueryAlias spark_catalog.default.booltbl1
      +- Relation spark_catalog.default.booltbl1[f1#x] parquet


-- !query
SELECT '' AS `Not True`, f1
   FROM BOOLTBL1
   WHERE f1 IS NOT TRUE
-- !query analysis
Project [ AS Not True#x, f1#x]
+- Filter NOT (f1#x <=> true)
   +- SubqueryAlias spark_catalog.default.booltbl1
      +- Relation spark_catalog.default.booltbl1[f1#x] parquet


-- !query
SELECT '' AS `True`, f1
   FROM BOOLTBL2
   WHERE f1 IS TRUE
-- !query analysis
Project [ AS True#x, f1#x]
+- Filter (f1#x <=> true)
   +- SubqueryAlias spark_catalog.default.booltbl2
      +- Relation spark_catalog.default.booltbl2[f1#x] parquet


-- !query
SELECT '' AS `Not False`, f1
   FROM BOOLTBL2
   WHERE f1 IS NOT FALSE
-- !query analysis
Project [ AS Not False#x, f1#x]
+- Filter NOT (f1#x <=> false)
   +- SubqueryAlias spark_catalog.default.booltbl2
      +- Relation spark_catalog.default.booltbl2[f1#x] parquet


-- !query
SELECT '' AS `False`, f1
   FROM BOOLTBL2
   WHERE f1 IS FALSE
-- !query analysis
Project [ AS False#x, f1#x]
+- Filter (f1#x <=> false)
   +- SubqueryAlias spark_catalog.default.booltbl2
      +- Relation spark_catalog.default.booltbl2[f1#x] parquet


-- !query
SELECT '' AS `Not True`, f1
   FROM BOOLTBL2
   WHERE f1 IS NOT TRUE
-- !query analysis
Project [ AS Not True#x, f1#x]
+- Filter NOT (f1#x <=> true)
   +- SubqueryAlias spark_catalog.default.booltbl2
      +- Relation spark_catalog.default.booltbl2[f1#x] parquet


-- !query
CREATE TABLE BOOLTBL3 (d string, b boolean, o int) USING parquet
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`BOOLTBL3`, false


-- !query
INSERT INTO BOOLTBL3 VALUES ('true', true, 1)
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/booltbl3, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/booltbl3], Append, `spark_catalog`.`default`.`booltbl3`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/booltbl3), [d, b, o]
+- Project [cast(col1#x as string) AS d#x, cast(col2#x as boolean) AS b#x, cast(col3#x as int) AS o#x]
   +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
INSERT INTO BOOLTBL3 VALUES ('false', false, 2)
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/booltbl3, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/booltbl3], Append, `spark_catalog`.`default`.`booltbl3`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/booltbl3), [d, b, o]
+- Project [cast(col1#x as string) AS d#x, cast(col2#x as boolean) AS b#x, cast(col3#x as int) AS o#x]
   +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
INSERT INTO BOOLTBL3 VALUES ('null', null, 3)
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/booltbl3, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/booltbl3], Append, `spark_catalog`.`default`.`booltbl3`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/booltbl3), [d, b, o]
+- Project [cast(col1#x as string) AS d#x, cast(col2#x as boolean) AS b#x, cast(col3#x as int) AS o#x]
   +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
SELECT
    d,
    b IS TRUE AS istrue,
    b IS NOT TRUE AS isnottrue,
    b IS FALSE AS isfalse,
    b IS NOT FALSE AS isnotfalse,
    b IS UNKNOWN AS isunknown,
    b IS NOT UNKNOWN AS isnotunknown
FROM booltbl3 ORDER BY o
-- !query analysis
Project [d#x, istrue#x, isnottrue#x, isfalse#x, isnotfalse#x, isunknown#x, isnotunknown#x]
+- Sort [o#x ASC NULLS FIRST], true
   +- Project [d#x, (b#x <=> true) AS istrue#x, NOT (b#x <=> true) AS isnottrue#x, (b#x <=> false) AS isfalse#x, NOT (b#x <=> false) AS isnotfalse#x, isnull(b#x) AS isunknown#x, isnotnull(b#x) AS isnotunknown#x, o#x]
      +- SubqueryAlias spark_catalog.default.booltbl3
         +- Relation spark_catalog.default.booltbl3[d#x,b#x,o#x] parquet


-- !query
CREATE TABLE booltbl4(isfalse boolean, istrue boolean, isnul boolean) USING parquet
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`booltbl4`, false


-- !query
INSERT INTO booltbl4 VALUES (false, true, null)
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/booltbl4, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/booltbl4], Append, `spark_catalog`.`default`.`booltbl4`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/booltbl4), [isfalse, istrue, isnul]
+- Project [cast(col1#x as boolean) AS isfalse#x, cast(col2#x as boolean) AS istrue#x, cast(col3#x as boolean) AS isnul#x]
   +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
SELECT istrue AND isnul AND istrue FROM booltbl4
-- !query analysis
Project [((istrue#x AND isnul#x) AND istrue#x) AS ((istrue AND isnul) AND istrue)#x]
+- SubqueryAlias spark_catalog.default.booltbl4
   +- Relation spark_catalog.default.booltbl4[isfalse#x,istrue#x,isnul#x] parquet


-- !query
SELECT istrue AND istrue AND isnul FROM booltbl4
-- !query analysis
Project [((istrue#x AND istrue#x) AND isnul#x) AS ((istrue AND istrue) AND isnul)#x]
+- SubqueryAlias spark_catalog.default.booltbl4
   +- Relation spark_catalog.default.booltbl4[isfalse#x,istrue#x,isnul#x] parquet


-- !query
SELECT isnul AND istrue AND istrue FROM booltbl4
-- !query analysis
Project [((isnul#x AND istrue#x) AND istrue#x) AS ((isnul AND istrue) AND istrue)#x]
+- SubqueryAlias spark_catalog.default.booltbl4
   +- Relation spark_catalog.default.booltbl4[isfalse#x,istrue#x,isnul#x] parquet


-- !query
SELECT isfalse AND isnul AND istrue FROM booltbl4
-- !query analysis
Project [((isfalse#x AND isnul#x) AND istrue#x) AS ((isfalse AND isnul) AND istrue)#x]
+- SubqueryAlias spark_catalog.default.booltbl4
   +- Relation spark_catalog.default.booltbl4[isfalse#x,istrue#x,isnul#x] parquet


-- !query
SELECT istrue AND isfalse AND isnul FROM booltbl4
-- !query analysis
Project [((istrue#x AND isfalse#x) AND isnul#x) AS ((istrue AND isfalse) AND isnul)#x]
+- SubqueryAlias spark_catalog.default.booltbl4
   +- Relation spark_catalog.default.booltbl4[isfalse#x,istrue#x,isnul#x] parquet


-- !query
SELECT isnul AND istrue AND isfalse FROM booltbl4
-- !query analysis
Project [((isnul#x AND istrue#x) AND isfalse#x) AS ((isnul AND istrue) AND isfalse)#x]
+- SubqueryAlias spark_catalog.default.booltbl4
   +- Relation spark_catalog.default.booltbl4[isfalse#x,istrue#x,isnul#x] parquet


-- !query
SELECT isfalse OR isnul OR isfalse FROM booltbl4
-- !query analysis
Project [((isfalse#x OR isnul#x) OR isfalse#x) AS ((isfalse OR isnul) OR isfalse)#x]
+- SubqueryAlias spark_catalog.default.booltbl4
   +- Relation spark_catalog.default.booltbl4[isfalse#x,istrue#x,isnul#x] parquet


-- !query
SELECT isfalse OR isfalse OR isnul FROM booltbl4
-- !query analysis
Project [((isfalse#x OR isfalse#x) OR isnul#x) AS ((isfalse OR isfalse) OR isnul)#x]
+- SubqueryAlias spark_catalog.default.booltbl4
   +- Relation spark_catalog.default.booltbl4[isfalse#x,istrue#x,isnul#x] parquet


-- !query
SELECT isnul OR isfalse OR isfalse FROM booltbl4
-- !query analysis
Project [((isnul#x OR isfalse#x) OR isfalse#x) AS ((isnul OR isfalse) OR isfalse)#x]
+- SubqueryAlias spark_catalog.default.booltbl4
   +- Relation spark_catalog.default.booltbl4[isfalse#x,istrue#x,isnul#x] parquet


-- !query
SELECT isfalse OR isnul OR istrue FROM booltbl4
-- !query analysis
Project [((isfalse#x OR isnul#x) OR istrue#x) AS ((isfalse OR isnul) OR istrue)#x]
+- SubqueryAlias spark_catalog.default.booltbl4
   +- Relation spark_catalog.default.booltbl4[isfalse#x,istrue#x,isnul#x] parquet


-- !query
SELECT istrue OR isfalse OR isnul FROM booltbl4
-- !query analysis
Project [((istrue#x OR isfalse#x) OR isnul#x) AS ((istrue OR isfalse) OR isnul)#x]
+- SubqueryAlias spark_catalog.default.booltbl4
   +- Relation spark_catalog.default.booltbl4[isfalse#x,istrue#x,isnul#x] parquet


-- !query
SELECT isnul OR istrue OR isfalse FROM booltbl4
-- !query analysis
Project [((isnul#x OR istrue#x) OR isfalse#x) AS ((isnul OR istrue) OR isfalse)#x]
+- SubqueryAlias spark_catalog.default.booltbl4
   +- Relation spark_catalog.default.booltbl4[isfalse#x,istrue#x,isnul#x] parquet


-- !query
DROP TABLE  BOOLTBL1
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.BOOLTBL1


-- !query
DROP TABLE  BOOLTBL2
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.BOOLTBL2


-- !query
DROP TABLE  BOOLTBL3
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.BOOLTBL3


-- !query
DROP TABLE  BOOLTBL4
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.BOOLTBL4
