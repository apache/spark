-- Automatically generated by SQLQueryTestSuite
-- !query
select max(min(unique1)) from tenk1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "NESTED_AGGREGATE_FUNCTION",
  "sqlState" : "42607",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 12,
    "stopIndex" : 23,
    "fragment" : "min(unique1)"
  } ]
}


-- !query
select min(unique1) filter (where unique1 > 100) from tenk1
-- !query analysis
Aggregate [min(unique1#x) FILTER (WHERE (unique1#x > 100)) AS min(unique1) FILTER (WHERE (unique1 > 100))#x]
+- SubqueryAlias spark_catalog.default.tenk1
   +- Relation spark_catalog.default.tenk1[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
select sum(1/ten) filter (where ten > 0) from tenk1
-- !query analysis
Aggregate [sum((cast(1 as double) / cast(ten#x as double))) FILTER (WHERE (ten#x > 0)) AS sum((1 / ten)) FILTER (WHERE (ten > 0))#x]
+- SubqueryAlias spark_catalog.default.tenk1
   +- Relation spark_catalog.default.tenk1[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
select ten, sum(distinct four) filter (where four > 10) from onek a
group by ten
having exists (select 1 from onek b where sum(distinct a.four) = b.four)
-- !query analysis
Project [ten#x, sum(DISTINCT four) FILTER (WHERE (four > 10))#xL]
+- Filter exists#x [sum(DISTINCT four)#xL]
   :  +- Project [1 AS 1#x]
   :     +- Filter (outer(sum(DISTINCT four)#xL) = cast(four#x as bigint))
   :        +- SubqueryAlias b
   :           +- SubqueryAlias spark_catalog.default.onek
   :              +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet
   +- Aggregate [ten#x], [ten#x, sum(distinct four#x) FILTER (WHERE (four#x > 10)) AS sum(DISTINCT four) FILTER (WHERE (four > 10))#xL, sum(distinct four#x) AS sum(DISTINCT four)#xL]
      +- SubqueryAlias a
         +- SubqueryAlias spark_catalog.default.onek
            +- Relation spark_catalog.default.onek[unique1#x,unique2#x,two#x,four#x,ten#x,twenty#x,hundred#x,thousand#x,twothousand#x,fivethous#x,tenthous#x,odd#x,even#x,stringu1#x,stringu2#x,string4#x] parquet


-- !query
select (select count(*)
        from (values (1)) t0(inner_c))
from (values (2),(3)) t1(outer_c)
-- !query analysis
Project [scalar-subquery#x [] AS scalarsubquery()#xL]
:  +- Aggregate [count(1) AS count(1)#xL]
:     +- SubqueryAlias t0
:        +- Project [col1#x AS inner_c#x]
:           +- LocalRelation [col1#x]
+- SubqueryAlias t1
   +- Project [col1#x AS outer_c#x]
      +- LocalRelation [col1#x]
