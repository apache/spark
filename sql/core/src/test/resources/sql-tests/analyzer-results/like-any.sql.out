-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW like_any_table AS SELECT * FROM (VALUES
  ('google', '%oo%'),
  ('facebook', '%oo%'),
  ('linkedin', '%in'))
  as t1(company, pat)
-- !query analysis
CreateViewCommand `like_any_table`, SELECT * FROM (VALUES
  ('google', '%oo%'),
  ('facebook', '%oo%'),
  ('linkedin', '%in'))
  as t1(company, pat), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [company#x, pat#x]
      +- SubqueryAlias t1
         +- Project [col1#x AS company#x, col2#x AS pat#x]
            +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_any_table WHERE company LIKE ANY ('%oo%', '%in', 'fa%')
-- !query analysis
Project [company#x]
+- Filter likeany(company#x, %oo%, %in, fa%)
   +- SubqueryAlias like_any_table
      +- View (`like_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_any_table WHERE company LIKE ANY ('microsoft', '%yoo%')
-- !query analysis
Project [company#x]
+- Filter likeany(company#x, microsoft, %yoo%)
   +- SubqueryAlias like_any_table
      +- View (`like_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
select
    company,
    CASE
        WHEN company LIKE ANY ('%oo%', '%in', 'fa%') THEN 'Y'
        ELSE 'N'
    END AS is_available,
    CASE
        WHEN company LIKE ANY ('%oo%', 'fa%') OR company LIKE ANY ('%in', 'ms%') THEN 'Y'
        ELSE 'N'
    END AS mix
FROM like_any_table
-- !query analysis
Project [company#x, CASE WHEN likeany(company#x, %oo%, %in, fa%) THEN Y ELSE N END AS is_available#x, CASE WHEN (likeany(company#x, %oo%, fa%) OR likeany(company#x, %in, ms%)) THEN Y ELSE N END AS mix#x]
+- SubqueryAlias like_any_table
   +- View (`like_any_table`, [company#x, pat#x])
      +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
         +- Project [company#x, pat#x]
            +- SubqueryAlias t1
               +- Project [col1#x AS company#x, col2#x AS pat#x]
                  +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_any_table WHERE company LIKE ANY ('%zz%', pat)
-- !query analysis
Project [company#x]
+- Filter (company#x LIKE %zz% OR company#x LIKE pat#x)
   +- SubqueryAlias like_any_table
      +- View (`like_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_any_table WHERE company NOT LIKE ANY ('%oo%', '%in', 'fa%')
-- !query analysis
Project [company#x]
+- Filter notlikeany(company#x, %oo%, %in, fa%)
   +- SubqueryAlias like_any_table
      +- View (`like_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_any_table WHERE company NOT LIKE ANY ('microsoft', '%yoo%')
-- !query analysis
Project [company#x]
+- Filter notlikeany(company#x, microsoft, %yoo%)
   +- SubqueryAlias like_any_table
      +- View (`like_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_any_table WHERE company NOT LIKE ANY ('%oo%', 'fa%')
-- !query analysis
Project [company#x]
+- Filter notlikeany(company#x, %oo%, fa%)
   +- SubqueryAlias like_any_table
      +- View (`like_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_any_table WHERE NOT company LIKE ANY ('%oo%', 'fa%')
-- !query analysis
Project [company#x]
+- Filter NOT likeany(company#x, %oo%, fa%)
   +- SubqueryAlias like_any_table
      +- View (`like_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_any_table WHERE company LIKE ANY ('%oo%', NULL)
-- !query analysis
Project [company#x]
+- Filter (company#x LIKE %oo% OR company#x LIKE cast(null as string))
   +- SubqueryAlias like_any_table
      +- View (`like_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_any_table WHERE company NOT LIKE ANY ('%oo%', NULL)
-- !query analysis
Project [company#x]
+- Filter (NOT company#x LIKE %oo% OR NOT company#x LIKE cast(null as string))
   +- SubqueryAlias like_any_table
      +- View (`like_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_any_table WHERE company LIKE ANY (NULL, NULL)
-- !query analysis
Project [company#x]
+- Filter (company#x LIKE cast(null as string) OR company#x LIKE cast(null as string))
   +- SubqueryAlias like_any_table
      +- View (`like_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_any_table WHERE company NOT LIKE ANY (NULL, NULL)
-- !query analysis
Project [company#x]
+- Filter (NOT company#x LIKE cast(null as string) OR NOT company#x LIKE cast(null as string))
   +- SubqueryAlias like_any_table
      +- View (`like_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_any_table WHERE company LIKE ANY ()
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_0064",
  "messageParameters" : {
    "msg" : "Expected something between '(' and ')'."
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 50,
    "stopIndex" : 60,
    "fragment" : "LIKE ANY ()"
  } ]
}
