-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW v1 AS SELECT col1 FROM VALUES
  (42), (17), (99), (5), (42),
  (23), (8), (17), (76), (33),
  (99), (55), (3), (42), (8)
-- !query analysis
CreateViewCommand `v1`, SELECT col1 FROM VALUES
  (42), (17), (99), (5), (42),
  (23), (8), (17), (76), (33),
  (99), (55), (3), (42), (8), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [col1#x]
      +- LocalRelation [col1#x]


-- !query
CREATE OR REPLACE TEMPORARY VIEW v2 AS SELECT col1 FROM VALUES
  ('apple'), ('banana'), ('cherry'), ('date'), ('apple'),
  ('fig'), ('grape'), ('banana'), ('kiwi'), ('lemon'),
  ('cherry'), ('mango'), ('orange'), ('apple'), ('grape')
-- !query analysis
CreateViewCommand `v2`, SELECT col1 FROM VALUES
  ('apple'), ('banana'), ('cherry'), ('date'), ('apple'),
  ('fig'), ('grape'), ('banana'), ('kiwi'), ('lemon'),
  ('cherry'), ('mango'), ('orange'), ('apple'), ('grape'), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [col1#x]
      +- LocalRelation [col1#x]


-- !query
SELECT 2 AS col1 FROM v1 ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Project [2 AS col1#x]
   +- SubqueryAlias v1
      +- View (`v1`, [col1#x])
         +- Project [cast(col1#x as int) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT 2 AS col1 FROM v1 GROUP BY ALL ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Aggregate [2], [2 AS col1#x]
   +- SubqueryAlias v1
      +- View (`v1`, [col1#x])
         +- Project [cast(col1#x as int) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT 2 AS col1 FROM v1 GROUP BY ALL HAVING col1 > 50
-- !query analysis
Filter (col1#x > 50)
+- Aggregate [2], [2 AS col1#x]
   +- SubqueryAlias v1
      +- View (`v1`, [col1#x])
         +- Project [cast(col1#x as int) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT col1 AS c, 2 AS col1 FROM v1 ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Project [col1#x AS c#x, 2 AS col1#x]
   +- SubqueryAlias v1
      +- View (`v1`, [col1#x])
         +- Project [cast(col1#x as int) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT col1 AS c, 2 AS col1 FROM v1 GROUP BY ALL ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Aggregate [col1#x, 2], [col1#x AS c#x, 2 AS col1#x]
   +- SubqueryAlias v1
      +- View (`v1`, [col1#x])
         +- Project [cast(col1#x as int) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT col1 AS c, 2 AS col1 FROM v1 GROUP BY ALL HAVING col1 > 50
-- !query analysis
Filter (c#x > 50)
+- Aggregate [col1#x, 2], [col1#x AS c#x, 2 AS col1#x]
   +- SubqueryAlias v1
      +- View (`v1`, [col1#x])
         +- Project [cast(col1#x as int) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT 2 AS col1, 3 AS col1 FROM v1 ORDER BY col1
-- !query analysis
Project [col1#x, col1#x]
+- Sort [col1#x ASC NULLS FIRST], true
   +- Project [2 AS col1#x, 3 AS col1#x, col1#x]
      +- SubqueryAlias v1
         +- View (`v1`, [col1#x])
            +- Project [cast(col1#x as int) AS col1#x]
               +- Project [col1#x]
                  +- LocalRelation [col1#x]


-- !query
SELECT 2 AS col1, 3 AS col1 FROM v1 GROUP BY ALL ORDER BY col1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col1`",
    "proposal" : "`col1`, `col1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 59,
    "stopIndex" : 62,
    "fragment" : "col1"
  } ]
}


-- !query
SELECT 2 AS col1, 3 AS col1 FROM v1 GROUP BY ALL HAVING col1 > 50
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_REFERENCE",
  "sqlState" : "42704",
  "messageParameters" : {
    "name" : "`col1`",
    "referenceNames" : "[`col1`, `col1`]"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 57,
    "stopIndex" : 60,
    "fragment" : "col1"
  } ]
}


-- !query
SELECT col1 AS c, 2 AS col1, 3 AS col1 FROM v1 ORDER BY col1
-- !query analysis
Project [c#x, col1#x, col1#x]
+- Sort [col1#x ASC NULLS FIRST], true
   +- Project [col1#x AS c#x, 2 AS col1#x, 3 AS col1#x, col1#x]
      +- SubqueryAlias v1
         +- View (`v1`, [col1#x])
            +- Project [cast(col1#x as int) AS col1#x]
               +- Project [col1#x]
                  +- LocalRelation [col1#x]


-- !query
SELECT col1 AS c, 2 AS col1, 3 AS col1 FROM v1 GROUP BY ALL ORDER BY col1
-- !query analysis
Sort [c#x ASC NULLS FIRST], true
+- Aggregate [col1#x, 2, 3], [col1#x AS c#x, 2 AS col1#x, 3 AS col1#x]
   +- SubqueryAlias v1
      +- View (`v1`, [col1#x])
         +- Project [cast(col1#x as int) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT col1 AS c, 2 AS col1, 3 AS col1 FROM v1 GROUP BY ALL HAVING col1 > 50
-- !query analysis
Filter (c#x > 50)
+- Aggregate [col1#x, 2, 3], [col1#x AS c#x, 2 AS col1#x, 3 AS col1#x]
   +- SubqueryAlias v1
      +- View (`v1`, [col1#x])
         +- Project [cast(col1#x as int) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT col1, 2 AS col1 FROM v1 ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Project [col1#x, 2 AS col1#x]
   +- SubqueryAlias v1
      +- View (`v1`, [col1#x])
         +- Project [cast(col1#x as int) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT col1, 2 AS col1 FROM v1 GROUP BY ALL ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Aggregate [col1#x, 2], [col1#x, 2 AS col1#x]
   +- SubqueryAlias v1
      +- View (`v1`, [col1#x])
         +- Project [cast(col1#x as int) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT col1, 2 AS col1 FROM v1 GROUP BY ALL HAVING col1 > 50
-- !query analysis
Filter (col1#x > 50)
+- Aggregate [col1#x, 2], [col1#x, 2 AS col1#x]
   +- SubqueryAlias v1
      +- View (`v1`, [col1#x])
         +- Project [cast(col1#x as int) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT 3 AS col1 FROM (SELECT 1 AS col1, 2 AS col1) ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Project [3 AS col1#x]
   +- SubqueryAlias __auto_generated_subquery_name
      +- Project [1 AS col1#x, 2 AS col1#x]
         +- OneRowRelation


-- !query
SELECT 3 AS col1 FROM (SELECT 1 AS col1, 2 AS col1) GROUP BY ALL ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Aggregate [3], [3 AS col1#x]
   +- SubqueryAlias __auto_generated_subquery_name
      +- Project [1 AS col1#x, 2 AS col1#x]
         +- OneRowRelation


-- !query
SELECT 3 AS col1 FROM (SELECT 1 AS col1, 2 AS col1) GROUP BY ALL HAVING col1 > 50
-- !query analysis
Filter (col1#x > 50)
+- Aggregate [3], [3 AS col1#x]
   +- SubqueryAlias __auto_generated_subquery_name
      +- Project [1 AS col1#x, 2 AS col1#x]
         +- OneRowRelation


-- !query
SELECT col1 AS c, 3 AS col1 FROM (SELECT 1 AS col1, 2 AS col1) ORDER BY col1
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_REFERENCE",
  "sqlState" : "42704",
  "messageParameters" : {
    "name" : "`col1`",
    "referenceNames" : "[`col1`, `col1`]"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 11,
    "fragment" : "col1"
  } ]
}


-- !query
SELECT col1 AS c, 3 AS col1 FROM (SELECT 1 AS col1, 2 AS col1) GROUP BY ALL ORDER BY col1
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_REFERENCE",
  "sqlState" : "42704",
  "messageParameters" : {
    "name" : "`col1`",
    "referenceNames" : "[`col1`, `col1`]"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 11,
    "fragment" : "col1"
  } ]
}


-- !query
SELECT col1 AS c, 3 AS col1 FROM (SELECT 1 AS col1, 2 AS col1) GROUP BY ALL HAVING col1 > 50
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_REFERENCE",
  "sqlState" : "42704",
  "messageParameters" : {
    "name" : "`col1`",
    "referenceNames" : "[`col1`, `col1`]"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 11,
    "fragment" : "col1"
  } ]
}


-- !query
SELECT 'col1' FROM v2 ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Project [col1 AS col1#x]
   +- SubqueryAlias v2
      +- View (`v2`, [col1#x])
         +- Project [cast(col1#x as string) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT 'col1' FROM v2 GROUP BY ALL ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Aggregate [col1], [col1 AS col1#x]
   +- SubqueryAlias v2
      +- View (`v2`, [col1#x])
         +- Project [cast(col1#x as string) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT 'col1' FROM v2 GROUP BY ALL HAVING col1 > 'banana'
-- !query analysis
Filter (col1#x > banana)
+- Aggregate [col1], [col1 AS col1#x]
   +- SubqueryAlias v2
      +- View (`v2`, [col1#x])
         +- Project [cast(col1#x as string) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT col1 AS c, 'col1' FROM v2 ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Project [col1#x AS c#x, col1 AS col1#x]
   +- SubqueryAlias v2
      +- View (`v2`, [col1#x])
         +- Project [cast(col1#x as string) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT col1 AS c, 'col1' FROM v2 GROUP BY ALL ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Aggregate [col1#x, col1], [col1#x AS c#x, col1 AS col1#x]
   +- SubqueryAlias v2
      +- View (`v2`, [col1#x])
         +- Project [cast(col1#x as string) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT col1 AS c, 'col1' FROM v2 GROUP BY ALL HAVING col1 > 'banana'
-- !query analysis
Filter (c#x > banana)
+- Aggregate [col1#x, col1], [col1#x AS c#x, col1 AS col1#x]
   +- SubqueryAlias v2
      +- View (`v2`, [col1#x])
         +- Project [cast(col1#x as string) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT 'col1', 'col1' FROM v2 ORDER BY col1
-- !query analysis
Project [col1#x, col1#x]
+- Sort [col1#x ASC NULLS FIRST], true
   +- Project [col1 AS col1#x, col1 AS col1#x, col1#x]
      +- SubqueryAlias v2
         +- View (`v2`, [col1#x])
            +- Project [cast(col1#x as string) AS col1#x]
               +- Project [col1#x]
                  +- LocalRelation [col1#x]


-- !query
SELECT 'col1', 'col1' FROM v2 GROUP BY ALL ORDER BY col1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col1`",
    "proposal" : "`col1`, `col1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 53,
    "stopIndex" : 56,
    "fragment" : "col1"
  } ]
}


-- !query
SELECT 'col1', 'col1' FROM v2 GROUP BY ALL HAVING col1 > 'banana'
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_REFERENCE",
  "sqlState" : "42704",
  "messageParameters" : {
    "name" : "`col1`",
    "referenceNames" : "[`col1`, `col1`]"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 51,
    "stopIndex" : 54,
    "fragment" : "col1"
  } ]
}


-- !query
SELECT col1 AS c, 'col1', 'col1' FROM v2 ORDER BY col1
-- !query analysis
Project [c#x, col1#x, col1#x]
+- Sort [col1#x ASC NULLS FIRST], true
   +- Project [col1#x AS c#x, col1 AS col1#x, col1 AS col1#x, col1#x]
      +- SubqueryAlias v2
         +- View (`v2`, [col1#x])
            +- Project [cast(col1#x as string) AS col1#x]
               +- Project [col1#x]
                  +- LocalRelation [col1#x]


-- !query
SELECT col1 AS c, 'col1', 'col1' FROM v2 GROUP BY ALL ORDER BY col1
-- !query analysis
Sort [c#x ASC NULLS FIRST], true
+- Aggregate [col1#x, col1, col1], [col1#x AS c#x, col1 AS col1#x, col1 AS col1#x]
   +- SubqueryAlias v2
      +- View (`v2`, [col1#x])
         +- Project [cast(col1#x as string) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT col1 AS c, 'col1', 'col1' FROM v2 GROUP BY ALL HAVING col1 > 'banana'
-- !query analysis
Filter (c#x > banana)
+- Aggregate [col1#x, col1, col1], [col1#x AS c#x, col1 AS col1#x, col1 AS col1#x]
   +- SubqueryAlias v2
      +- View (`v2`, [col1#x])
         +- Project [cast(col1#x as string) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT col1, 'col1' FROM v2 ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Project [col1#x, col1 AS col1#x]
   +- SubqueryAlias v2
      +- View (`v2`, [col1#x])
         +- Project [cast(col1#x as string) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT col1, 'col1' FROM v2 GROUP BY ALL ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Aggregate [col1#x, col1], [col1#x, col1 AS col1#x]
   +- SubqueryAlias v2
      +- View (`v2`, [col1#x])
         +- Project [cast(col1#x as string) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT col1, 'col1' FROM v2 GROUP BY ALL HAVING col1 > 'banana'
-- !query analysis
Filter (col1#x > banana)
+- Aggregate [col1#x, col1], [col1#x, col1 AS col1#x]
   +- SubqueryAlias v2
      +- View (`v2`, [col1#x])
         +- Project [cast(col1#x as string) AS col1#x]
            +- Project [col1#x]
               +- LocalRelation [col1#x]


-- !query
SELECT 'col1' FROM (SELECT 'a' AS col1, 'b' AS col1) ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Project [col1 AS col1#x]
   +- SubqueryAlias __auto_generated_subquery_name
      +- Project [a AS col1#x, b AS col1#x]
         +- OneRowRelation


-- !query
SELECT 'col1' FROM (SELECT 'a' AS col1, 'b' AS col1) GROUP BY ALL ORDER BY col1
-- !query analysis
Sort [col1#x ASC NULLS FIRST], true
+- Aggregate [col1], [col1 AS col1#x]
   +- SubqueryAlias __auto_generated_subquery_name
      +- Project [a AS col1#x, b AS col1#x]
         +- OneRowRelation


-- !query
SELECT 'col1' FROM (SELECT 'a' AS col1, 'b' AS col1) GROUP BY ALL HAVING col1 > 'banana'
-- !query analysis
Filter (col1#x > banana)
+- Aggregate [col1], [col1 AS col1#x]
   +- SubqueryAlias __auto_generated_subquery_name
      +- Project [a AS col1#x, b AS col1#x]
         +- OneRowRelation


-- !query
SELECT col1 AS c, 'col1' FROM (SELECT 'a' AS col1, 'b' AS col1) ORDER BY col1
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_REFERENCE",
  "sqlState" : "42704",
  "messageParameters" : {
    "name" : "`col1`",
    "referenceNames" : "[`col1`, `col1`]"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 11,
    "fragment" : "col1"
  } ]
}


-- !query
SELECT col1 AS c, 'col1' FROM (SELECT 'a' AS col1, 'b' AS col1) GROUP BY ALL ORDER BY col1
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_REFERENCE",
  "sqlState" : "42704",
  "messageParameters" : {
    "name" : "`col1`",
    "referenceNames" : "[`col1`, `col1`]"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 11,
    "fragment" : "col1"
  } ]
}


-- !query
SELECT col1 AS c, 'col1' FROM (SELECT 'a' AS col1, 'b' AS col1) GROUP BY ALL HAVING col1 > 'banana'
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_REFERENCE",
  "sqlState" : "42704",
  "messageParameters" : {
    "name" : "`col1`",
    "referenceNames" : "[`col1`, `col1`]"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 11,
    "fragment" : "col1"
  } ]
}


-- !query
DROP VIEW v2
-- !query analysis
DropTempViewCommand v2


-- !query
DROP VIEW v1
-- !query analysis
DropTempViewCommand v1
