-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE DATABASE showdb
-- !query analysis
CreateNamespace false
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [showdb]


-- !query
USE showdb
-- !query analysis
SetCatalogAndNamespace
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [showdb]


-- !query
CREATE TABLE tbl(a STRING, b INT, c STRING, d STRING) USING parquet
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`showdb`.`tbl`, false


-- !query
CREATE VIEW view_1 AS SELECT * FROM tbl
-- !query analysis
CreateViewCommand `spark_catalog`.`showdb`.`view_1`, SELECT * FROM tbl, false, false, PersistedView, COMPENSATION, true
   +- Project [a#x, b#x, c#x, d#x]
      +- SubqueryAlias spark_catalog.showdb.tbl
         +- Relation spark_catalog.showdb.tbl[a#x,b#x,c#x,d#x] parquet


-- !query
CREATE VIEW view_2 AS SELECT * FROM tbl WHERE c='a'
-- !query analysis
CreateViewCommand `spark_catalog`.`showdb`.`view_2`, SELECT * FROM tbl WHERE c='a', false, false, PersistedView, COMPENSATION, true
   +- Project [a#x, b#x, c#x, d#x]
      +- Filter (c#x = a)
         +- SubqueryAlias spark_catalog.showdb.tbl
            +- Relation spark_catalog.showdb.tbl[a#x,b#x,c#x,d#x] parquet


-- !query
CREATE GLOBAL TEMP VIEW view_3 AS SELECT 1 as col1
-- !query analysis
CreateViewCommand `view_3`, SELECT 1 as col1, false, false, GlobalTempView, UNSUPPORTED, true
   +- Project [1 AS col1#x]
      +- OneRowRelation


-- !query
CREATE TEMPORARY VIEW view_4(e INT) USING parquet
-- !query analysis
CreateTempViewUsing [tableIdent:`view_4` StructType(StructField(e,IntegerType,true)) replace:false provider:parquet Map()


-- !query
SHOW VIEWS
-- !query analysis
ShowViewsCommand showdb, [namespace#x, viewName#x, isTemporary#x]


-- !query
SHOW VIEWS FROM showdb
-- !query analysis
ShowViewsCommand showdb, [namespace#x, viewName#x, isTemporary#x]


-- !query
SHOW VIEWS IN showdb
-- !query analysis
ShowViewsCommand showdb, [namespace#x, viewName#x, isTemporary#x]


-- !query
SHOW VIEWS IN global_temp
-- !query analysis
ShowViewsCommand global_temp, [namespace#x, viewName#x, isTemporary#x]


-- !query
SHOW VIEWS 'view_*'
-- !query analysis
ShowViewsCommand showdb, view_*, [namespace#x, viewName#x, isTemporary#x]


-- !query
SHOW VIEWS LIKE 'view_1*|view_2*'
-- !query analysis
ShowViewsCommand showdb, view_1*|view_2*, [namespace#x, viewName#x, isTemporary#x]


-- !query
SHOW VIEWS IN showdb 'view_*'
-- !query analysis
ShowViewsCommand showdb, view_*, [namespace#x, viewName#x, isTemporary#x]


-- !query
SHOW VIEWS IN showdb LIKE 'view_*'
-- !query analysis
ShowViewsCommand showdb, view_*, [namespace#x, viewName#x, isTemporary#x]


-- !query
SHOW VIEWS IN wrongdb LIKE 'view_*'
-- !query analysis
org.apache.spark.sql.catalyst.analysis.NoSuchNamespaceException
{
  "errorClass" : "SCHEMA_NOT_FOUND",
  "sqlState" : "42704",
  "messageParameters" : {
    "schemaName" : "`spark_catalog`.`wrongdb`"
  }
}


-- !query
DROP VIEW global_temp.view_3
-- !query analysis
DropTempViewCommand global_temp.view_3


-- !query
DROP VIEW view_4
-- !query analysis
DropTempViewCommand view_4


-- !query
USE default
-- !query analysis
SetCatalogAndNamespace
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [default]


-- !query
DROP DATABASE showdb CASCADE
-- !query analysis
DropNamespace false, true
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [showdb]
