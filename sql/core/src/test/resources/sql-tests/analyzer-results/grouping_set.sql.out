-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW grouping AS SELECT * FROM VALUES
  ("1", "2", "3", 1),
  ("4", "5", "6", 1),
  ("7", "8", "9", 1)
  as grouping(a, b, c, d)
-- !query analysis
CreateViewCommand `grouping`, SELECT * FROM VALUES
  ("1", "2", "3", 1),
  ("4", "5", "6", 1),
  ("7", "8", "9", 1)
  as grouping(a, b, c, d), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [a#x, b#x, c#x, d#x]
      +- SubqueryAlias grouping
         +- LocalRelation [a#x, b#x, c#x, d#x]


-- !query
SELECT a, b, c, count(d) FROM grouping GROUP BY a, b, c GROUPING SETS (())
-- !query analysis
Aggregate [a#x, b#x, c#x, spark_grouping_id#xL], [a#x, b#x, c#x, count(d#x) AS count(d)#xL]
+- Expand [[a#x, b#x, c#x, d#x, null, null, null, 7]], [a#x, b#x, c#x, d#x, a#x, b#x, c#x, spark_grouping_id#xL]
   +- Project [a#x, b#x, c#x, d#x, a#x AS a#x, b#x AS b#x, c#x AS c#x]
      +- SubqueryAlias grouping
         +- View (`grouping`, [a#x, b#x, c#x, d#x])
            +- Project [cast(a#x as string) AS a#x, cast(b#x as string) AS b#x, cast(c#x as string) AS c#x, cast(d#x as int) AS d#x]
               +- Project [a#x, b#x, c#x, d#x]
                  +- SubqueryAlias grouping
                     +- LocalRelation [a#x, b#x, c#x, d#x]


-- !query
SELECT a, b, c, count(d) FROM grouping GROUP BY a, b, c GROUPING SETS ((a))
-- !query analysis
Aggregate [a#x, b#x, c#x, spark_grouping_id#xL], [a#x, b#x, c#x, count(d#x) AS count(d)#xL]
+- Expand [[a#x, b#x, c#x, d#x, a#x, null, null, 3]], [a#x, b#x, c#x, d#x, a#x, b#x, c#x, spark_grouping_id#xL]
   +- Project [a#x, b#x, c#x, d#x, a#x AS a#x, b#x AS b#x, c#x AS c#x]
      +- SubqueryAlias grouping
         +- View (`grouping`, [a#x, b#x, c#x, d#x])
            +- Project [cast(a#x as string) AS a#x, cast(b#x as string) AS b#x, cast(c#x as string) AS c#x, cast(d#x as int) AS d#x]
               +- Project [a#x, b#x, c#x, d#x]
                  +- SubqueryAlias grouping
                     +- LocalRelation [a#x, b#x, c#x, d#x]


-- !query
SELECT a, b, c, count(d) FROM grouping GROUP BY a, b, c GROUPING SETS ((c))
-- !query analysis
Aggregate [a#x, b#x, c#x, spark_grouping_id#xL], [a#x, b#x, c#x, count(d#x) AS count(d)#xL]
+- Expand [[a#x, b#x, c#x, d#x, null, null, c#x, 6]], [a#x, b#x, c#x, d#x, a#x, b#x, c#x, spark_grouping_id#xL]
   +- Project [a#x, b#x, c#x, d#x, a#x AS a#x, b#x AS b#x, c#x AS c#x]
      +- SubqueryAlias grouping
         +- View (`grouping`, [a#x, b#x, c#x, d#x])
            +- Project [cast(a#x as string) AS a#x, cast(b#x as string) AS b#x, cast(c#x as string) AS c#x, cast(d#x as int) AS d#x]
               +- Project [a#x, b#x, c#x, d#x]
                  +- SubqueryAlias grouping
                     +- LocalRelation [a#x, b#x, c#x, d#x]


-- !query
SELECT c1, sum(c2) FROM (VALUES ('x', 10, 0), ('y', 20, 0)) AS t (c1, c2, c3) GROUP BY GROUPING SETS (c1)
-- !query analysis
Aggregate [c1#x, spark_grouping_id#xL], [c1#x, sum(c2#x) AS sum(c2)#xL]
+- Expand [[c1#x, c2#x, c3#x, c1#x, 0]], [c1#x, c2#x, c3#x, c1#x, spark_grouping_id#xL]
   +- Project [c1#x, c2#x, c3#x, c1#x AS c1#x]
      +- SubqueryAlias t
         +- Project [col1#x AS c1#x, col2#x AS c2#x, col3#x AS c3#x]
            +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
SELECT c1, sum(c2), grouping(c1) FROM (VALUES ('x', 10, 0), ('y', 20, 0)) AS t (c1, c2, c3) GROUP BY GROUPING SETS (c1)
-- !query analysis
Aggregate [c1#x, spark_grouping_id#xL], [c1#x, sum(c2#x) AS sum(c2)#xL, cast((shiftright(spark_grouping_id#xL, 0) & 1) as tinyint) AS grouping(c1)#x]
+- Expand [[c1#x, c2#x, c3#x, c1#x, 0]], [c1#x, c2#x, c3#x, c1#x, spark_grouping_id#xL]
   +- Project [c1#x, c2#x, c3#x, c1#x AS c1#x]
      +- SubqueryAlias t
         +- Project [col1#x AS c1#x, col2#x AS c2#x, col3#x AS c3#x]
            +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
SELECT c1, c2, Sum(c3), grouping__id
FROM   (VALUES ('x', 'a', 10), ('y', 'b', 20) ) AS t (c1, c2, c3)
GROUP  BY GROUPING SETS ( ( c1 ), ( c2 ) )
HAVING GROUPING__ID > 1
-- !query analysis
Filter (grouping__id#xL > cast(1 as bigint))
+- Aggregate [c1#x, c2#x, spark_grouping_id#xL], [c1#x, c2#x, sum(c3#x) AS sum(c3)#xL, spark_grouping_id#xL AS grouping__id#xL]
   +- Expand [[c1#x, c2#x, c3#x, c1#x, null, 1], [c1#x, c2#x, c3#x, null, c2#x, 2]], [c1#x, c2#x, c3#x, c1#x, c2#x, spark_grouping_id#xL]
      +- Project [c1#x, c2#x, c3#x, c1#x AS c1#x, c2#x AS c2#x]
         +- SubqueryAlias t
            +- Project [col1#x AS c1#x, col2#x AS c2#x, col3#x AS c3#x]
               +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
SELECT grouping(c1) FROM (VALUES ('x', 'a', 10), ('y', 'b', 20)) AS t (c1, c2, c3) GROUP BY GROUPING SETS (c1,c2)
-- !query analysis
Aggregate [c1#x, c2#x, spark_grouping_id#xL], [cast((shiftright(spark_grouping_id#xL, 1) & 1) as tinyint) AS grouping(c1)#x]
+- Expand [[c1#x, c2#x, c3#x, c1#x, null, 1], [c1#x, c2#x, c3#x, null, c2#x, 2]], [c1#x, c2#x, c3#x, c1#x, c2#x, spark_grouping_id#xL]
   +- Project [c1#x, c2#x, c3#x, c1#x AS c1#x, c2#x AS c2#x]
      +- SubqueryAlias t
         +- Project [col1#x AS c1#x, col2#x AS c2#x, col3#x AS c3#x]
            +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
SELECT -c1 AS c1 FROM (values (1,2), (3,2)) t(c1, c2) GROUP BY GROUPING SETS ((c1), (c1, c2))
-- !query analysis
Aggregate [c1#x, c2#x, spark_grouping_id#xL], [-c1#x AS c1#x]
+- Expand [[c1#x, c2#x, c1#x, null, 1], [c1#x, c2#x, c1#x, c2#x, 0]], [c1#x, c2#x, c1#x, c2#x, spark_grouping_id#xL]
   +- Project [c1#x, c2#x, c1#x AS c1#x, c2#x AS c2#x]
      +- SubqueryAlias t
         +- Project [col1#x AS c1#x, col2#x AS c2#x]
            +- LocalRelation [col1#x, col2#x]


-- !query
SELECT a + b, b, sum(c) FROM (VALUES (1,1,1),(2,2,2)) AS t(a,b,c) GROUP BY GROUPING SETS ( (a + b), (b))
-- !query analysis
Aggregate [(a#x + b#x)#x, b#x, spark_grouping_id#xL], [(a#x + b#x)#x AS (a + b)#x, b#x, sum(c#x) AS sum(c)#xL]
+- Expand [[a#x, b#x, c#x, (a#x + b#x)#x, null, 1], [a#x, b#x, c#x, null, b#x, 2]], [a#x, b#x, c#x, (a#x + b#x)#x, b#x, spark_grouping_id#xL]
   +- Project [a#x, b#x, c#x, (a#x + b#x) AS (a#x + b#x)#x, b#x AS b#x]
      +- SubqueryAlias t
         +- Project [col1#x AS a#x, col2#x AS b#x, col3#x AS c#x]
            +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
SELECT a + b, b, sum(c) FROM (VALUES (1,1,1),(2,2,2)) AS t(a,b,c) GROUP BY GROUPING SETS ( (a + b), (b + a), (b))
-- !query analysis
Aggregate [(a#x + b#x)#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [(a#x + b#x)#x AS (a + b)#x, b#x, sum(c#x) AS sum(c)#xL]
+- Expand [[a#x, b#x, c#x, (a#x + b#x)#x, null, 1, 0], [a#x, b#x, c#x, (a#x + b#x)#x, null, 1, 1], [a#x, b#x, c#x, null, b#x, 2, 2]], [a#x, b#x, c#x, (a#x + b#x)#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, c#x, (a#x + b#x) AS (a#x + b#x)#x, b#x AS b#x]
      +- SubqueryAlias t
         +- Project [col1#x AS a#x, col2#x AS b#x, col3#x AS c#x]
            +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
SELECT c1 AS col1, c2 AS col2
FROM   (VALUES (1, 2), (3, 2)) t(c1, c2)
GROUP  BY GROUPING SETS ( ( c1 ), ( c1, c2 ) )
HAVING col2 IS NOT NULL
ORDER  BY -col1
-- !query analysis
Sort [-col1#x ASC NULLS FIRST], true
+- Filter isnotnull(col2#x)
   +- Aggregate [c1#x, c2#x, spark_grouping_id#xL], [c1#x AS col1#x, c2#x AS col2#x]
      +- Expand [[c1#x, c2#x, c1#x, null, 1], [c1#x, c2#x, c1#x, c2#x, 0]], [c1#x, c2#x, c1#x, c2#x, spark_grouping_id#xL]
         +- Project [c1#x, c2#x, c1#x AS c1#x, c2#x AS c2#x]
            +- SubqueryAlias t
               +- Project [col1#x AS c1#x, col2#x AS c2#x]
                  +- LocalRelation [col1#x, col2#x]


-- !query
SELECT a, b, c, count(d) FROM grouping GROUP BY WITH ROLLUP
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'ROLLUP'",
    "hint" : ": extra input 'ROLLUP'"
  }
}


-- !query
SELECT a, b, c, count(d) FROM grouping GROUP BY WITH CUBE
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'CUBE'",
    "hint" : ": extra input 'CUBE'"
  }
}


-- !query
SELECT c1 FROM (values (1,2), (3,2)) t(c1, c2) GROUP BY GROUPING SETS (())
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "MISSING_AGGREGATION",
  "sqlState" : "42803",
  "messageParameters" : {
    "expression" : "\"c1\"",
    "expressionAnyValue" : "\"any_value(c1)\""
  }
}


-- !query
SELECT k1, k2, avg(v) FROM (VALUES (1,1,1),(2,2,2)) AS t(k1,k2,v) GROUP BY GROUPING SETS ((k1),(k1,k2),(k2,k1))
-- !query analysis
Aggregate [k1#x, k2#x, spark_grouping_id#xL, _gen_grouping_pos#x], [k1#x, k2#x, avg(v#x) AS avg(v)#x]
+- Expand [[k1#x, k2#x, v#x, k1#x, null, 1, 0], [k1#x, k2#x, v#x, k1#x, k2#x, 0, 1], [k1#x, k2#x, v#x, k1#x, k2#x, 0, 2]], [k1#x, k2#x, v#x, k1#x, k2#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [k1#x, k2#x, v#x, k1#x AS k1#x, k2#x AS k2#x]
      +- SubqueryAlias t
         +- Project [col1#x AS k1#x, col2#x AS k2#x, col3#x AS v#x]
            +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
SELECT grouping__id, k1, k2, avg(v) FROM (VALUES (1,1,1),(2,2,2)) AS t(k1,k2,v) GROUP BY GROUPING SETS ((k1),(k1,k2),(k2,k1))
-- !query analysis
Aggregate [k1#x, k2#x, spark_grouping_id#xL, _gen_grouping_pos#x], [spark_grouping_id#xL AS grouping__id#xL, k1#x, k2#x, avg(v#x) AS avg(v)#x]
+- Expand [[k1#x, k2#x, v#x, k1#x, null, 1, 0], [k1#x, k2#x, v#x, k1#x, k2#x, 0, 1], [k1#x, k2#x, v#x, k1#x, k2#x, 0, 2]], [k1#x, k2#x, v#x, k1#x, k2#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [k1#x, k2#x, v#x, k1#x AS k1#x, k2#x AS k2#x]
      +- SubqueryAlias t
         +- Project [col1#x AS k1#x, col2#x AS k2#x, col3#x AS v#x]
            +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
SELECT grouping(k1), k1, k2, avg(v) FROM (VALUES (1,1,1),(2,2,2)) AS t(k1,k2,v) GROUP BY GROUPING SETS ((k1),(k1,k2),(k2,k1))
-- !query analysis
Aggregate [k1#x, k2#x, spark_grouping_id#xL, _gen_grouping_pos#x], [cast((shiftright(spark_grouping_id#xL, 1) & 1) as tinyint) AS grouping(k1)#x, k1#x, k2#x, avg(v#x) AS avg(v)#x]
+- Expand [[k1#x, k2#x, v#x, k1#x, null, 1, 0], [k1#x, k2#x, v#x, k1#x, k2#x, 0, 1], [k1#x, k2#x, v#x, k1#x, k2#x, 0, 2]], [k1#x, k2#x, v#x, k1#x, k2#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [k1#x, k2#x, v#x, k1#x AS k1#x, k2#x AS k2#x]
      +- SubqueryAlias t
         +- Project [col1#x AS k1#x, col2#x AS k2#x, col3#x AS v#x]
            +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
SELECT grouping_id(k1, k2), avg(v) from (VALUES (1,1,1),(2,2,2)) AS t(k1,k2,v) GROUP BY k1, k2 GROUPING SETS ((k2, k1), k1)
-- !query analysis
Aggregate [k1#x, k2#x, spark_grouping_id#xL], [spark_grouping_id#xL AS grouping_id(k1, k2)#xL, avg(v#x) AS avg(v)#x]
+- Expand [[k1#x, k2#x, v#x, k1#x, k2#x, 0], [k1#x, k2#x, v#x, k1#x, null, 1]], [k1#x, k2#x, v#x, k1#x, k2#x, spark_grouping_id#xL]
   +- Project [k1#x, k2#x, v#x, k1#x AS k1#x, k2#x AS k2#x]
      +- SubqueryAlias t
         +- Project [col1#x AS k1#x, col2#x AS k2#x, col3#x AS v#x]
            +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
SELECT CASE WHEN a IS NULL THEN count(b) WHEN b IS NULL THEN count(c) END
FROM grouping
GROUP BY GROUPING SETS (a, b, c)
-- !query analysis
Aggregate [a#x, b#x, c#x, spark_grouping_id#xL], [CASE WHEN isnull(a#x) THEN count(b#x) WHEN isnull(b#x) THEN count(c#x) END AS CASE WHEN (a IS NULL) THEN count(b) WHEN (b IS NULL) THEN count(c) END#xL]
+- Expand [[a#x, b#x, c#x, d#x, a#x, null, null, 3], [a#x, b#x, c#x, d#x, null, b#x, null, 5], [a#x, b#x, c#x, d#x, null, null, c#x, 6]], [a#x, b#x, c#x, d#x, a#x, b#x, c#x, spark_grouping_id#xL]
   +- Project [a#x, b#x, c#x, d#x, a#x AS a#x, b#x AS b#x, c#x AS c#x]
      +- SubqueryAlias grouping
         +- View (`grouping`, [a#x, b#x, c#x, d#x])
            +- Project [cast(a#x as string) AS a#x, cast(b#x as string) AS b#x, cast(c#x as string) AS c#x, cast(d#x as int) AS d#x]
               +- Project [a#x, b#x, c#x, d#x]
                  +- SubqueryAlias grouping
                     +- LocalRelation [a#x, b#x, c#x, d#x]
