-- Automatically generated by SQLQueryTestSuite
-- !query
create temp view v (c) as values (1), (null)
-- !query analysis
CreateViewCommand `v`, [(c,None)], values (1), (null), false, false, LocalTempView, UNSUPPORTED, true
   +- LocalRelation [col1#x]


-- !query
create temp view v_empty (e) as select 1 where false
-- !query analysis
CreateViewCommand `v_empty`, [(e,None)], select 1 where false, false, false, LocalTempView, UNSUPPORTED, true
   +- Project [1 AS 1#x]
      +- Filter false
         +- OneRowRelation


-- !query
create table t(c int) using json
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`t`, false


-- !query
insert into t values (1), (null)
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/t, false, JSON, [path=file:[not included in comparison]/{warehouse_dir}/t], Append, `spark_catalog`.`default`.`t`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/t), [c]
+- Project [cast(col1#x as int) AS c#x]
   +- LocalRelation [col1#x]


-- !query
create table t2(d int) using json
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`t2`, false


-- !query
insert into t2 values (2)
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/t2, false, JSON, [path=file:[not included in comparison]/{warehouse_dir}/t2], Append, `spark_catalog`.`default`.`t2`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/t2), [d]
+- Project [cast(col1#x as int) AS d#x]
   +- LocalRelation [col1#x]


-- !query
create table t_empty(e int) using json
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`t_empty`, false


-- !query
set spark.sql.legacy.nullInEmptyListBehavior = false
-- !query analysis
SetCommand (spark.sql.legacy.nullInEmptyListBehavior,Some(false))


-- !query
select c, c in (select e from t_empty) from t
-- !query analysis
Project [c#x, c#x IN (list#x []) AS (c IN (listquery()))#x]
:  +- Project [e#x]
:     +- SubqueryAlias spark_catalog.default.t_empty
:        +- Relation spark_catalog.default.t_empty[e#x] json
+- SubqueryAlias spark_catalog.default.t
   +- Relation spark_catalog.default.t[c#x] json


-- !query
select c, c in (select e from v_empty) from v
-- !query analysis
Project [c#x, c#x IN (list#x []) AS (c IN (listquery()))#x]
:  +- Project [e#x]
:     +- SubqueryAlias v_empty
:        +- View (`v_empty`, [e#x])
:           +- Project [cast(1#x as int) AS e#x]
:              +- Project [1 AS 1#x]
:                 +- Filter false
:                    +- OneRowRelation
+- SubqueryAlias v
   +- View (`v`, [c#x])
      +- Project [cast(col1#x as int) AS c#x]
         +- LocalRelation [col1#x]


-- !query
select c, c not in (select e from t_empty) from t
-- !query analysis
Project [c#x, NOT c#x IN (list#x []) AS (NOT (c IN (listquery())))#x]
:  +- Project [e#x]
:     +- SubqueryAlias spark_catalog.default.t_empty
:        +- Relation spark_catalog.default.t_empty[e#x] json
+- SubqueryAlias spark_catalog.default.t
   +- Relation spark_catalog.default.t[c#x] json


-- !query
select c, c not in (select e from v_empty) from v
-- !query analysis
Project [c#x, NOT c#x IN (list#x []) AS (NOT (c IN (listquery())))#x]
:  +- Project [e#x]
:     +- SubqueryAlias v_empty
:        +- View (`v_empty`, [e#x])
:           +- Project [cast(1#x as int) AS e#x]
:              +- Project [1 AS 1#x]
:                 +- Filter false
:                    +- OneRowRelation
+- SubqueryAlias v
   +- View (`v`, [c#x])
      +- Project [cast(col1#x as int) AS c#x]
         +- LocalRelation [col1#x]


-- !query
select null in (select e from t_empty)
-- !query analysis
Project [cast(null as int) IN (list#x []) AS (NULL IN (listquery()))#x]
:  +- Project [e#x]
:     +- Project [e#x]
:        +- SubqueryAlias spark_catalog.default.t_empty
:           +- Relation spark_catalog.default.t_empty[e#x] json
+- OneRowRelation


-- !query
select null in (select e from v_empty)
-- !query analysis
Project [cast(null as int) IN (list#x []) AS (NULL IN (listquery()))#x]
:  +- Project [e#x]
:     +- Project [e#x]
:        +- SubqueryAlias v_empty
:           +- View (`v_empty`, [e#x])
:              +- Project [cast(1#x as int) AS e#x]
:                 +- Project [1 AS 1#x]
:                    +- Filter false
:                       +- OneRowRelation
+- OneRowRelation


-- !query
select null not in (select e from t_empty)
-- !query analysis
Project [NOT cast(null as int) IN (list#x []) AS (NOT (NULL IN (listquery())))#x]
:  +- Project [e#x]
:     +- Project [e#x]
:        +- SubqueryAlias spark_catalog.default.t_empty
:           +- Relation spark_catalog.default.t_empty[e#x] json
+- OneRowRelation


-- !query
select null not in (select e from v_empty)
-- !query analysis
Project [NOT cast(null as int) IN (list#x []) AS (NOT (NULL IN (listquery())))#x]
:  +- Project [e#x]
:     +- Project [e#x]
:        +- SubqueryAlias v_empty
:           +- View (`v_empty`, [e#x])
:              +- Project [cast(1#x as int) AS e#x]
:                 +- Project [1 AS 1#x]
:                    +- Filter false
:                       +- OneRowRelation
+- OneRowRelation


-- !query
select * from t left join t2 on (t.c in (select e from t_empty)) is null
-- !query analysis
Project [c#x, d#x]
+- Join LeftOuter, isnull(c#x IN (list#x []))
   :  +- Project [e#x]
   :     +- SubqueryAlias spark_catalog.default.t_empty
   :        +- Relation spark_catalog.default.t_empty[e#x] json
   :- SubqueryAlias spark_catalog.default.t
   :  +- Relation spark_catalog.default.t[c#x] json
   +- SubqueryAlias spark_catalog.default.t2
      +- Relation spark_catalog.default.t2[d#x] json


-- !query
select * from t left join t2 on (t.c not in (select e from t_empty)) is null
-- !query analysis
Project [c#x, d#x]
+- Join LeftOuter, isnull(NOT c#x IN (list#x []))
   :  +- Project [e#x]
   :     +- SubqueryAlias spark_catalog.default.t_empty
   :        +- Relation spark_catalog.default.t_empty[e#x] json
   :- SubqueryAlias spark_catalog.default.t
   :  +- Relation spark_catalog.default.t[c#x] json
   +- SubqueryAlias spark_catalog.default.t2
      +- Relation spark_catalog.default.t2[d#x] json


-- !query
set spark.sql.optimizer.optimizeUncorrelatedInSubqueriesInJoinCondition.enabled=true
-- !query analysis
SetCommand (spark.sql.optimizer.optimizeUncorrelatedInSubqueriesInJoinCondition.enabled,Some(true))


-- !query
select * from t left join t2 on (t.c in (select e from t_empty)) is null
-- !query analysis
Project [c#x, d#x]
+- Join LeftOuter, isnull(c#x IN (list#x []))
   :  +- Project [e#x]
   :     +- SubqueryAlias spark_catalog.default.t_empty
   :        +- Relation spark_catalog.default.t_empty[e#x] json
   :- SubqueryAlias spark_catalog.default.t
   :  +- Relation spark_catalog.default.t[c#x] json
   +- SubqueryAlias spark_catalog.default.t2
      +- Relation spark_catalog.default.t2[d#x] json


-- !query
select * from t left join t2 on (t.c not in (select e from t_empty)) is null
-- !query analysis
Project [c#x, d#x]
+- Join LeftOuter, isnull(NOT c#x IN (list#x []))
   :  +- Project [e#x]
   :     +- SubqueryAlias spark_catalog.default.t_empty
   :        +- Relation spark_catalog.default.t_empty[e#x] json
   :- SubqueryAlias spark_catalog.default.t
   :  +- Relation spark_catalog.default.t[c#x] json
   +- SubqueryAlias spark_catalog.default.t2
      +- Relation spark_catalog.default.t2[d#x] json


-- !query
set spark.sql.legacy.nullInEmptyListBehavior = true
-- !query analysis
SetCommand (spark.sql.legacy.nullInEmptyListBehavior,Some(true))


-- !query
set spark.sql.optimizer.optimizeUncorrelatedInSubqueriesInJoinCondition.enabled=false
-- !query analysis
SetCommand (spark.sql.optimizer.optimizeUncorrelatedInSubqueriesInJoinCondition.enabled,Some(false))


-- !query
select null in (select e from t_empty)
-- !query analysis
Project [cast(null as int) IN (list#x []) AS (NULL IN (listquery()))#x]
:  +- Project [e#x]
:     +- Project [e#x]
:        +- SubqueryAlias spark_catalog.default.t_empty
:           +- Relation spark_catalog.default.t_empty[e#x] json
+- OneRowRelation


-- !query
select null in (select e from v_empty)
-- !query analysis
Project [cast(null as int) IN (list#x []) AS (NULL IN (listquery()))#x]
:  +- Project [e#x]
:     +- Project [e#x]
:        +- SubqueryAlias v_empty
:           +- View (`v_empty`, [e#x])
:              +- Project [cast(1#x as int) AS e#x]
:                 +- Project [1 AS 1#x]
:                    +- Filter false
:                       +- OneRowRelation
+- OneRowRelation


-- !query
select null not in (select e from t_empty)
-- !query analysis
Project [NOT cast(null as int) IN (list#x []) AS (NOT (NULL IN (listquery())))#x]
:  +- Project [e#x]
:     +- Project [e#x]
:        +- SubqueryAlias spark_catalog.default.t_empty
:           +- Relation spark_catalog.default.t_empty[e#x] json
+- OneRowRelation


-- !query
select null not in (select e from v_empty)
-- !query analysis
Project [NOT cast(null as int) IN (list#x []) AS (NOT (NULL IN (listquery())))#x]
:  +- Project [e#x]
:     +- Project [e#x]
:        +- SubqueryAlias v_empty
:           +- View (`v_empty`, [e#x])
:              +- Project [cast(1#x as int) AS e#x]
:                 +- Project [1 AS 1#x]
:                    +- Filter false
:                       +- OneRowRelation
+- OneRowRelation


-- !query
select * from t left join t2 on (t.c in (select e from t_empty)) is null
-- !query analysis
Project [c#x, d#x]
+- Join LeftOuter, isnull(c#x IN (list#x []))
   :  +- Project [e#x]
   :     +- SubqueryAlias spark_catalog.default.t_empty
   :        +- Relation spark_catalog.default.t_empty[e#x] json
   :- SubqueryAlias spark_catalog.default.t
   :  +- Relation spark_catalog.default.t[c#x] json
   +- SubqueryAlias spark_catalog.default.t2
      +- Relation spark_catalog.default.t2[d#x] json


-- !query
select * from t left join t2 on (t.c not in (select e from t_empty)) is null
-- !query analysis
Project [c#x, d#x]
+- Join LeftOuter, isnull(NOT c#x IN (list#x []))
   :  +- Project [e#x]
   :     +- SubqueryAlias spark_catalog.default.t_empty
   :        +- Relation spark_catalog.default.t_empty[e#x] json
   :- SubqueryAlias spark_catalog.default.t
   :  +- Relation spark_catalog.default.t[c#x] json
   +- SubqueryAlias spark_catalog.default.t2
      +- Relation spark_catalog.default.t2[d#x] json


-- !query
reset spark.sql.legacy.nullInEmptyListBehavior
-- !query analysis
ResetCommand spark.sql.legacy.nullInEmptyListBehavior


-- !query
reset spark.sql.optimizer.optimizeUncorrelatedInSubqueriesInJoinCondition.enabled
-- !query analysis
ResetCommand spark.sql.optimizer.optimizeUncorrelatedInSubqueriesInJoinCondition.enabled


-- !query
drop table t
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.t


-- !query
drop table t2
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.t2


-- !query
drop table t_empty
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.t_empty
