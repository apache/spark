-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW EMP(id, emp_name, hiredate, salary, dept_id) AS VALUES
  (100, 'emp 1', date '2005-01-01', double(100.00), 10),
  (100, 'emp 1', date '2005-01-01', double(100.00), 10),
  (200, 'emp 2', date '2003-01-01', double(200.00), 10),
  (300, 'emp 3', date '2002-01-01', double(300.00), 20),
  (400, 'emp 4', date '2005-01-01', double(400.00), 30),
  (500, 'emp 5', date '2001-01-01', double(400.00), NULL),
  (600, 'emp 6 - no dept', date '2001-01-01', double(400.00), 100),
  (700, 'emp 7', date '2010-01-01', double(400.00), 100),
  (800, 'emp 8', date '2016-01-01', double(150.00), 70)
-- !query analysis
CreateViewCommand `EMP`, [(id,None), (emp_name,None), (hiredate,None), (salary,None), (dept_id,None)], VALUES
  (100, 'emp 1', date '2005-01-01', double(100.00), 10),
  (100, 'emp 1', date '2005-01-01', double(100.00), 10),
  (200, 'emp 2', date '2003-01-01', double(200.00), 10),
  (300, 'emp 3', date '2002-01-01', double(300.00), 20),
  (400, 'emp 4', date '2005-01-01', double(400.00), 30),
  (500, 'emp 5', date '2001-01-01', double(400.00), NULL),
  (600, 'emp 6 - no dept', date '2001-01-01', double(400.00), 100),
  (700, 'emp 7', date '2010-01-01', double(400.00), 100),
  (800, 'emp 8', date '2016-01-01', double(150.00), 70), false, false, LocalTempView, UNSUPPORTED, true
   +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]


-- !query
CREATE TEMPORARY VIEW DEPT(dept_id, dept_name, state) AS VALUES
  (10, 'dept 1', 'CA'),
  (20, 'dept 2', 'NY'),
  (30, 'dept 3', 'TX'),
  (40, 'dept 4 - unassigned', 'OR'),
  (50, 'dept 5 - unassigned', 'NJ'),
  (70, 'dept 7', 'FL')
-- !query analysis
CreateViewCommand `DEPT`, [(dept_id,None), (dept_name,None), (state,None)], VALUES
  (10, 'dept 1', 'CA'),
  (20, 'dept 2', 'NY'),
  (30, 'dept 3', 'TX'),
  (40, 'dept 4 - unassigned', 'OR'),
  (50, 'dept 5 - unassigned', 'NJ'),
  (70, 'dept 7', 'FL'), false, false, LocalTempView, UNSUPPORTED, true
   +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
CREATE TEMPORARY VIEW BONUS(emp_name, bonus_amt) AS VALUES
  ('emp 1', double(10.00)),
  ('emp 1', double(20.00)),
  ('emp 2', double(300.00)),
  ('emp 2', double(100.00)),
  ('emp 3', double(300.00)),
  ('emp 4', double(100.00)),
  ('emp 5', double(1000.00)),
  ('emp 6 - no dept', double(500.00))
-- !query analysis
CreateViewCommand `BONUS`, [(emp_name,None), (bonus_amt,None)], VALUES
  ('emp 1', double(10.00)),
  ('emp 1', double(20.00)),
  ('emp 2', double(300.00)),
  ('emp 2', double(100.00)),
  ('emp 3', double(300.00)),
  ('emp 4', double(100.00)),
  ('emp 5', double(1000.00)),
  ('emp 6 - no dept', double(500.00)), false, false, LocalTempView, UNSUPPORTED, true
   +- LocalRelation [col1#x, col2#x]


-- !query
SELECT dept_id, count(*) 
FROM   emp 
GROUP  BY dept_id 
HAVING EXISTS (SELECT 1 
               FROM   bonus 
               WHERE  bonus_amt < min(emp.salary))
-- !query analysis
Project [dept_id#x, count(1)#xL]
+- Filter exists#x [min(salary#x)#x]
   :  +- Project [1 AS 1#x]
   :     +- Filter (bonus_amt#x < outer(min(salary#x)#x))
   :        +- SubqueryAlias bonus
   :           +- View (`BONUS`, [emp_name#x, bonus_amt#x])
   :              +- Project [cast(col1#x as string) AS emp_name#x, cast(col2#x as double) AS bonus_amt#x]
   :                 +- LocalRelation [col1#x, col2#x]
   +- Aggregate [dept_id#x], [dept_id#x, count(1) AS count(1)#xL, min(salary#x) AS min(salary#x)#x]
      +- SubqueryAlias emp
         +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
            +- Project [cast(col1#x as int) AS id#x, cast(col2#x as string) AS emp_name#x, cast(col3#x as date) AS hiredate#x, cast(col4#x as double) AS salary#x, cast(col5#x as int) AS dept_id#x]
               +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]


-- !query
SELECT * 
FROM   dept 
WHERE  EXISTS (SELECT dept_id, 
                      Count(*) 
               FROM   emp 
               GROUP  BY dept_id 
               HAVING EXISTS (SELECT 1 
                              FROM   bonus 
                              WHERE bonus_amt < Min(emp.salary)))
-- !query analysis
Project [dept_id#x, dept_name#x, state#x]
+- Filter exists#x []
   :  +- Project [dept_id#x, count(1)#xL]
   :     +- Filter exists#x [min(salary#x)#x]
   :        :  +- Project [1 AS 1#x]
   :        :     +- Filter (bonus_amt#x < outer(min(salary#x)#x))
   :        :        +- SubqueryAlias bonus
   :        :           +- View (`BONUS`, [emp_name#x, bonus_amt#x])
   :        :              +- Project [cast(col1#x as string) AS emp_name#x, cast(col2#x as double) AS bonus_amt#x]
   :        :                 +- LocalRelation [col1#x, col2#x]
   :        +- Aggregate [dept_id#x], [dept_id#x, count(1) AS count(1)#xL, min(salary#x) AS min(salary#x)#x]
   :           +- SubqueryAlias emp
   :              +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
   :                 +- Project [cast(col1#x as int) AS id#x, cast(col2#x as string) AS emp_name#x, cast(col3#x as date) AS hiredate#x, cast(col4#x as double) AS salary#x, cast(col5#x as int) AS dept_id#x]
   :                    +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]
   +- SubqueryAlias dept
      +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
         +- Project [cast(col1#x as int) AS dept_id#x, cast(col2#x as string) AS dept_name#x, cast(col3#x as string) AS state#x]
            +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
SELECT dept_id, 
       Max(salary) 
FROM   emp gp 
WHERE  EXISTS (SELECT dept_id, 
                      Count(*) 
               FROM   emp p
               GROUP  BY dept_id 
               HAVING EXISTS (SELECT 1 
                              FROM   bonus 
                              WHERE  bonus_amt < Min(p.salary))) 
GROUP  BY gp.dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, max(salary#x) AS max(salary)#x]
+- Filter exists#x []
   :  +- Project [dept_id#x, count(1)#xL]
   :     +- Filter exists#x [min(salary#x)#x]
   :        :  +- Project [1 AS 1#x]
   :        :     +- Filter (bonus_amt#x < outer(min(salary#x)#x))
   :        :        +- SubqueryAlias bonus
   :        :           +- View (`BONUS`, [emp_name#x, bonus_amt#x])
   :        :              +- Project [cast(col1#x as string) AS emp_name#x, cast(col2#x as double) AS bonus_amt#x]
   :        :                 +- LocalRelation [col1#x, col2#x]
   :        +- Aggregate [dept_id#x], [dept_id#x, count(1) AS count(1)#xL, min(salary#x) AS min(salary#x)#x]
   :           +- SubqueryAlias p
   :              +- SubqueryAlias emp
   :                 +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
   :                    +- Project [cast(col1#x as int) AS id#x, cast(col2#x as string) AS emp_name#x, cast(col3#x as date) AS hiredate#x, cast(col4#x as double) AS salary#x, cast(col5#x as int) AS dept_id#x]
   :                       +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]
   +- SubqueryAlias gp
      +- SubqueryAlias emp
         +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
            +- Project [cast(col1#x as int) AS id#x, cast(col2#x as string) AS emp_name#x, cast(col3#x as date) AS hiredate#x, cast(col4#x as double) AS salary#x, cast(col5#x as int) AS dept_id#x]
               +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]


-- !query
SELECT * 
FROM   dept 
WHERE  EXISTS (SELECT dept_id, 
                        Count(*) 
                 FROM   emp 
                 GROUP  BY dept_id 
                 HAVING EXISTS (SELECT 1 
                                FROM   bonus 
                                WHERE  bonus_amt > Min(emp.salary)))
-- !query analysis
Project [dept_id#x, dept_name#x, state#x]
+- Filter exists#x []
   :  +- Project [dept_id#x, count(1)#xL]
   :     +- Filter exists#x [min(salary#x)#x]
   :        :  +- Project [1 AS 1#x]
   :        :     +- Filter (bonus_amt#x > outer(min(salary#x)#x))
   :        :        +- SubqueryAlias bonus
   :        :           +- View (`BONUS`, [emp_name#x, bonus_amt#x])
   :        :              +- Project [cast(col1#x as string) AS emp_name#x, cast(col2#x as double) AS bonus_amt#x]
   :        :                 +- LocalRelation [col1#x, col2#x]
   :        +- Aggregate [dept_id#x], [dept_id#x, count(1) AS count(1)#xL, min(salary#x) AS min(salary#x)#x]
   :           +- SubqueryAlias emp
   :              +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
   :                 +- Project [cast(col1#x as int) AS id#x, cast(col2#x as string) AS emp_name#x, cast(col3#x as date) AS hiredate#x, cast(col4#x as double) AS salary#x, cast(col5#x as int) AS dept_id#x]
   :                    +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]
   +- SubqueryAlias dept
      +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
         +- Project [cast(col1#x as int) AS dept_id#x, cast(col2#x as string) AS dept_name#x, cast(col3#x as string) AS state#x]
            +- LocalRelation [col1#x, col2#x, col3#x]


-- !query
SELECT * 
FROM   dept 
WHERE  EXISTS (SELECT dept_id, 
                      count(emp.dept_id)
               FROM   emp 
               WHERE  dept.dept_id = dept_id 
               GROUP  BY dept_id 
               HAVING EXISTS (SELECT 1 
                              FROM   bonus 
                              WHERE  ( bonus_amt > min(emp.salary) 
                                       AND count(emp.dept_id) > 1 )))
-- !query analysis
Project [dept_id#x, dept_name#x, state#x]
+- Filter exists#x [dept_id#x]
   :  +- Project [dept_id#x, count(dept_id)#xL]
   :     +- Filter exists#x [min(salary#x)#x && count(dept_id)#xL]
   :        :  +- Project [1 AS 1#x]
   :        :     +- Filter ((bonus_amt#x > outer(min(salary#x)#x)) AND (outer(count(dept_id)#xL) > cast(1 as bigint)))
   :        :        +- SubqueryAlias bonus
   :        :           +- View (`BONUS`, [emp_name#x, bonus_amt#x])
   :        :              +- Project [cast(col1#x as string) AS emp_name#x, cast(col2#x as double) AS bonus_amt#x]
   :        :                 +- LocalRelation [col1#x, col2#x]
   :        +- Aggregate [dept_id#x], [dept_id#x, count(dept_id#x) AS count(dept_id)#xL, min(salary#x) AS min(salary#x)#x]
   :           +- Filter (outer(dept_id#x) = dept_id#x)
   :              +- SubqueryAlias emp
   :                 +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
   :                    +- Project [cast(col1#x as int) AS id#x, cast(col2#x as string) AS emp_name#x, cast(col3#x as date) AS hiredate#x, cast(col4#x as double) AS salary#x, cast(col5#x as int) AS dept_id#x]
   :                       +- LocalRelation [col1#x, col2#x, col3#x, col4#x, col5#x]
   +- SubqueryAlias dept
      +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
         +- Project [cast(col1#x as int) AS dept_id#x, cast(col2#x as string) AS dept_name#x, cast(col3#x as string) AS state#x]
            +- LocalRelation [col1#x, col2#x, col3#x]
