-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW EMP AS SELECT * FROM VALUES
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (200, "emp 2", date "2003-01-01", 200.00D, 10),
  (300, "emp 3", date "2002-01-01", 300.00D, 20),
  (400, "emp 4", date "2005-01-01", 400.00D, 30),
  (500, "emp 5", date "2001-01-01", 400.00D, NULL),
  (600, "emp 6 - no dept", date "2001-01-01", 400.00D, 100),
  (700, "emp 7", date "2010-01-01", 400.00D, 100),
  (800, "emp 8", date "2016-01-01", 150.00D, 70)
AS EMP(id, emp_name, hiredate, salary, dept_id)
-- !query analysis
CreateViewCommand `EMP`, SELECT * FROM VALUES
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (200, "emp 2", date "2003-01-01", 200.00D, 10),
  (300, "emp 3", date "2002-01-01", 300.00D, 20),
  (400, "emp 4", date "2005-01-01", 400.00D, 30),
  (500, "emp 5", date "2001-01-01", 400.00D, NULL),
  (600, "emp 6 - no dept", date "2001-01-01", 400.00D, 100),
  (700, "emp 7", date "2010-01-01", 400.00D, 100),
  (800, "emp 8", date "2016-01-01", 150.00D, 70)
AS EMP(id, emp_name, hiredate, salary, dept_id), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
      +- SubqueryAlias EMP
         +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
CREATE TEMPORARY VIEW DEPT AS SELECT * FROM VALUES
  (10, "dept 1", "CA"),
  (20, "dept 2", "NY"),
  (30, "dept 3", "TX"),
  (40, "dept 4 - unassigned", "OR"),
  (50, "dept 5 - unassigned", "NJ"),
  (70, "dept 7", "FL")
AS DEPT(dept_id, dept_name, state)
-- !query analysis
CreateViewCommand `DEPT`, SELECT * FROM VALUES
  (10, "dept 1", "CA"),
  (20, "dept 2", "NY"),
  (30, "dept 3", "TX"),
  (40, "dept 4 - unassigned", "OR"),
  (50, "dept 5 - unassigned", "NJ"),
  (70, "dept 7", "FL")
AS DEPT(dept_id, dept_name, state), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [dept_id#x, dept_name#x, state#x]
      +- SubqueryAlias DEPT
         +- LocalRelation [dept_id#x, dept_name#x, state#x]


-- !query
CREATE TEMPORARY VIEW BONUS AS SELECT * FROM VALUES
  ("emp 1", 10.00D),
  ("emp 1", 20.00D),
  ("emp 2", 300.00D),
  ("emp 2", 100.00D),
  ("emp 3", 300.00D),
  ("emp 4", 100.00D),
  ("emp 5", 1000.00D),
  ("emp 6 - no dept", 500.00D)
AS BONUS(emp_name, bonus_amt)
-- !query analysis
CreateViewCommand `BONUS`, SELECT * FROM VALUES
  ("emp 1", 10.00D),
  ("emp 1", 20.00D),
  ("emp 2", 300.00D),
  ("emp 2", 100.00D),
  ("emp 3", 300.00D),
  ("emp 4", 100.00D),
  ("emp 5", 1000.00D),
  ("emp 6 - no dept", 500.00D)
AS BONUS(emp_name, bonus_amt), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [emp_name#x, bonus_amt#x]
      +- SubqueryAlias BONUS
         +- LocalRelation [emp_name#x, bonus_amt#x]


-- !query
WITH bonus_cte 
     AS (SELECT * 
         FROM   bonus 
         WHERE  EXISTS (SELECT dept.dept_id, 
                                 emp.emp_name, 
                                 Max(salary), 
                                 Count(*) 
                          FROM   emp 
                                 JOIN dept 
                                   ON dept.dept_id = emp.dept_id 
                          WHERE  bonus.emp_name = emp.emp_name 
                          GROUP  BY dept.dept_id, 
                                    emp.emp_name 
                          ORDER  BY emp.emp_name)) 
SELECT * 
FROM   bonus a 
WHERE  a.bonus_amt > 30 
       AND EXISTS (SELECT 1 
                   FROM   bonus_cte b 
                   WHERE  a.emp_name = b.emp_name)
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias bonus_cte
:     +- Project [emp_name#x, bonus_amt#x]
:        +- Filter exists#x [emp_name#x]
:           :  +- Sort [emp_name#x ASC NULLS FIRST], true
:           :     +- Aggregate [dept_id#x, emp_name#x], [dept_id#x, emp_name#x, max(salary#x) AS max(salary)#x, count(1) AS count(1)#xL]
:           :        +- Filter (outer(emp_name#x) = emp_name#x)
:           :           +- Join Inner, (dept_id#x = dept_id#x)
:           :              :- SubqueryAlias emp
:           :              :  +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
:           :              :     +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
:           :              :        +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
:           :              :           +- SubqueryAlias EMP
:           :              :              +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
:           :              +- SubqueryAlias dept
:           :                 +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:           :                    +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:           :                       +- Project [dept_id#x, dept_name#x, state#x]
:           :                          +- SubqueryAlias DEPT
:           :                             +- LocalRelation [dept_id#x, dept_name#x, state#x]
:           +- SubqueryAlias bonus
:              +- View (`BONUS`, [emp_name#x, bonus_amt#x])
:                 +- Project [cast(emp_name#x as string) AS emp_name#x, cast(bonus_amt#x as double) AS bonus_amt#x]
:                    +- Project [emp_name#x, bonus_amt#x]
:                       +- SubqueryAlias BONUS
:                          +- LocalRelation [emp_name#x, bonus_amt#x]
+- Project [emp_name#x, bonus_amt#x]
   +- Filter ((bonus_amt#x > cast(30 as double)) AND exists#x [emp_name#x])
      :  +- Project [1 AS 1#x]
      :     +- Filter (outer(emp_name#x) = emp_name#x)
      :        +- SubqueryAlias b
      :           +- SubqueryAlias bonus_cte
      :              +- CTERelationRef xxxx, true, [emp_name#x, bonus_amt#x], false, false
      +- SubqueryAlias a
         +- SubqueryAlias bonus
            +- View (`BONUS`, [emp_name#x, bonus_amt#x])
               +- Project [cast(emp_name#x as string) AS emp_name#x, cast(bonus_amt#x as double) AS bonus_amt#x]
                  +- Project [emp_name#x, bonus_amt#x]
                     +- SubqueryAlias BONUS
                        +- LocalRelation [emp_name#x, bonus_amt#x]


-- !query
WITH emp_cte 
     AS (SELECT * 
         FROM   emp 
         WHERE  id >= 100 
                AND id <= 300), 
     dept_cte 
     AS (SELECT * 
         FROM   dept 
         WHERE  dept_id = 10) 
SELECT * 
FROM   bonus 
WHERE  EXISTS (SELECT * 
               FROM   emp_cte a 
                      JOIN dept_cte b 
                        ON a.dept_id = b.dept_id 
               WHERE  bonus.emp_name = a.emp_name)
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias emp_cte
:     +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
:        +- Filter ((id#x >= 100) AND (id#x <= 300))
:           +- SubqueryAlias emp
:              +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
:                 +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
:                    +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
:                       +- SubqueryAlias EMP
:                          +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
:- CTERelationDef xxxx, false
:  +- SubqueryAlias dept_cte
:     +- Project [dept_id#x, dept_name#x, state#x]
:        +- Filter (dept_id#x = 10)
:           +- SubqueryAlias dept
:              +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:                 +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                    +- Project [dept_id#x, dept_name#x, state#x]
:                       +- SubqueryAlias DEPT
:                          +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- Project [emp_name#x, bonus_amt#x]
   +- Filter exists#x [emp_name#x]
      :  +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x, dept_id#x, dept_name#x, state#x]
      :     +- Filter (outer(emp_name#x) = emp_name#x)
      :        +- Join Inner, (dept_id#x = dept_id#x)
      :           :- SubqueryAlias a
      :           :  +- SubqueryAlias emp_cte
      :           :     +- CTERelationRef xxxx, true, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x], false, false
      :           +- SubqueryAlias b
      :              +- SubqueryAlias dept_cte
      :                 +- CTERelationRef xxxx, true, [dept_id#x, dept_name#x, state#x], false, false
      +- SubqueryAlias bonus
         +- View (`BONUS`, [emp_name#x, bonus_amt#x])
            +- Project [cast(emp_name#x as string) AS emp_name#x, cast(bonus_amt#x as double) AS bonus_amt#x]
               +- Project [emp_name#x, bonus_amt#x]
                  +- SubqueryAlias BONUS
                     +- LocalRelation [emp_name#x, bonus_amt#x]


-- !query
WITH emp_cte 
     AS (SELECT * 
         FROM   emp 
         WHERE  id >= 100 
                AND id <= 300), 
     dept_cte 
     AS (SELECT * 
         FROM   dept 
         WHERE  dept_id = 10) 
SELECT DISTINCT b.emp_name, 
                b.bonus_amt 
FROM   bonus b, 
       emp_cte e, 
       dept d 
WHERE  e.dept_id = d.dept_id 
       AND e.emp_name = b.emp_name 
       AND EXISTS (SELECT * 
                   FROM   emp_cte a 
                          LEFT JOIN dept_cte b 
                                 ON a.dept_id = b.dept_id 
                   WHERE  e.emp_name = a.emp_name)
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias emp_cte
:     +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
:        +- Filter ((id#x >= 100) AND (id#x <= 300))
:           +- SubqueryAlias emp
:              +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
:                 +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
:                    +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
:                       +- SubqueryAlias EMP
:                          +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
:- CTERelationDef xxxx, false
:  +- SubqueryAlias dept_cte
:     +- Project [dept_id#x, dept_name#x, state#x]
:        +- Filter (dept_id#x = 10)
:           +- SubqueryAlias dept
:              +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:                 +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                    +- Project [dept_id#x, dept_name#x, state#x]
:                       +- SubqueryAlias DEPT
:                          +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- Distinct
   +- Project [emp_name#x, bonus_amt#x]
      +- Filter (((dept_id#x = dept_id#x) AND (emp_name#x = emp_name#x)) AND exists#x [emp_name#x])
         :  +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x, dept_id#x, dept_name#x, state#x]
         :     +- Filter (outer(emp_name#x) = emp_name#x)
         :        +- Join LeftOuter, (dept_id#x = dept_id#x)
         :           :- SubqueryAlias a
         :           :  +- SubqueryAlias emp_cte
         :           :     +- CTERelationRef xxxx, true, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x], false, false
         :           +- SubqueryAlias b
         :              +- SubqueryAlias dept_cte
         :                 +- CTERelationRef xxxx, true, [dept_id#x, dept_name#x, state#x], false, false
         +- Join Inner
            :- Join Inner
            :  :- SubqueryAlias b
            :  :  +- SubqueryAlias bonus
            :  :     +- View (`BONUS`, [emp_name#x, bonus_amt#x])
            :  :        +- Project [cast(emp_name#x as string) AS emp_name#x, cast(bonus_amt#x as double) AS bonus_amt#x]
            :  :           +- Project [emp_name#x, bonus_amt#x]
            :  :              +- SubqueryAlias BONUS
            :  :                 +- LocalRelation [emp_name#x, bonus_amt#x]
            :  +- SubqueryAlias e
            :     +- SubqueryAlias emp_cte
            :        +- CTERelationRef xxxx, true, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x], false, false
            +- SubqueryAlias d
               +- SubqueryAlias dept
                  +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
                     +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
                        +- Project [dept_id#x, dept_name#x, state#x]
                           +- SubqueryAlias DEPT
                              +- LocalRelation [dept_id#x, dept_name#x, state#x]


-- !query
WITH empdept 
     AS (SELECT id, 
                salary, 
                emp_name, 
                dept.dept_id 
         FROM   emp 
                LEFT JOIN dept 
                       ON emp.dept_id = dept.dept_id 
         WHERE  emp.id IN ( 100, 200 )) 
SELECT emp_name, 
       Sum(bonus_amt) 
FROM   bonus 
WHERE  EXISTS (SELECT dept_id, 
                      max(salary) 
               FROM   empdept 
               GROUP  BY dept_id 
               HAVING count(*) > 1) 
GROUP  BY emp_name
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias empdept
:     +- Project [id#x, salary#x, emp_name#x, dept_id#x]
:        +- Filter id#x IN (100,200)
:           +- Join LeftOuter, (dept_id#x = dept_id#x)
:              :- SubqueryAlias emp
:              :  +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
:              :     +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
:              :        +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
:              :           +- SubqueryAlias EMP
:              :              +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
:              +- SubqueryAlias dept
:                 +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:                    +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                       +- Project [dept_id#x, dept_name#x, state#x]
:                          +- SubqueryAlias DEPT
:                             +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- Aggregate [emp_name#x], [emp_name#x, sum(bonus_amt#x) AS sum(bonus_amt)#x]
   +- Filter exists#x []
      :  +- Project [dept_id#x, max(salary)#x]
      :     +- Filter (count(1)#xL > cast(1 as bigint))
      :        +- Aggregate [dept_id#x], [dept_id#x, max(salary#x) AS max(salary)#x, count(1) AS count(1)#xL]
      :           +- SubqueryAlias empdept
      :              +- CTERelationRef xxxx, true, [id#x, salary#x, emp_name#x, dept_id#x], false, false
      +- SubqueryAlias bonus
         +- View (`BONUS`, [emp_name#x, bonus_amt#x])
            +- Project [cast(emp_name#x as string) AS emp_name#x, cast(bonus_amt#x as double) AS bonus_amt#x]
               +- Project [emp_name#x, bonus_amt#x]
                  +- SubqueryAlias BONUS
                     +- LocalRelation [emp_name#x, bonus_amt#x]


-- !query
WITH empdept 
     AS (SELECT id, 
                salary, 
                emp_name, 
                dept.dept_id 
         FROM   emp 
                LEFT JOIN dept 
                       ON emp.dept_id = dept.dept_id 
         WHERE  emp.id IN ( 100, 200 )) 
SELECT emp_name, 
       Sum(bonus_amt) 
FROM   bonus 
WHERE  NOT EXISTS (SELECT dept_id, 
                          Max(salary) 
                   FROM   empdept 
                   GROUP  BY dept_id 
                   HAVING count(*) < 1) 
GROUP  BY emp_name
-- !query analysis
WithCTE
:- CTERelationDef xxxx, false
:  +- SubqueryAlias empdept
:     +- Project [id#x, salary#x, emp_name#x, dept_id#x]
:        +- Filter id#x IN (100,200)
:           +- Join LeftOuter, (dept_id#x = dept_id#x)
:              :- SubqueryAlias emp
:              :  +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
:              :     +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
:              :        +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
:              :           +- SubqueryAlias EMP
:              :              +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
:              +- SubqueryAlias dept
:                 +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:                    +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                       +- Project [dept_id#x, dept_name#x, state#x]
:                          +- SubqueryAlias DEPT
:                             +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- Aggregate [emp_name#x], [emp_name#x, sum(bonus_amt#x) AS sum(bonus_amt)#x]
   +- Filter NOT exists#x []
      :  +- Project [dept_id#x, max(salary)#x]
      :     +- Filter (count(1)#xL < cast(1 as bigint))
      :        +- Aggregate [dept_id#x], [dept_id#x, max(salary#x) AS max(salary)#x, count(1) AS count(1)#xL]
      :           +- SubqueryAlias empdept
      :              +- CTERelationRef xxxx, true, [id#x, salary#x, emp_name#x, dept_id#x], false, false
      +- SubqueryAlias bonus
         +- View (`BONUS`, [emp_name#x, bonus_amt#x])
            +- Project [cast(emp_name#x as string) AS emp_name#x, cast(bonus_amt#x as double) AS bonus_amt#x]
               +- Project [emp_name#x, bonus_amt#x]
                  +- SubqueryAlias BONUS
                     +- LocalRelation [emp_name#x, bonus_amt#x]
