-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view t1(c1, c2) as values (0, 1), (1, 2)
-- !query analysis
CreateViewCommand `t1`, [(c1,None), (c2,None)], values (0, 1), (1, 2), false, false, LocalTempView, UNSUPPORTED, true
   +- LocalRelation [col1#x, col2#x]


-- !query
create temporary view t2(c1, c2) as values (0, 2), (0, 3)
-- !query analysis
CreateViewCommand `t2`, [(c1,None), (c2,None)], values (0, 2), (0, 3), false, false, LocalTempView, UNSUPPORTED, true
   +- LocalRelation [col1#x, col2#x]


-- !query
create temporary view t3(c1, c2) as values (0, 3), (1, 4), (2, 5)
-- !query analysis
CreateViewCommand `t3`, [(c1,None), (c2,None)], values (0, 3), (1, 4), (2, 5), false, false, LocalTempView, UNSUPPORTED, true
   +- LocalRelation [col1#x, col2#x]


-- !query
select * from t1 where exists (select count(*) from t2 where t2.c1 = t1.c1)
-- !query analysis
Project [c1#x, c2#x]
+- Filter exists#x [c1#x]
   :  +- Aggregate [count(1) AS count(1)#xL]
   :     +- Filter (c1#x = outer(c1#x))
   :        +- SubqueryAlias t2
   :           +- View (`t2`, [c1#x, c2#x])
   :              +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
   :                 +- LocalRelation [col1#x, col2#x]
   +- SubqueryAlias t1
      +- View (`t1`, [c1#x, c2#x])
         +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
            +- LocalRelation [col1#x, col2#x]


-- !query
select * from t1 where not exists (select count(*) from t2 where t2.c1 = t1.c1)
-- !query analysis
Project [c1#x, c2#x]
+- Filter NOT exists#x [c1#x]
   :  +- Aggregate [count(1) AS count(1)#xL]
   :     +- Filter (c1#x = outer(c1#x))
   :        +- SubqueryAlias t2
   :           +- View (`t2`, [c1#x, c2#x])
   :              +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
   :                 +- LocalRelation [col1#x, col2#x]
   +- SubqueryAlias t1
      +- View (`t1`, [c1#x, c2#x])
         +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
            +- LocalRelation [col1#x, col2#x]


-- !query
select *, exists (select count(*) from t2 where t2.c1 = t1.c1) from t1
-- !query analysis
Project [c1#x, c2#x, exists#x [c1#x] AS exists(c1)#x]
:  +- Aggregate [count(1) AS count(1)#xL]
:     +- Filter (c1#x = outer(c1#x))
:        +- SubqueryAlias t2
:           +- View (`t2`, [c1#x, c2#x])
:              +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
:                 +- LocalRelation [col1#x, col2#x]
+- SubqueryAlias t1
   +- View (`t1`, [c1#x, c2#x])
      +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
         +- LocalRelation [col1#x, col2#x]


-- !query
select *, not exists (select count(*) from t2 where t2.c1 = t1.c1) from t1
-- !query analysis
Project [c1#x, c2#x, NOT exists#x [c1#x] AS (NOT exists(c1))#x]
:  +- Aggregate [count(1) AS count(1)#xL]
:     +- Filter (c1#x = outer(c1#x))
:        +- SubqueryAlias t2
:           +- View (`t2`, [c1#x, c2#x])
:              +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
:                 +- LocalRelation [col1#x, col2#x]
+- SubqueryAlias t1
   +- View (`t1`, [c1#x, c2#x])
      +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
         +- LocalRelation [col1#x, col2#x]


-- !query
select * from t1 where
 exists(select count(*) + 1 from t2 where t2.c1 = t1.c1) OR
 not exists (select count(*) - 1 from t2 where t2.c1 = t1.c1)
-- !query analysis
Project [c1#x, c2#x]
+- Filter (exists#x [c1#x] OR NOT exists#x [c1#x])
   :  :- Aggregate [(count(1) + cast(1 as bigint)) AS (count(1) + 1)#xL]
   :  :  +- Filter (c1#x = outer(c1#x))
   :  :     +- SubqueryAlias t2
   :  :        +- View (`t2`, [c1#x, c2#x])
   :  :           +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
   :  :              +- LocalRelation [col1#x, col2#x]
   :  +- Aggregate [(count(1) - cast(1 as bigint)) AS (count(1) - 1)#xL]
   :     +- Filter (c1#x = outer(c1#x))
   :        +- SubqueryAlias t2
   :           +- View (`t2`, [c1#x, c2#x])
   :              +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
   :                 +- LocalRelation [col1#x, col2#x]
   +- SubqueryAlias t1
      +- View (`t1`, [c1#x, c2#x])
         +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
            +- LocalRelation [col1#x, col2#x]


-- !query
select * from t1 where
 (exists(select count(*) + 1 from t2 where t2.c1 = t1.c1) OR
 not exists(select count(*) - 1 from t2 where t2.c1 = t1.c1)) AND
 exists(select count(*) from t2 where t2.c1 = t1.c2)
-- !query analysis
Project [c1#x, c2#x]
+- Filter ((exists#x [c1#x] OR NOT exists#x [c1#x]) AND exists#x [c2#x])
   :  :- Aggregate [(count(1) + cast(1 as bigint)) AS (count(1) + 1)#xL]
   :  :  +- Filter (c1#x = outer(c1#x))
   :  :     +- SubqueryAlias t2
   :  :        +- View (`t2`, [c1#x, c2#x])
   :  :           +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
   :  :              +- LocalRelation [col1#x, col2#x]
   :  :- Aggregate [(count(1) - cast(1 as bigint)) AS (count(1) - 1)#xL]
   :  :  +- Filter (c1#x = outer(c1#x))
   :  :     +- SubqueryAlias t2
   :  :        +- View (`t2`, [c1#x, c2#x])
   :  :           +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
   :  :              +- LocalRelation [col1#x, col2#x]
   :  +- Aggregate [count(1) AS count(1)#xL]
   :     +- Filter (c1#x = outer(c2#x))
   :        +- SubqueryAlias t2
   :           +- View (`t2`, [c1#x, c2#x])
   :              +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
   :                 +- LocalRelation [col1#x, col2#x]
   +- SubqueryAlias t1
      +- View (`t1`, [c1#x, c2#x])
         +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
            +- LocalRelation [col1#x, col2#x]


-- !query
select * from t1 where exists (select count(*) from t2 where t1.c1 = 100)
-- !query analysis
Project [c1#x, c2#x]
+- Filter exists#x [c1#x]
   :  +- Aggregate [count(1) AS count(1)#xL]
   :     +- Filter (outer(c1#x) = 100)
   :        +- SubqueryAlias t2
   :           +- View (`t2`, [c1#x, c2#x])
   :              +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
   :                 +- LocalRelation [col1#x, col2#x]
   +- SubqueryAlias t1
      +- View (`t1`, [c1#x, c2#x])
         +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
            +- LocalRelation [col1#x, col2#x]


-- !query
set spark.sql.optimizer.decorrelateExistsSubqueryLegacyIncorrectCountHandling.enabled = true
-- !query analysis
SetCommand (spark.sql.optimizer.decorrelateExistsSubqueryLegacyIncorrectCountHandling.enabled,Some(true))


-- !query
select * from t1 where exists (select count(*) from t2 where t2.c1 = t1.c1)
-- !query analysis
Project [c1#x, c2#x]
+- Filter exists#x [c1#x]
   :  +- Aggregate [count(1) AS count(1)#xL]
   :     +- Filter (c1#x = outer(c1#x))
   :        +- SubqueryAlias t2
   :           +- View (`t2`, [c1#x, c2#x])
   :              +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
   :                 +- LocalRelation [col1#x, col2#x]
   +- SubqueryAlias t1
      +- View (`t1`, [c1#x, c2#x])
         +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
            +- LocalRelation [col1#x, col2#x]


-- !query
select * from t1 where not exists (select count(*) from t2 where t2.c1 = t1.c1)
-- !query analysis
Project [c1#x, c2#x]
+- Filter NOT exists#x [c1#x]
   :  +- Aggregate [count(1) AS count(1)#xL]
   :     +- Filter (c1#x = outer(c1#x))
   :        +- SubqueryAlias t2
   :           +- View (`t2`, [c1#x, c2#x])
   :              +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
   :                 +- LocalRelation [col1#x, col2#x]
   +- SubqueryAlias t1
      +- View (`t1`, [c1#x, c2#x])
         +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
            +- LocalRelation [col1#x, col2#x]


-- !query
select *, exists (select count(*) from t2 where t2.c1 = t1.c1) from t1
-- !query analysis
Project [c1#x, c2#x, exists#x [c1#x] AS exists(c1)#x]
:  +- Aggregate [count(1) AS count(1)#xL]
:     +- Filter (c1#x = outer(c1#x))
:        +- SubqueryAlias t2
:           +- View (`t2`, [c1#x, c2#x])
:              +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
:                 +- LocalRelation [col1#x, col2#x]
+- SubqueryAlias t1
   +- View (`t1`, [c1#x, c2#x])
      +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
         +- LocalRelation [col1#x, col2#x]


-- !query
select *, not exists (select count(*) from t2 where t2.c1 = t1.c1) from t1
-- !query analysis
Project [c1#x, c2#x, NOT exists#x [c1#x] AS (NOT exists(c1))#x]
:  +- Aggregate [count(1) AS count(1)#xL]
:     +- Filter (c1#x = outer(c1#x))
:        +- SubqueryAlias t2
:           +- View (`t2`, [c1#x, c2#x])
:              +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
:                 +- LocalRelation [col1#x, col2#x]
+- SubqueryAlias t1
   +- View (`t1`, [c1#x, c2#x])
      +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
         +- LocalRelation [col1#x, col2#x]


-- !query
select * from t1 where
 exists(select count(*) + 1 from t2 where t2.c1 = t1.c1) OR
 not exists (select count(*) - 1 from t2 where t2.c1 = t1.c1)
-- !query analysis
Project [c1#x, c2#x]
+- Filter (exists#x [c1#x] OR NOT exists#x [c1#x])
   :  :- Aggregate [(count(1) + cast(1 as bigint)) AS (count(1) + 1)#xL]
   :  :  +- Filter (c1#x = outer(c1#x))
   :  :     +- SubqueryAlias t2
   :  :        +- View (`t2`, [c1#x, c2#x])
   :  :           +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
   :  :              +- LocalRelation [col1#x, col2#x]
   :  +- Aggregate [(count(1) - cast(1 as bigint)) AS (count(1) - 1)#xL]
   :     +- Filter (c1#x = outer(c1#x))
   :        +- SubqueryAlias t2
   :           +- View (`t2`, [c1#x, c2#x])
   :              +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
   :                 +- LocalRelation [col1#x, col2#x]
   +- SubqueryAlias t1
      +- View (`t1`, [c1#x, c2#x])
         +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
            +- LocalRelation [col1#x, col2#x]


-- !query
select * from t1 where exists (select count(*) from t2 where t1.c1 = 100)
-- !query analysis
Project [c1#x, c2#x]
+- Filter exists#x [c1#x]
   :  +- Aggregate [count(1) AS count(1)#xL]
   :     +- Filter (outer(c1#x) = 100)
   :        +- SubqueryAlias t2
   :           +- View (`t2`, [c1#x, c2#x])
   :              +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
   :                 +- LocalRelation [col1#x, col2#x]
   +- SubqueryAlias t1
      +- View (`t1`, [c1#x, c2#x])
         +- Project [cast(col1#x as int) AS c1#x, cast(col2#x as int) AS c2#x]
            +- LocalRelation [col1#x, col2#x]


-- !query
set spark.sql.optimizer.decorrelateExistsSubqueryLegacyIncorrectCountHandling.enabled = false
-- !query analysis
SetCommand (spark.sql.optimizer.decorrelateExistsSubqueryLegacyIncorrectCountHandling.enabled,Some(false))
