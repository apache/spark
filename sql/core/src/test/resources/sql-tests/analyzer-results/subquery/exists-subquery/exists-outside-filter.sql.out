-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW EMP AS SELECT * FROM VALUES
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (200, "emp 2", date "2003-01-01", 200.00D, 10),
  (300, "emp 3", date "2002-01-01", 300.00D, 20),
  (400, "emp 4", date "2005-01-01", 400.00D, 30),
  (500, "emp 5", date "2001-01-01", 400.00D, NULL),
  (600, "emp 6 - no dept", date "2001-01-01", 400.00D, 100),
  (700, "emp 7", date "2010-01-01", 400.00D, 100),
  (800, "emp 8", date "2016-01-01", 150.00D, 70)
AS EMP(id, emp_name, hiredate, salary, dept_id)
-- !query analysis
CreateViewCommand `EMP`, SELECT * FROM VALUES
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (200, "emp 2", date "2003-01-01", 200.00D, 10),
  (300, "emp 3", date "2002-01-01", 300.00D, 20),
  (400, "emp 4", date "2005-01-01", 400.00D, 30),
  (500, "emp 5", date "2001-01-01", 400.00D, NULL),
  (600, "emp 6 - no dept", date "2001-01-01", 400.00D, 100),
  (700, "emp 7", date "2010-01-01", 400.00D, 100),
  (800, "emp 8", date "2016-01-01", 150.00D, 70)
AS EMP(id, emp_name, hiredate, salary, dept_id), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
      +- SubqueryAlias EMP
         +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
CREATE TEMPORARY VIEW DEPT AS SELECT * FROM VALUES
  (10, "dept 1", "CA"),
  (20, "dept 2", "NY"),
  (30, "dept 3", "TX"),
  (40, "dept 4 - unassigned", "OR"),
  (50, "dept 5 - unassigned", "NJ"),
  (70, "dept 7", "FL")
AS DEPT(dept_id, dept_name, state)
-- !query analysis
CreateViewCommand `DEPT`, SELECT * FROM VALUES
  (10, "dept 1", "CA"),
  (20, "dept 2", "NY"),
  (30, "dept 3", "TX"),
  (40, "dept 4 - unassigned", "OR"),
  (50, "dept 5 - unassigned", "NJ"),
  (70, "dept 7", "FL")
AS DEPT(dept_id, dept_name, state), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [dept_id#x, dept_name#x, state#x]
      +- SubqueryAlias DEPT
         +- LocalRelation [dept_id#x, dept_name#x, state#x]


-- !query
CREATE TEMPORARY VIEW BONUS AS SELECT * FROM VALUES
  ("emp 1", 10.00D),
  ("emp 1", 20.00D),
  ("emp 2", 300.00D),
  ("emp 2", 100.00D),
  ("emp 3", 300.00D),
  ("emp 4", 100.00D),
  ("emp 5", 1000.00D),
  ("emp 6 - no dept", 500.00D)
AS BONUS(emp_name, bonus_amt)
-- !query analysis
CreateViewCommand `BONUS`, SELECT * FROM VALUES
  ("emp 1", 10.00D),
  ("emp 1", 20.00D),
  ("emp 2", 300.00D),
  ("emp 2", 100.00D),
  ("emp 3", 300.00D),
  ("emp 4", 100.00D),
  ("emp 5", 1000.00D),
  ("emp 6 - no dept", 500.00D)
AS BONUS(emp_name, bonus_amt), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [emp_name#x, bonus_amt#x]
      +- SubqueryAlias BONUS
         +- LocalRelation [emp_name#x, bonus_amt#x]


-- !query
SELECT
  emp_name,
  EXISTS (SELECT 1
          FROM   dept
          WHERE  dept.dept_id > 10
            AND dept.dept_id < 30)
FROM   emp
-- !query analysis
Project [emp_name#x, exists#x [] AS exists()#x]
:  +- Project [1 AS 1#x]
:     +- Filter ((dept_id#x > 10) AND (dept_id#x < 30))
:        +- SubqueryAlias dept
:           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                 +- Project [dept_id#x, dept_name#x, state#x]
:                    +- SubqueryAlias DEPT
:                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
  emp_name,
  EXISTS (SELECT 1
          FROM   dept
          WHERE  emp.dept_id = dept.dept_id)
FROM   emp
-- !query analysis
Project [emp_name#x, exists#x [dept_id#x] AS exists(dept_id)#x]
:  +- Project [1 AS 1#x]
:     +- Filter (outer(dept_id#x) = dept_id#x)
:        +- SubqueryAlias dept
:           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                 +- Project [dept_id#x, dept_name#x, state#x]
:                    +- SubqueryAlias DEPT
:                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
  sum(salary),
  sum(salary) FILTER (WHERE EXISTS (SELECT 1
                                    FROM   dept
                                    WHERE  dept.dept_id > 10
                                      AND dept.dept_id < 30))
FROM   emp
-- !query analysis
Aggregate [sum(salary#x) AS sum(salary)#x, sum(salary#x) FILTER (WHERE exists#x []) AS sum(salary) FILTER (WHERE exists())#x]
:  +- Project [1 AS 1#x]
:     +- Filter ((dept_id#x > 10) AND (dept_id#x < 30))
:        +- SubqueryAlias dept
:           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                 +- Project [dept_id#x, dept_name#x, state#x]
:                    +- SubqueryAlias DEPT
:                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
  sum(salary),
  sum(salary) FILTER (WHERE EXISTS (SELECT 1
                                    FROM   dept
                                    WHERE  emp.dept_id = dept.dept_id))
FROM   emp
-- !query analysis
Aggregate [sum(salary#x) AS sum(salary)#x, sum(salary#x) FILTER (WHERE exists#x [dept_id#x]) AS sum(salary) FILTER (WHERE exists(dept_id))#x]
:  +- Project [1 AS 1#x]
:     +- Filter (outer(dept_id#x) = dept_id#x)
:        +- SubqueryAlias dept
:           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                 +- Project [dept_id#x, dept_name#x, state#x]
:                    +- SubqueryAlias DEPT
:                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
    sum(salary),
    sum(salary) FILTER (WHERE EXISTS (SELECT 1
                                    FROM   dept
                                    WHERE  emp.dept_id = dept.dept_id)
                        OR EXISTS (SELECT 1
                                    FROM   bonus
                                    WHERE  emp.emp_name = bonus.emp_name))
FROM   emp
-- !query analysis
Aggregate [sum(salary#x) AS sum(salary)#x, sum(salary#x) FILTER (WHERE (exists#x [dept_id#x] OR exists#x [emp_name#x])) AS sum(salary) FILTER (WHERE (exists(dept_id) OR exists(emp_name)))#x]
:  :- Project [1 AS 1#x]
:  :  +- Filter (outer(dept_id#x) = dept_id#x)
:  :     +- SubqueryAlias dept
:  :        +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:  :           +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:  :              +- Project [dept_id#x, dept_name#x, state#x]
:  :                 +- SubqueryAlias DEPT
:  :                    +- LocalRelation [dept_id#x, dept_name#x, state#x]
:  +- Project [1 AS 1#x]
:     +- Filter (outer(emp_name#x) = emp_name#x)
:        +- SubqueryAlias bonus
:           +- View (`BONUS`, [emp_name#x, bonus_amt#x])
:              +- Project [cast(emp_name#x as string) AS emp_name#x, cast(bonus_amt#x as double) AS bonus_amt#x]
:                 +- Project [emp_name#x, bonus_amt#x]
:                    +- SubqueryAlias BONUS
:                       +- LocalRelation [emp_name#x, bonus_amt#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
    sum(DISTINCT salary),
    count(DISTINCT hiredate) FILTER (WHERE EXISTS (SELECT 1
                                    FROM   dept
                                    WHERE  emp.dept_id = dept.dept_id))
FROM   emp
-- !query analysis
Aggregate [sum(distinct salary#x) AS sum(DISTINCT salary)#x, count(distinct hiredate#x) FILTER (WHERE exists#x [dept_id#x]) AS count(DISTINCT hiredate) FILTER (WHERE exists(dept_id))#xL]
:  +- Project [1 AS 1#x]
:     +- Filter (outer(dept_id#x) = dept_id#x)
:        +- SubqueryAlias dept
:           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                 +- Project [dept_id#x, dept_name#x, state#x]
:                    +- SubqueryAlias DEPT
:                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
    count(hiredate),
    sum(salary)
FROM   emp
GROUP BY EXISTS (SELECT 1
                FROM   dept
                WHERE  emp.dept_id = dept.dept_id)
-- !query analysis
Aggregate [exists#x [dept_id#x]], [count(hiredate#x) AS count(hiredate)#xL, sum(salary#x) AS sum(salary)#x]
:  +- Project [1 AS 1#x]
:     +- Filter (outer(dept_id#x) = dept_id#x)
:        +- SubqueryAlias dept
:           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                 +- Project [dept_id#x, dept_name#x, state#x]
:                    +- SubqueryAlias DEPT
:                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
    count(DISTINCT hiredate),
    sum(DISTINCT salary)
FROM   emp
GROUP BY EXISTS (SELECT 1
                 FROM   dept
                 WHERE  emp.dept_id = dept.dept_id)
-- !query analysis
Aggregate [exists#x [dept_id#x]], [count(distinct hiredate#x) AS count(DISTINCT hiredate)#xL, sum(distinct salary#x) AS sum(DISTINCT salary)#x]
:  +- Project [1 AS 1#x]
:     +- Filter (outer(dept_id#x) = dept_id#x)
:        +- SubqueryAlias dept
:           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                 +- Project [dept_id#x, dept_name#x, state#x]
:                    +- SubqueryAlias DEPT
:                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
    count(CASE WHEN EXISTS (SELECT 1
                            FROM   dept
                            WHERE  dept.dept_id > 10
                              AND dept.dept_id < 30) THEN 1 END),
    sum(CASE WHEN EXISTS (SELECT 1
                          FROM   dept
                          WHERE  dept.dept_id > 10
                            AND dept.dept_id < 30) THEN salary END)
FROM   emp
-- !query analysis
Aggregate [count(CASE WHEN exists#x [] THEN 1 END) AS count(CASE WHEN exists() THEN 1 END)#xL, sum(CASE WHEN exists#x [] THEN salary#x END) AS sum(CASE WHEN exists() THEN salary END)#x]
:  :- Project [1 AS 1#x]
:  :  +- Filter ((dept_id#x > 10) AND (dept_id#x < 30))
:  :     +- SubqueryAlias dept
:  :        +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:  :           +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:  :              +- Project [dept_id#x, dept_name#x, state#x]
:  :                 +- SubqueryAlias DEPT
:  :                    +- LocalRelation [dept_id#x, dept_name#x, state#x]
:  +- Project [1 AS 1#x]
:     +- Filter ((dept_id#x > 10) AND (dept_id#x < 30))
:        +- SubqueryAlias dept
:           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                 +- Project [dept_id#x, dept_name#x, state#x]
:                    +- SubqueryAlias DEPT
:                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
    count(CASE WHEN EXISTS (SELECT 1
                            FROM   dept
                            WHERE  emp.dept_id = dept.dept_id) THEN 1 END),
    sum(CASE WHEN EXISTS (SELECT 1
                          FROM   dept
                          WHERE  emp.dept_id = dept.dept_id) THEN salary END)
FROM   emp
-- !query analysis
Aggregate [count(CASE WHEN exists#x [dept_id#x] THEN 1 END) AS count(CASE WHEN exists(dept_id) THEN 1 END)#xL, sum(CASE WHEN exists#x [dept_id#x] THEN salary#x END) AS sum(CASE WHEN exists(dept_id) THEN salary END)#x]
:  :- Project [1 AS 1#x]
:  :  +- Filter (outer(dept_id#x) = dept_id#x)
:  :     +- SubqueryAlias dept
:  :        +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:  :           +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:  :              +- Project [dept_id#x, dept_name#x, state#x]
:  :                 +- SubqueryAlias DEPT
:  :                    +- LocalRelation [dept_id#x, dept_name#x, state#x]
:  +- Project [1 AS 1#x]
:     +- Filter (outer(dept_id#x) = dept_id#x)
:        +- SubqueryAlias dept
:           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                 +- Project [dept_id#x, dept_name#x, state#x]
:                    +- SubqueryAlias DEPT
:                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
    emp_name,
    sum(salary) OVER (PARTITION BY EXISTS (SELECT 1
                                           FROM   dept
                                           WHERE  dept.dept_id > 10
                                             AND dept.dept_id < 30))
FROM   emp
-- !query analysis
Project [emp_name#x, sum(salary) OVER (PARTITION BY exists() ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)#x]
+- Project [emp_name#x, salary#x, _w1#x, sum(salary) OVER (PARTITION BY exists() ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)#x, sum(salary) OVER (PARTITION BY exists() ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)#x]
   +- Window [sum(salary#x) windowspecdefinition(_w1#x, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS sum(salary) OVER (PARTITION BY exists() ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)#x], [_w1#x]
      +- Project [emp_name#x, salary#x, exists#x [] AS _w1#x]
         :  +- Project [1 AS 1#x]
         :     +- Filter ((dept_id#x > 10) AND (dept_id#x < 30))
         :        +- SubqueryAlias dept
         :           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
         :              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
         :                 +- Project [dept_id#x, dept_name#x, state#x]
         :                    +- SubqueryAlias DEPT
         :                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
         +- SubqueryAlias emp
            +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
               +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
                  +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
                     +- SubqueryAlias EMP
                        +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
    emp_name,
    sum(salary) OVER (PARTITION BY EXISTS (SELECT 1
                                           FROM   dept
                                           WHERE  emp.dept_id = dept.dept_id))
FROM   emp
-- !query analysis
Project [emp_name#x, sum(salary) OVER (PARTITION BY exists(dept_id) ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)#x]
+- Project [emp_name#x, salary#x, _w1#x, sum(salary) OVER (PARTITION BY exists(dept_id) ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)#x, sum(salary) OVER (PARTITION BY exists(dept_id) ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)#x]
   +- Window [sum(salary#x) windowspecdefinition(_w1#x, specifiedwindowframe(RowFrame, unboundedpreceding$(), unboundedfollowing$())) AS sum(salary) OVER (PARTITION BY exists(dept_id) ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)#x], [_w1#x]
      +- Project [emp_name#x, salary#x, exists#x [dept_id#x] AS _w1#x]
         :  +- Project [1 AS 1#x]
         :     +- Filter (outer(dept_id#x) = dept_id#x)
         :        +- SubqueryAlias dept
         :           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
         :              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
         :                 +- Project [dept_id#x, dept_name#x, state#x]
         :                    +- SubqueryAlias DEPT
         :                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
         +- SubqueryAlias emp
            +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
               +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
                  +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
                     +- SubqueryAlias EMP
                        +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
