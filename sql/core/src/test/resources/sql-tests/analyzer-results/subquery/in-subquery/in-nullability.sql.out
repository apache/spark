-- Automatically generated by SQLQueryTestSuite
-- !query
create temp view t0 as select 1 as a_nonnullable
-- !query analysis
CreateViewCommand `t0`, select 1 as a_nonnullable, false, false, LocalTempView, UNSUPPORTED, true
   +- Project [1 AS a_nonnullable#x]
      +- OneRowRelation


-- !query
create temp view t1 as select cast(null as int) as b_nullable
-- !query analysis
CreateViewCommand `t1`, select cast(null as int) as b_nullable, false, false, LocalTempView, UNSUPPORTED, true
   +- Project [cast(null as int) AS b_nullable#x]
      +- OneRowRelation


-- !query
create temp view t2 as select 2 as c
-- !query analysis
CreateViewCommand `t2`, select 2 as c, false, false, LocalTempView, UNSUPPORTED, true
   +- Project [2 AS c#x]
      +- OneRowRelation


-- !query
select * from t0 where a_nonnullable in (select b_nullable from t1)
-- !query analysis
Project [a_nonnullable#x]
+- Filter a_nonnullable#x IN (list#x [])
   :  +- Project [b_nullable#x]
   :     +- SubqueryAlias t1
   :        +- View (`t1`, [b_nullable#x])
   :           +- Project [cast(b_nullable#x as int) AS b_nullable#x]
   :              +- Project [cast(null as int) AS b_nullable#x]
   :                 +- OneRowRelation
   +- SubqueryAlias t0
      +- View (`t0`, [a_nonnullable#x])
         +- Project [cast(a_nonnullable#x as int) AS a_nonnullable#x]
            +- Project [1 AS a_nonnullable#x]
               +- OneRowRelation


-- !query
select * from t0 where (a_nonnullable in (select b_nullable from t1)) <=> true
-- !query analysis
Project [a_nonnullable#x]
+- Filter (a_nonnullable#x IN (list#x []) <=> true)
   :  +- Project [b_nullable#x]
   :     +- SubqueryAlias t1
   :        +- View (`t1`, [b_nullable#x])
   :           +- Project [cast(b_nullable#x as int) AS b_nullable#x]
   :              +- Project [cast(null as int) AS b_nullable#x]
   :                 +- OneRowRelation
   +- SubqueryAlias t0
      +- View (`t0`, [a_nonnullable#x])
         +- Project [cast(a_nonnullable#x as int) AS a_nonnullable#x]
            +- Project [1 AS a_nonnullable#x]
               +- OneRowRelation


-- !query
select * from t0 where a_nonnullable not in (select b_nullable from t1)
-- !query analysis
Project [a_nonnullable#x]
+- Filter NOT a_nonnullable#x IN (list#x [])
   :  +- Project [b_nullable#x]
   :     +- SubqueryAlias t1
   :        +- View (`t1`, [b_nullable#x])
   :           +- Project [cast(b_nullable#x as int) AS b_nullable#x]
   :              +- Project [cast(null as int) AS b_nullable#x]
   :                 +- OneRowRelation
   +- SubqueryAlias t0
      +- View (`t0`, [a_nonnullable#x])
         +- Project [cast(a_nonnullable#x as int) AS a_nonnullable#x]
            +- Project [1 AS a_nonnullable#x]
               +- OneRowRelation


-- !query
select * from t0 where (a_nonnullable not in (select b_nullable from t1)) <=> true
-- !query analysis
Project [a_nonnullable#x]
+- Filter (NOT a_nonnullable#x IN (list#x []) <=> true)
   :  +- Project [b_nullable#x]
   :     +- SubqueryAlias t1
   :        +- View (`t1`, [b_nullable#x])
   :           +- Project [cast(b_nullable#x as int) AS b_nullable#x]
   :              +- Project [cast(null as int) AS b_nullable#x]
   :                 +- OneRowRelation
   +- SubqueryAlias t0
      +- View (`t0`, [a_nonnullable#x])
         +- Project [cast(a_nonnullable#x as int) AS a_nonnullable#x]
            +- Project [1 AS a_nonnullable#x]
               +- OneRowRelation


-- !query
select * from t0 left join t2 on (a_nonnullable IN (select b_nullable from t1)) is null
-- !query analysis
Project [a_nonnullable#x, c#x]
+- Join LeftOuter, isnull(a_nonnullable#x IN (list#x []))
   :  +- Project [b_nullable#x]
   :     +- SubqueryAlias t1
   :        +- View (`t1`, [b_nullable#x])
   :           +- Project [cast(b_nullable#x as int) AS b_nullable#x]
   :              +- Project [cast(null as int) AS b_nullable#x]
   :                 +- OneRowRelation
   :- SubqueryAlias t0
   :  +- View (`t0`, [a_nonnullable#x])
   :     +- Project [cast(a_nonnullable#x as int) AS a_nonnullable#x]
   :        +- Project [1 AS a_nonnullable#x]
   :           +- OneRowRelation
   +- SubqueryAlias t2
      +- View (`t2`, [c#x])
         +- Project [cast(c#x as int) AS c#x]
            +- Project [2 AS c#x]
               +- OneRowRelation


-- !query
select * from t0 left join t2 on (a_nonnullable IN (select b_nullable from t1)) <=> true
-- !query analysis
Project [a_nonnullable#x, c#x]
+- Join LeftOuter, (a_nonnullable#x IN (list#x []) <=> true)
   :  +- Project [b_nullable#x]
   :     +- SubqueryAlias t1
   :        +- View (`t1`, [b_nullable#x])
   :           +- Project [cast(b_nullable#x as int) AS b_nullable#x]
   :              +- Project [cast(null as int) AS b_nullable#x]
   :                 +- OneRowRelation
   :- SubqueryAlias t0
   :  +- View (`t0`, [a_nonnullable#x])
   :     +- Project [cast(a_nonnullable#x as int) AS a_nonnullable#x]
   :        +- Project [1 AS a_nonnullable#x]
   :           +- OneRowRelation
   +- SubqueryAlias t2
      +- View (`t2`, [c#x])
         +- Project [cast(c#x as int) AS c#x]
            +- Project [2 AS c#x]
               +- OneRowRelation
