-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW EMP AS SELECT * FROM VALUES
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (200, "emp 2", date "2003-01-01", 200.00D, 10),
  (300, "emp 3", date "2002-01-01", 300.00D, 20),
  (400, "emp 4", date "2005-01-01", 400.00D, 30),
  (500, "emp 5", date "2001-01-01", 400.00D, NULL),
  (600, "emp 6 - no dept", date "2001-01-01", 400.00D, 100),
  (700, "emp 7", date "2010-01-01", 400.00D, 100),
  (800, "emp 8", date "2016-01-01", 150.00D, 70)
AS EMP(id, emp_name, hiredate, salary, dept_id)
-- !query analysis
CreateViewCommand `EMP`, SELECT * FROM VALUES
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (200, "emp 2", date "2003-01-01", 200.00D, 10),
  (300, "emp 3", date "2002-01-01", 300.00D, 20),
  (400, "emp 4", date "2005-01-01", 400.00D, 30),
  (500, "emp 5", date "2001-01-01", 400.00D, NULL),
  (600, "emp 6 - no dept", date "2001-01-01", 400.00D, 100),
  (700, "emp 7", date "2010-01-01", 400.00D, 100),
  (800, "emp 8", date "2016-01-01", 150.00D, 70)
AS EMP(id, emp_name, hiredate, salary, dept_id), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
      +- SubqueryAlias EMP
         +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
CREATE TEMPORARY VIEW DEPT AS SELECT * FROM VALUES
  (10, "dept 1", "CA"),
  (20, "dept 2", "NY"),
  (30, "dept 3", "TX"),
  (40, "dept 4 - unassigned", "OR"),
  (50, "dept 5 - unassigned", "NJ"),
  (70, "dept 7", "FL")
AS DEPT(dept_id, dept_name, state)
-- !query analysis
CreateViewCommand `DEPT`, SELECT * FROM VALUES
  (10, "dept 1", "CA"),
  (20, "dept 2", "NY"),
  (30, "dept 3", "TX"),
  (40, "dept 4 - unassigned", "OR"),
  (50, "dept 5 - unassigned", "NJ"),
  (70, "dept 7", "FL")
AS DEPT(dept_id, dept_name, state), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [dept_id#x, dept_name#x, state#x]
      +- SubqueryAlias DEPT
         +- LocalRelation [dept_id#x, dept_name#x, state#x]


-- !query
CREATE TEMPORARY VIEW BONUS AS SELECT * FROM VALUES
  ("emp 1", 10.00D),
  ("emp 1", 20.00D),
  ("emp 2", 300.00D),
  ("emp 2", 100.00D),
  ("emp 3", 300.00D),
  ("emp 4", 100.00D),
  ("emp 5", 1000.00D),
  ("emp 6 - no dept", 500.00D)
AS BONUS(emp_name, bonus_amt)
-- !query analysis
CreateViewCommand `BONUS`, SELECT * FROM VALUES
  ("emp 1", 10.00D),
  ("emp 1", 20.00D),
  ("emp 2", 300.00D),
  ("emp 2", 100.00D),
  ("emp 3", 300.00D),
  ("emp 4", 100.00D),
  ("emp 5", 1000.00D),
  ("emp 6 - no dept", 500.00D)
AS BONUS(emp_name, bonus_amt), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [emp_name#x, bonus_amt#x]
      +- SubqueryAlias BONUS
         +- LocalRelation [emp_name#x, bonus_amt#x]


-- !query
SELECT emp.dept_id, 
       avg(salary),
       sum(salary)
FROM   emp 
WHERE  EXISTS (SELECT state 
               FROM   dept 
               WHERE  dept.dept_id = emp.dept_id) 
GROUP  BY dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, avg(salary#x) AS avg(salary)#x, sum(salary#x) AS sum(salary)#x]
+- Filter exists#x [dept_id#x]
   :  +- Project [state#x]
   :     +- Filter (dept_id#x = outer(dept_id#x))
   :        +- SubqueryAlias dept
   :           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
   :              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
   :                 +- Project [dept_id#x, dept_name#x, state#x]
   :                    +- SubqueryAlias DEPT
   :                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
   +- SubqueryAlias emp
      +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
         +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
            +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
               +- SubqueryAlias EMP
                  +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT emp_name 
FROM   emp 
WHERE  EXISTS (SELECT max(dept.dept_id) a 
               FROM   dept 
               WHERE  dept.dept_id = emp.dept_id 
               GROUP  BY dept.dept_id)
-- !query analysis
Project [emp_name#x]
+- Filter exists#x [dept_id#x]
   :  +- Aggregate [dept_id#x], [max(dept_id#x) AS a#x]
   :     +- Filter (dept_id#x = outer(dept_id#x))
   :        +- SubqueryAlias dept
   :           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
   :              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
   :                 +- Project [dept_id#x, dept_name#x, state#x]
   :                    +- SubqueryAlias DEPT
   :                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
   +- SubqueryAlias emp
      +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
         +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
            +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
               +- SubqueryAlias EMP
                  +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT count(*) 
FROM   emp 
WHERE  EXISTS (SELECT max(dept.dept_id) a 
               FROM   dept 
               WHERE  dept.dept_id = emp.dept_id 
               GROUP  BY dept.dept_id)
-- !query analysis
Aggregate [count(1) AS count(1)#xL]
+- Filter exists#x [dept_id#x]
   :  +- Aggregate [dept_id#x], [max(dept_id#x) AS a#x]
   :     +- Filter (dept_id#x = outer(dept_id#x))
   :        +- SubqueryAlias dept
   :           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
   :              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
   :                 +- Project [dept_id#x, dept_name#x, state#x]
   :                    +- SubqueryAlias DEPT
   :                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
   +- SubqueryAlias emp
      +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
         +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
            +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
               +- SubqueryAlias EMP
                  +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT * 
FROM   bonus 
WHERE  EXISTS (SELECT 1 
               FROM   emp 
               WHERE  emp.emp_name = bonus.emp_name 
                      AND EXISTS (SELECT max(dept.dept_id) 
                                  FROM   dept 
                                  WHERE  emp.dept_id = dept.dept_id 
                                  GROUP  BY dept.dept_id))
-- !query analysis
Project [emp_name#x, bonus_amt#x]
+- Filter exists#x [emp_name#x]
   :  +- Project [1 AS 1#x]
   :     +- Filter ((emp_name#x = outer(emp_name#x)) AND exists#x [dept_id#x])
   :        :  +- Aggregate [dept_id#x], [max(dept_id#x) AS max(dept_id)#x]
   :        :     +- Filter (outer(dept_id#x) = dept_id#x)
   :        :        +- SubqueryAlias dept
   :        :           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
   :        :              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
   :        :                 +- Project [dept_id#x, dept_name#x, state#x]
   :        :                    +- SubqueryAlias DEPT
   :        :                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
   :        +- SubqueryAlias emp
   :           +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
   :              +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
   :                 +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
   :                    +- SubqueryAlias EMP
   :                       +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
   +- SubqueryAlias bonus
      +- View (`BONUS`, [emp_name#x, bonus_amt#x])
         +- Project [cast(emp_name#x as string) AS emp_name#x, cast(bonus_amt#x as double) AS bonus_amt#x]
            +- Project [emp_name#x, bonus_amt#x]
               +- SubqueryAlias BONUS
                  +- LocalRelation [emp_name#x, bonus_amt#x]


-- !query
SELECT emp.dept_id, 
       Avg(salary), 
       Sum(salary) 
FROM   emp 
WHERE  NOT EXISTS (SELECT state 
                   FROM   dept 
                   WHERE  dept.dept_id = emp.dept_id) 
GROUP  BY dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, avg(salary#x) AS avg(salary)#x, sum(salary#x) AS sum(salary)#x]
+- Filter NOT exists#x [dept_id#x]
   :  +- Project [state#x]
   :     +- Filter (dept_id#x = outer(dept_id#x))
   :        +- SubqueryAlias dept
   :           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
   :              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
   :                 +- Project [dept_id#x, dept_name#x, state#x]
   :                    +- SubqueryAlias DEPT
   :                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
   +- SubqueryAlias emp
      +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
         +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
            +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
               +- SubqueryAlias EMP
                  +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT emp_name 
FROM   emp 
WHERE  NOT EXISTS (SELECT max(dept.dept_id) a 
                   FROM   dept 
                   WHERE  dept.dept_id = emp.dept_id 
                   GROUP  BY dept.dept_id)
-- !query analysis
Project [emp_name#x]
+- Filter NOT exists#x [dept_id#x]
   :  +- Aggregate [dept_id#x], [max(dept_id#x) AS a#x]
   :     +- Filter (dept_id#x = outer(dept_id#x))
   :        +- SubqueryAlias dept
   :           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
   :              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
   :                 +- Project [dept_id#x, dept_name#x, state#x]
   :                    +- SubqueryAlias DEPT
   :                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
   +- SubqueryAlias emp
      +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
         +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
            +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
               +- SubqueryAlias EMP
                  +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT count(*) 
FROM   emp 
WHERE  NOT EXISTS (SELECT max(dept.dept_id) a 
                   FROM   dept 
                   WHERE  dept.dept_id = emp.dept_id 
                   GROUP  BY dept.dept_id)
-- !query analysis
Aggregate [count(1) AS count(1)#xL]
+- Filter NOT exists#x [dept_id#x]
   :  +- Aggregate [dept_id#x], [max(dept_id#x) AS a#x]
   :     +- Filter (dept_id#x = outer(dept_id#x))
   :        +- SubqueryAlias dept
   :           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
   :              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
   :                 +- Project [dept_id#x, dept_name#x, state#x]
   :                    +- SubqueryAlias DEPT
   :                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
   +- SubqueryAlias emp
      +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
         +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
            +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
               +- SubqueryAlias EMP
                  +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT * 
FROM   bonus 
WHERE  NOT EXISTS (SELECT 1 
                   FROM   emp 
                   WHERE  emp.emp_name = bonus.emp_name 
                          AND EXISTS (SELECT Max(dept.dept_id) 
                                      FROM   dept 
                                      WHERE  emp.dept_id = dept.dept_id 
                                      GROUP  BY dept.dept_id))
-- !query analysis
Project [emp_name#x, bonus_amt#x]
+- Filter NOT exists#x [emp_name#x]
   :  +- Project [1 AS 1#x]
   :     +- Filter ((emp_name#x = outer(emp_name#x)) AND exists#x [dept_id#x])
   :        :  +- Aggregate [dept_id#x], [max(dept_id#x) AS max(dept_id)#x]
   :        :     +- Filter (outer(dept_id#x) = dept_id#x)
   :        :        +- SubqueryAlias dept
   :        :           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
   :        :              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
   :        :                 +- Project [dept_id#x, dept_name#x, state#x]
   :        :                    +- SubqueryAlias DEPT
   :        :                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
   :        +- SubqueryAlias emp
   :           +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
   :              +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
   :                 +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
   :                    +- SubqueryAlias EMP
   :                       +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
   +- SubqueryAlias bonus
      +- View (`BONUS`, [emp_name#x, bonus_amt#x])
         +- Project [cast(emp_name#x as string) AS emp_name#x, cast(bonus_amt#x as double) AS bonus_amt#x]
            +- Project [emp_name#x, bonus_amt#x]
               +- SubqueryAlias BONUS
                  +- LocalRelation [emp_name#x, bonus_amt#x]


-- !query
SELECT *
FROM BONUS
WHERE EXISTS(SELECT RANK() OVER (PARTITION BY hiredate ORDER BY salary) AS s
                    FROM EMP, DEPT where EMP.dept_id = DEPT.dept_id
                        AND DEPT.dept_name < BONUS.emp_name)
-- !query analysis
Project [emp_name#x, bonus_amt#x]
+- Filter exists#x [emp_name#x]
   :  +- Project [s#x]
   :     +- Project [hiredate#x, salary#x, s#x, s#x]
   :        +- Window [rank(salary#x) windowspecdefinition(hiredate#x, salary#x ASC NULLS FIRST, specifiedwindowframe(RowFrame, unboundedpreceding$(), currentrow$())) AS s#x], [hiredate#x], [salary#x ASC NULLS FIRST]
   :           +- Project [hiredate#x, salary#x]
   :              +- Filter ((dept_id#x = dept_id#x) AND (dept_name#x < outer(emp_name#x)))
   :                 +- Join Inner
   :                    :- SubqueryAlias emp
   :                    :  +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
   :                    :     +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
   :                    :        +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
   :                    :           +- SubqueryAlias EMP
   :                    :              +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
   :                    +- SubqueryAlias dept
   :                       +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
   :                          +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
   :                             +- Project [dept_id#x, dept_name#x, state#x]
   :                                +- SubqueryAlias DEPT
   :                                   +- LocalRelation [dept_id#x, dept_name#x, state#x]
   +- SubqueryAlias bonus
      +- View (`BONUS`, [emp_name#x, bonus_amt#x])
         +- Project [cast(emp_name#x as string) AS emp_name#x, cast(bonus_amt#x as double) AS bonus_amt#x]
            +- Project [emp_name#x, bonus_amt#x]
               +- SubqueryAlias BONUS
                  +- LocalRelation [emp_name#x, bonus_amt#x]


-- !query
SELECT tt1.emp_name
FROM EMP as tt1
WHERE EXISTS (
  select max(tt2.id)
  from EMP as tt2
  where tt1.emp_name is null
)
-- !query analysis
Project [emp_name#x]
+- Filter exists#x [emp_name#x]
   :  +- Aggregate [max(id#x) AS max(id)#x]
   :     +- Filter isnull(outer(emp_name#x))
   :        +- SubqueryAlias tt2
   :           +- SubqueryAlias emp
   :              +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
   :                 +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
   :                    +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
   :                       +- SubqueryAlias EMP
   :                          +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
   +- SubqueryAlias tt1
      +- SubqueryAlias emp
         +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
            +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
               +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
                  +- SubqueryAlias EMP
                     +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
  emp.dept_id,
  EXISTS (SELECT dept.dept_id FROM dept)
FROM emp
GROUP BY emp.dept_id ORDER BY emp.dept_id
-- !query analysis
Sort [dept_id#x ASC NULLS FIRST], true
+- Aggregate [dept_id#x], [dept_id#x, exists#x [] AS exists()#x]
   :  +- Project [dept_id#x]
   :     +- SubqueryAlias dept
   :        +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
   :           +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
   :              +- Project [dept_id#x, dept_name#x, state#x]
   :                 +- SubqueryAlias DEPT
   :                    +- LocalRelation [dept_id#x, dept_name#x, state#x]
   +- SubqueryAlias emp
      +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
         +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
            +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
               +- SubqueryAlias EMP
                  +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
  emp.dept_id,
  EXISTS (SELECT dept.dept_id FROM dept)
FROM emp
GROUP BY emp.dept_id ORDER BY emp.dept_id
-- !query analysis
Sort [dept_id#x ASC NULLS FIRST], true
+- Aggregate [dept_id#x], [dept_id#x, exists#x [] AS exists()#x]
   :  +- Project [dept_id#x]
   :     +- SubqueryAlias dept
   :        +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
   :           +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
   :              +- Project [dept_id#x, dept_name#x, state#x]
   :                 +- SubqueryAlias DEPT
   :                    +- LocalRelation [dept_id#x, dept_name#x, state#x]
   +- SubqueryAlias emp
      +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
         +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
            +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
               +- SubqueryAlias EMP
                  +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
  emp.dept_id,
  NOT EXISTS (SELECT dept.dept_id FROM dept)
FROM emp
GROUP BY emp.dept_id ORDER BY emp.dept_id
-- !query analysis
Sort [dept_id#x ASC NULLS FIRST], true
+- Aggregate [dept_id#x], [dept_id#x, NOT exists#x [] AS (NOT exists())#x]
   :  +- Project [dept_id#x]
   :     +- SubqueryAlias dept
   :        +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
   :           +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
   :              +- Project [dept_id#x, dept_name#x, state#x]
   :                 +- SubqueryAlias DEPT
   :                    +- LocalRelation [dept_id#x, dept_name#x, state#x]
   +- SubqueryAlias emp
      +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
         +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
            +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
               +- SubqueryAlias EMP
                  +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
  emp.dept_id,
  SUM(
    CASE WHEN EXISTS (SELECT dept.dept_id FROM dept WHERE dept.dept_id = emp.dept_id) THEN 1
    ELSE 0 END)
FROM emp
GROUP BY emp.dept_id ORDER BY emp.dept_id
-- !query analysis
Sort [dept_id#x ASC NULLS FIRST], true
+- Aggregate [dept_id#x], [dept_id#x, sum(CASE WHEN exists#x [dept_id#x] THEN 1 ELSE 0 END) AS sum(CASE WHEN exists(dept_id) THEN 1 ELSE 0 END)#xL]
   :  +- Project [dept_id#x]
   :     +- Filter (dept_id#x = outer(dept_id#x))
   :        +- SubqueryAlias dept
   :           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
   :              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
   :                 +- Project [dept_id#x, dept_name#x, state#x]
   :                    +- SubqueryAlias DEPT
   :                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
   +- SubqueryAlias emp
      +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
         +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
            +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
               +- SubqueryAlias EMP
                  +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT
 cast(EXISTS (SELECT id FROM dept where dept.dept_id = emp.dept_id) AS int)
FROM emp
GROUP BY
 cast(EXISTS (SELECT id FROM dept where dept.dept_id = emp.dept_id) AS int)
-- !query analysis
Aggregate [cast(exists#x [id#x && dept_id#x] as int)], [cast(exists#x [id#x && dept_id#x] as int) AS CAST(exists(id, dept_id) AS INT)#x]
:  :- Project [outer(id#x)]
:  :  +- Filter (dept_id#x = outer(dept_id#x))
:  :     +- SubqueryAlias dept
:  :        +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:  :           +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:  :              +- Project [dept_id#x, dept_name#x, state#x]
:  :                 +- SubqueryAlias DEPT
:  :                    +- LocalRelation [dept_id#x, dept_name#x, state#x]
:  +- Project [outer(id#x)]
:     +- Filter (dept_id#x = outer(dept_id#x))
:        +- SubqueryAlias dept
:           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                 +- Project [dept_id#x, dept_name#x, state#x]
:                    +- SubqueryAlias DEPT
:                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
