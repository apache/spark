-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW testData AS SELECT * FROM VALUES
(1, 1), (1, 2), (2, 1), (2, 2), (3, 1), (3, 2), (null, 1), (3, null), (null, null)
AS testData(a, b)
-- !query analysis
CreateViewCommand `testData`, SELECT * FROM VALUES
(1, 1), (1, 2), (2, 1), (2, 2), (3, 1), (3, 2), (null, 1), (3, null), (null, null)
AS testData(a, b), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [a#x, b#x]
      +- SubqueryAlias testData
         +- LocalRelation [a#x, b#x]


-- !query
CREATE OR REPLACE TEMPORARY VIEW EMP AS SELECT * FROM VALUES
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (200, "emp 2", date "2003-01-01", 200.00D, 10),
  (300, "emp 3", date "2002-01-01", 300.00D, 20),
  (400, "emp 4", date "2005-01-01", 400.00D, 30),
  (500, "emp 5", date "2001-01-01", 400.00D, NULL),
  (600, "emp 6 - no dept", date "2001-01-01", 400.00D, 100),
  (700, "emp 7", date "2010-01-01", 400.00D, 100),
  (800, "emp 8", date "2016-01-01", 150.00D, 70)
AS EMP(id, emp_name, hiredate, salary, dept_id)
-- !query analysis
CreateViewCommand `EMP`, SELECT * FROM VALUES
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (100, "emp 1", date "2005-01-01", 100.00D, 10),
  (200, "emp 2", date "2003-01-01", 200.00D, 10),
  (300, "emp 3", date "2002-01-01", 300.00D, 20),
  (400, "emp 4", date "2005-01-01", 400.00D, 30),
  (500, "emp 5", date "2001-01-01", 400.00D, NULL),
  (600, "emp 6 - no dept", date "2001-01-01", 400.00D, 100),
  (700, "emp 7", date "2010-01-01", 400.00D, 100),
  (800, "emp 8", date "2016-01-01", 150.00D, 70)
AS EMP(id, emp_name, hiredate, salary, dept_id), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
      +- SubqueryAlias EMP
         +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
CREATE OR REPLACE TEMPORARY VIEW DEPT AS SELECT * FROM VALUES
  (10, "dept 1", "CA"),
  (20, "dept 2", "NY"),
  (30, "dept 3", "TX"),
  (40, "dept 4 - unassigned", "OR"),
  (50, "dept 5 - unassigned", "NJ"),
  (70, "dept 7", "FL")
AS DEPT(dept_id, dept_name, state)
-- !query analysis
CreateViewCommand `DEPT`, SELECT * FROM VALUES
  (10, "dept 1", "CA"),
  (20, "dept 2", "NY"),
  (30, "dept 3", "TX"),
  (40, "dept 4 - unassigned", "OR"),
  (50, "dept 5 - unassigned", "NJ"),
  (70, "dept 7", "FL")
AS DEPT(dept_id, dept_name, state), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [dept_id#x, dept_name#x, state#x]
      +- SubqueryAlias DEPT
         +- LocalRelation [dept_id#x, dept_name#x, state#x]


-- !query
CREATE OR REPLACE TEMPORARY VIEW FilterExpressionTestData AS SELECT * FROM VALUES
  (1, 2, "asd"),
  (3, 4, "fgh"),
  (5, 6, "jkl")
AS FilterExpressionTestData(num1, num2, str)
-- !query analysis
CreateViewCommand `FilterExpressionTestData`, SELECT * FROM VALUES
  (1, 2, "asd"),
  (3, 4, "fgh"),
  (5, 6, "jkl")
AS FilterExpressionTestData(num1, num2, str), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [num1#x, num2#x, str#x]
      +- SubqueryAlias FilterExpressionTestData
         +- LocalRelation [num1#x, num2#x, str#x]


-- !query
SELECT a, COUNT(b) FILTER (WHERE a >= 2) FROM testData
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "MISSING_GROUP_BY",
  "sqlState" : "42803",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 54,
    "fragment" : "SELECT a, COUNT(b) FILTER (WHERE a >= 2) FROM testData"
  } ]
}


-- !query
SELECT COUNT(a) FILTER (WHERE a = 1), COUNT(b) FILTER (WHERE a > 1) FROM testData
-- !query analysis
Aggregate [count(a#x) FILTER (WHERE (a#x = 1)) AS count(a) FILTER (WHERE (a = 1))#xL, count(b#x) FILTER (WHERE (a#x > 1)) AS count(b) FILTER (WHERE (a > 1))#xL]
+- SubqueryAlias testdata
   +- View (`testData`, [a#x, b#x])
      +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
         +- Project [a#x, b#x]
            +- SubqueryAlias testData
               +- LocalRelation [a#x, b#x]


-- !query
SELECT COUNT(id) FILTER (WHERE hiredate = date "2001-01-01") FROM emp
-- !query analysis
[Analyzer test output redacted due to nondeterminism]


-- !query
SELECT COUNT(id) FILTER (WHERE hiredate = to_date('2001-01-01 00:00:00')) FROM emp
-- !query analysis
Aggregate [count(id#x) FILTER (WHERE (hiredate#x = to_date(2001-01-01 00:00:00, None, Some(America/Los_Angeles), true))) AS count(id) FILTER (WHERE (hiredate = to_date(2001-01-01 00:00:00)))#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT COUNT(id) FILTER (WHERE hiredate = to_timestamp("2001-01-01 00:00:00")) FROM emp
-- !query analysis
Aggregate [count(id#x) FILTER (WHERE (cast(hiredate#x as timestamp) = to_timestamp(2001-01-01 00:00:00, None, TimestampType, Some(America/Los_Angeles), true))) AS count(id) FILTER (WHERE (hiredate = to_timestamp(2001-01-01 00:00:00)))#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT COUNT(id) FILTER (WHERE date_format(hiredate, "yyyy-MM-dd") = "2001-01-01") FROM emp
-- !query analysis
Aggregate [count(id#x) FILTER (WHERE (date_format(cast(hiredate#x as timestamp), yyyy-MM-dd, Some(America/Los_Angeles)) = 2001-01-01)) AS count(id) FILTER (WHERE (date_format(hiredate, yyyy-MM-dd) = 2001-01-01))#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT COUNT(DISTINCT id) FILTER (WHERE date_format(hiredate, "yyyy-MM-dd HH:mm:ss") = "2001-01-01 00:00:00") FROM emp
-- !query analysis
Aggregate [count(distinct id#x) FILTER (WHERE (date_format(cast(hiredate#x as timestamp), yyyy-MM-dd HH:mm:ss, Some(America/Los_Angeles)) = 2001-01-01 00:00:00)) AS count(DISTINCT id) FILTER (WHERE (date_format(hiredate, yyyy-MM-dd HH:mm:ss) = 2001-01-01 00:00:00))#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT COUNT(DISTINCT id), COUNT(DISTINCT id) FILTER (WHERE date_format(hiredate, "yyyy-MM-dd HH:mm:ss") = "2001-01-01 00:00:00") FROM emp
-- !query analysis
Aggregate [count(distinct id#x) AS count(DISTINCT id)#xL, count(distinct id#x) FILTER (WHERE (date_format(cast(hiredate#x as timestamp), yyyy-MM-dd HH:mm:ss, Some(America/Los_Angeles)) = 2001-01-01 00:00:00)) AS count(DISTINCT id) FILTER (WHERE (date_format(hiredate, yyyy-MM-dd HH:mm:ss) = 2001-01-01 00:00:00))#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT COUNT(DISTINCT id) FILTER (WHERE hiredate = to_timestamp("2001-01-01 00:00:00")), COUNT(DISTINCT id) FILTER (WHERE hiredate = to_date('2001-01-01 00:00:00')) FROM emp
-- !query analysis
Aggregate [count(distinct id#x) FILTER (WHERE (cast(hiredate#x as timestamp) = to_timestamp(2001-01-01 00:00:00, None, TimestampType, Some(America/Los_Angeles), true))) AS count(DISTINCT id) FILTER (WHERE (hiredate = to_timestamp(2001-01-01 00:00:00)))#xL, count(distinct id#x) FILTER (WHERE (hiredate#x = to_date(2001-01-01 00:00:00, None, Some(America/Los_Angeles), true))) AS count(DISTINCT id) FILTER (WHERE (hiredate = to_date(2001-01-01 00:00:00)))#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT SUM(salary), COUNT(DISTINCT id), COUNT(DISTINCT id) FILTER (WHERE hiredate = date "2001-01-01") FROM emp
-- !query analysis
[Analyzer test output redacted due to nondeterminism]


-- !query
SELECT COUNT(DISTINCT 1) FILTER (WHERE a = 1) FROM testData
-- !query analysis
Aggregate [count(distinct 1) FILTER (WHERE (a#x = 1)) AS count(DISTINCT 1) FILTER (WHERE (a = 1))#xL]
+- SubqueryAlias testdata
   +- View (`testData`, [a#x, b#x])
      +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
         +- Project [a#x, b#x]
            +- SubqueryAlias testData
               +- LocalRelation [a#x, b#x]


-- !query
SELECT COUNT(DISTINCT id) FILTER (WHERE true) FROM emp
-- !query analysis
Aggregate [count(distinct id#x) FILTER (WHERE true) AS count(DISTINCT id) FILTER (WHERE true)#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT COUNT(DISTINCT id) FILTER (WHERE false) FROM emp
-- !query analysis
Aggregate [count(distinct id#x) FILTER (WHERE false) AS count(DISTINCT id) FILTER (WHERE false)#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT COUNT(DISTINCT 2), COUNT(DISTINCT 2,3) FILTER (WHERE dept_id = 40) FROM emp
-- !query analysis
Aggregate [count(distinct 2) AS count(DISTINCT 2)#xL, count(distinct 2, 3) FILTER (WHERE (dept_id#x = 40)) AS count(DISTINCT 2, 3) FILTER (WHERE (dept_id = 40))#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT COUNT(DISTINCT 2), COUNT(DISTINCT 3,2) FILTER (WHERE dept_id = 40) FROM emp
-- !query analysis
Aggregate [count(distinct 2) AS count(DISTINCT 2)#xL, count(distinct 3, 2) FILTER (WHERE (dept_id#x = 40)) AS count(DISTINCT 3, 2) FILTER (WHERE (dept_id = 40))#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT COUNT(DISTINCT 2), COUNT(DISTINCT 2,3) FILTER (WHERE dept_id > 0) FROM emp
-- !query analysis
Aggregate [count(distinct 2) AS count(DISTINCT 2)#xL, count(distinct 2, 3) FILTER (WHERE (dept_id#x > 0)) AS count(DISTINCT 2, 3) FILTER (WHERE (dept_id > 0))#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT COUNT(DISTINCT 2), COUNT(DISTINCT 3,2) FILTER (WHERE dept_id > 0) FROM emp
-- !query analysis
Aggregate [count(distinct 2) AS count(DISTINCT 2)#xL, count(distinct 3, 2) FILTER (WHERE (dept_id#x > 0)) AS count(DISTINCT 3, 2) FILTER (WHERE (dept_id > 0))#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT COUNT(DISTINCT id), COUNT(DISTINCT 2,3) FILTER (WHERE dept_id = 40) FROM emp
-- !query analysis
Aggregate [count(distinct id#x) AS count(DISTINCT id)#xL, count(distinct 2, 3) FILTER (WHERE (dept_id#x = 40)) AS count(DISTINCT 2, 3) FILTER (WHERE (dept_id = 40))#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT COUNT(DISTINCT id), COUNT(DISTINCT 3,2) FILTER (WHERE dept_id = 40) FROM emp
-- !query analysis
Aggregate [count(distinct id#x) AS count(DISTINCT id)#xL, count(distinct 3, 2) FILTER (WHERE (dept_id#x = 40)) AS count(DISTINCT 3, 2) FILTER (WHERE (dept_id = 40))#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT COUNT(DISTINCT id), COUNT(DISTINCT 2,3) FILTER (WHERE dept_id > 0) FROM emp
-- !query analysis
Aggregate [count(distinct id#x) AS count(DISTINCT id)#xL, count(distinct 2, 3) FILTER (WHERE (dept_id#x > 0)) AS count(DISTINCT 2, 3) FILTER (WHERE (dept_id > 0))#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT COUNT(DISTINCT id), COUNT(DISTINCT 3,2) FILTER (WHERE dept_id > 0) FROM emp
-- !query analysis
Aggregate [count(distinct id#x) AS count(DISTINCT id)#xL, count(distinct 3, 2) FILTER (WHERE (dept_id#x > 0)) AS count(DISTINCT 3, 2) FILTER (WHERE (dept_id > 0))#xL]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT a, COUNT(b) FILTER (WHERE a >= 2) FROM testData GROUP BY a
-- !query analysis
Aggregate [a#x], [a#x, count(b#x) FILTER (WHERE (a#x >= 2)) AS count(b) FILTER (WHERE (a >= 2))#xL]
+- SubqueryAlias testdata
   +- View (`testData`, [a#x, b#x])
      +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
         +- Project [a#x, b#x]
            +- SubqueryAlias testData
               +- LocalRelation [a#x, b#x]


-- !query
SELECT a, COUNT(b) FILTER (WHERE a != 2) FROM testData GROUP BY b
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "MISSING_AGGREGATION",
  "sqlState" : "42803",
  "messageParameters" : {
    "expression" : "\"a\"",
    "expressionAnyValue" : "\"any_value(a)\""
  }
}


-- !query
SELECT COUNT(a) FILTER (WHERE a >= 0), COUNT(b) FILTER (WHERE a >= 3) FROM testData GROUP BY a
-- !query analysis
Aggregate [a#x], [count(a#x) FILTER (WHERE (a#x >= 0)) AS count(a) FILTER (WHERE (a >= 0))#xL, count(b#x) FILTER (WHERE (a#x >= 3)) AS count(b) FILTER (WHERE (a >= 3))#xL]
+- SubqueryAlias testdata
   +- View (`testData`, [a#x, b#x])
      +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
         +- Project [a#x, b#x]
            +- SubqueryAlias testData
               +- LocalRelation [a#x, b#x]


-- !query
SELECT dept_id, SUM(salary) FILTER (WHERE hiredate > date "2003-01-01") FROM emp GROUP BY dept_id
-- !query analysis
[Analyzer test output redacted due to nondeterminism]


-- !query
SELECT dept_id, SUM(salary) FILTER (WHERE hiredate > to_date("2003-01-01")) FROM emp GROUP BY dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, sum(salary#x) FILTER (WHERE (hiredate#x > to_date(2003-01-01, None, Some(America/Los_Angeles), true))) AS sum(salary) FILTER (WHERE (hiredate > to_date(2003-01-01)))#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT dept_id, SUM(salary) FILTER (WHERE hiredate > to_timestamp("2003-01-01 00:00:00")) FROM emp GROUP BY dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, sum(salary#x) FILTER (WHERE (cast(hiredate#x as timestamp) > to_timestamp(2003-01-01 00:00:00, None, TimestampType, Some(America/Los_Angeles), true))) AS sum(salary) FILTER (WHERE (hiredate > to_timestamp(2003-01-01 00:00:00)))#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT dept_id, SUM(salary) FILTER (WHERE date_format(hiredate, "yyyy-MM-dd") > "2003-01-01") FROM emp GROUP BY dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, sum(salary#x) FILTER (WHERE (date_format(cast(hiredate#x as timestamp), yyyy-MM-dd, Some(America/Los_Angeles)) > 2003-01-01)) AS sum(salary) FILTER (WHERE (date_format(hiredate, yyyy-MM-dd) > 2003-01-01))#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT dept_id, SUM(DISTINCT salary) FILTER (WHERE date_format(hiredate, "yyyy-MM-dd HH:mm:ss") > "2001-01-01 00:00:00") FROM emp GROUP BY dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, sum(distinct salary#x) FILTER (WHERE (date_format(cast(hiredate#x as timestamp), yyyy-MM-dd HH:mm:ss, Some(America/Los_Angeles)) > 2001-01-01 00:00:00)) AS sum(DISTINCT salary) FILTER (WHERE (date_format(hiredate, yyyy-MM-dd HH:mm:ss) > 2001-01-01 00:00:00))#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT dept_id, SUM(DISTINCT salary), SUM(DISTINCT salary) FILTER (WHERE date_format(hiredate, "yyyy-MM-dd HH:mm:ss") > "2001-01-01 00:00:00") FROM emp GROUP BY dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, sum(distinct salary#x) AS sum(DISTINCT salary)#x, sum(distinct salary#x) FILTER (WHERE (date_format(cast(hiredate#x as timestamp), yyyy-MM-dd HH:mm:ss, Some(America/Los_Angeles)) > 2001-01-01 00:00:00)) AS sum(DISTINCT salary) FILTER (WHERE (date_format(hiredate, yyyy-MM-dd HH:mm:ss) > 2001-01-01 00:00:00))#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT dept_id, SUM(DISTINCT salary) FILTER (WHERE hiredate > date "2001-01-01"), SUM(DISTINCT salary) FILTER (WHERE date_format(hiredate, "yyyy-MM-dd HH:mm:ss") > "2001-01-01 00:00:00") FROM emp GROUP BY dept_id
-- !query analysis
[Analyzer test output redacted due to nondeterminism]


-- !query
SELECT dept_id, COUNT(id), SUM(DISTINCT salary), SUM(DISTINCT salary) FILTER (WHERE date_format(hiredate, "yyyy-MM-dd") > "2001-01-01") FROM emp GROUP BY dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(id#x) AS count(id)#xL, sum(distinct salary#x) AS sum(DISTINCT salary)#x, sum(distinct salary#x) FILTER (WHERE (date_format(cast(hiredate#x as timestamp), yyyy-MM-dd, Some(America/Los_Angeles)) > 2001-01-01)) AS sum(DISTINCT salary) FILTER (WHERE (date_format(hiredate, yyyy-MM-dd) > 2001-01-01))#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT b, COUNT(DISTINCT 1) FILTER (WHERE a = 1) FROM testData GROUP BY b
-- !query analysis
Aggregate [b#x], [b#x, count(distinct 1) FILTER (WHERE (a#x = 1)) AS count(DISTINCT 1) FILTER (WHERE (a = 1))#xL]
+- SubqueryAlias testdata
   +- View (`testData`, [a#x, b#x])
      +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
         +- Project [a#x, b#x]
            +- SubqueryAlias testData
               +- LocalRelation [a#x, b#x]


-- !query
SELECT 'foo', COUNT(a) FILTER (WHERE b <= 2) FROM testData GROUP BY 1
-- !query analysis
Aggregate [foo], [foo AS foo#x, count(a#x) FILTER (WHERE (b#x <= 2)) AS count(a) FILTER (WHERE (b <= 2))#xL]
+- SubqueryAlias testdata
   +- View (`testData`, [a#x, b#x])
      +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
         +- Project [a#x, b#x]
            +- SubqueryAlias testData
               +- LocalRelation [a#x, b#x]


-- !query
SELECT 'foo', SUM(salary) FILTER (WHERE hiredate >= date "2003-01-01") FROM emp GROUP BY 1
-- !query analysis
[Analyzer test output redacted due to nondeterminism]


-- !query
SELECT 'foo', SUM(salary) FILTER (WHERE hiredate >= to_date("2003-01-01")) FROM emp GROUP BY 1
-- !query analysis
Aggregate [foo], [foo AS foo#x, sum(salary#x) FILTER (WHERE (hiredate#x >= to_date(2003-01-01, None, Some(America/Los_Angeles), true))) AS sum(salary) FILTER (WHERE (hiredate >= to_date(2003-01-01)))#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT 'foo', SUM(salary) FILTER (WHERE hiredate >= to_timestamp("2003-01-01")) FROM emp GROUP BY 1
-- !query analysis
Aggregate [foo], [foo AS foo#x, sum(salary#x) FILTER (WHERE (cast(hiredate#x as timestamp) >= to_timestamp(2003-01-01, None, TimestampType, Some(America/Los_Angeles), true))) AS sum(salary) FILTER (WHERE (hiredate >= to_timestamp(2003-01-01)))#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct emp_name), count(distinct hiredate), sum(salary), sum(salary) filter (where id > 200) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct emp_name#x) AS count(DISTINCT emp_name)#xL, count(distinct hiredate#x) AS count(DISTINCT hiredate)#xL, sum(salary#x) AS sum(salary)#x, sum(salary#x) FILTER (WHERE (id#x > 200)) AS sum(salary) FILTER (WHERE (id > 200))#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct emp_name), count(distinct hiredate), sum(salary), sum(salary) filter (where id + dept_id > 500) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct emp_name#x) AS count(DISTINCT emp_name)#xL, count(distinct hiredate#x) AS count(DISTINCT hiredate)#xL, sum(salary#x) AS sum(salary)#x, sum(salary#x) FILTER (WHERE ((id#x + dept_id#x) > 500)) AS sum(salary) FILTER (WHERE ((id + dept_id) > 500))#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct emp_name), count(distinct hiredate), sum(salary) filter (where salary < 400.00D), sum(salary) filter (where id > 200) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct emp_name#x) AS count(DISTINCT emp_name)#xL, count(distinct hiredate#x) AS count(DISTINCT hiredate)#xL, sum(salary#x) FILTER (WHERE (salary#x < 400.0)) AS sum(salary) FILTER (WHERE (salary < 400.0))#x, sum(salary#x) FILTER (WHERE (id#x > 200)) AS sum(salary) FILTER (WHERE (id > 200))#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct emp_name), count(distinct hiredate), sum(salary) filter (where salary < 400.00D), sum(salary) filter (where id + dept_id > 500) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct emp_name#x) AS count(DISTINCT emp_name)#xL, count(distinct hiredate#x) AS count(DISTINCT hiredate)#xL, sum(salary#x) FILTER (WHERE (salary#x < 400.0)) AS sum(salary) FILTER (WHERE (salary < 400.0))#x, sum(salary#x) FILTER (WHERE ((id#x + dept_id#x) > 500)) AS sum(salary) FILTER (WHERE ((id + dept_id) > 500))#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct emp_name) filter (where id > 200), sum(salary) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct emp_name#x) FILTER (WHERE (id#x > 200)) AS count(DISTINCT emp_name) FILTER (WHERE (id > 200))#xL, sum(salary#x) AS sum(salary)#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct emp_name) filter (where id + dept_id > 500), sum(salary) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct emp_name#x) FILTER (WHERE ((id#x + dept_id#x) > 500)) AS count(DISTINCT emp_name) FILTER (WHERE ((id + dept_id) > 500))#xL, sum(salary#x) AS sum(salary)#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct emp_name), count(distinct emp_name) filter (where id > 200), sum(salary) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct emp_name#x) AS count(DISTINCT emp_name)#xL, count(distinct emp_name#x) FILTER (WHERE (id#x > 200)) AS count(DISTINCT emp_name) FILTER (WHERE (id > 200))#xL, sum(salary#x) AS sum(salary)#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct emp_name), count(distinct emp_name) filter (where id + dept_id > 500), sum(salary) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct emp_name#x) AS count(DISTINCT emp_name)#xL, count(distinct emp_name#x) FILTER (WHERE ((id#x + dept_id#x) > 500)) AS count(DISTINCT emp_name) FILTER (WHERE ((id + dept_id) > 500))#xL, sum(salary#x) AS sum(salary)#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct emp_name), count(distinct emp_name) filter (where id > 200), sum(salary), sum(salary) filter (where id > 200) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct emp_name#x) AS count(DISTINCT emp_name)#xL, count(distinct emp_name#x) FILTER (WHERE (id#x > 200)) AS count(DISTINCT emp_name) FILTER (WHERE (id > 200))#xL, sum(salary#x) AS sum(salary)#x, sum(salary#x) FILTER (WHERE (id#x > 200)) AS sum(salary) FILTER (WHERE (id > 200))#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct emp_name), count(distinct emp_name) filter (where id + dept_id > 500), sum(salary), sum(salary) filter (where id > 200) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct emp_name#x) AS count(DISTINCT emp_name)#xL, count(distinct emp_name#x) FILTER (WHERE ((id#x + dept_id#x) > 500)) AS count(DISTINCT emp_name) FILTER (WHERE ((id + dept_id) > 500))#xL, sum(salary#x) AS sum(salary)#x, sum(salary#x) FILTER (WHERE (id#x > 200)) AS sum(salary) FILTER (WHERE (id > 200))#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct emp_name) filter (where id > 200), count(distinct hiredate), sum(salary) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct emp_name#x) FILTER (WHERE (id#x > 200)) AS count(DISTINCT emp_name) FILTER (WHERE (id > 200))#xL, count(distinct hiredate#x) AS count(DISTINCT hiredate)#xL, sum(salary#x) AS sum(salary)#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct emp_name) filter (where id > 200), count(distinct hiredate) filter (where hiredate > date "2003-01-01"), sum(salary) from emp group by dept_id
-- !query analysis
[Analyzer test output redacted due to nondeterminism]


-- !query
select dept_id, count(distinct emp_name) filter (where id > 200), count(distinct hiredate) filter (where hiredate > date "2003-01-01"), sum(salary) filter (where salary < 400.00D) from emp group by dept_id
-- !query analysis
[Analyzer test output redacted due to nondeterminism]


-- !query
select dept_id, count(distinct emp_name) filter (where id > 200), count(distinct hiredate) filter (where hiredate > date "2003-01-01"), sum(salary) filter (where salary < 400.00D), sum(salary) filter (where id > 200) from emp group by dept_id
-- !query analysis
[Analyzer test output redacted due to nondeterminism]


-- !query
select dept_id, count(distinct emp_name) filter (where id > 200), count(distinct emp_name), sum(salary) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct emp_name#x) FILTER (WHERE (id#x > 200)) AS count(DISTINCT emp_name) FILTER (WHERE (id > 200))#xL, count(distinct emp_name#x) AS count(DISTINCT emp_name)#xL, sum(salary#x) AS sum(salary)#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct emp_name) filter (where id > 200), count(distinct emp_name) filter (where hiredate > date "2003-01-01"), sum(salary) from emp group by dept_id
-- !query analysis
[Analyzer test output redacted due to nondeterminism]


-- !query
select dept_id, sum(distinct (id + dept_id)) filter (where id > 200), count(distinct hiredate), sum(salary) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, sum(distinct (id#x + dept_id#x)) FILTER (WHERE (id#x > 200)) AS sum(DISTINCT (id + dept_id)) FILTER (WHERE (id > 200))#xL, count(distinct hiredate#x) AS count(DISTINCT hiredate)#xL, sum(salary#x) AS sum(salary)#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, sum(distinct (id + dept_id)) filter (where id > 200), count(distinct hiredate) filter (where hiredate > date "2003-01-01"), sum(salary) from emp group by dept_id
-- !query analysis
[Analyzer test output redacted due to nondeterminism]


-- !query
select dept_id, avg(distinct (id + dept_id)) filter (where id > 200), count(distinct hiredate) filter (where hiredate > date "2003-01-01"), sum(salary) filter (where salary < 400.00D) from emp group by dept_id
-- !query analysis
[Analyzer test output redacted due to nondeterminism]


-- !query
select dept_id, count(distinct emp_name, hiredate) filter (where id > 200), sum(salary) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct emp_name#x, hiredate#x) FILTER (WHERE (id#x > 200)) AS count(DISTINCT emp_name, hiredate) FILTER (WHERE (id > 200))#xL, sum(salary#x) AS sum(salary)#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct emp_name, hiredate) filter (where id > 0), sum(salary) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct emp_name#x, hiredate#x) FILTER (WHERE (id#x > 0)) AS count(DISTINCT emp_name, hiredate) FILTER (WHERE (id > 0))#xL, sum(salary#x) AS sum(salary)#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
select dept_id, count(distinct 1), count(distinct 1) filter (where id > 200), sum(salary) from emp group by dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, count(distinct 1) AS count(DISTINCT 1)#xL, count(distinct 1) FILTER (WHERE (id#x > 200)) AS count(DISTINCT 1) FILTER (WHERE (id > 200))#xL, sum(salary#x) AS sum(salary)#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT 'foo', APPROX_COUNT_DISTINCT(a) FILTER (WHERE b >= 0) FROM testData WHERE a = 0 GROUP BY 1
-- !query analysis
Aggregate [foo], [foo AS foo#x, approx_count_distinct(a#x, 0.05, 0, 0) FILTER (WHERE (b#x >= 0)) AS approx_count_distinct(a) FILTER (WHERE (b >= 0))#xL]
+- Filter (a#x = 0)
   +- SubqueryAlias testdata
      +- View (`testData`, [a#x, b#x])
         +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
            +- Project [a#x, b#x]
               +- SubqueryAlias testData
                  +- LocalRelation [a#x, b#x]


-- !query
SELECT 'foo', MAX(STRUCT(a)) FILTER (WHERE b >= 1) FROM testData WHERE a = 0 GROUP BY 1
-- !query analysis
Aggregate [foo], [foo AS foo#x, max(struct(a, a#x)) FILTER (WHERE (b#x >= 1)) AS max(struct(a)) FILTER (WHERE (b >= 1))#x]
+- Filter (a#x = 0)
   +- SubqueryAlias testdata
      +- View (`testData`, [a#x, b#x])
         +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
            +- Project [a#x, b#x]
               +- SubqueryAlias testData
                  +- LocalRelation [a#x, b#x]


-- !query
SELECT a + b, COUNT(b) FILTER (WHERE b >= 2) FROM testData GROUP BY a + b
-- !query analysis
Aggregate [(a#x + b#x)], [(a#x + b#x) AS (a + b)#x, count(b#x) FILTER (WHERE (b#x >= 2)) AS count(b) FILTER (WHERE (b >= 2))#xL]
+- SubqueryAlias testdata
   +- View (`testData`, [a#x, b#x])
      +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
         +- Project [a#x, b#x]
            +- SubqueryAlias testData
               +- LocalRelation [a#x, b#x]


-- !query
SELECT a + 2, COUNT(b) FILTER (WHERE b IN (1, 2)) FROM testData GROUP BY a + 1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "MISSING_AGGREGATION",
  "sqlState" : "42803",
  "messageParameters" : {
    "expression" : "\"a\"",
    "expressionAnyValue" : "\"any_value(a)\""
  }
}


-- !query
SELECT a + 1 + 1, COUNT(b) FILTER (WHERE b > 0) FROM testData GROUP BY a + 1
-- !query analysis
Aggregate [(a#x + 1)], [((a#x + 1) + 1) AS ((a + 1) + 1)#x, count(b#x) FILTER (WHERE (b#x > 0)) AS count(b) FILTER (WHERE (b > 0))#xL]
+- SubqueryAlias testdata
   +- View (`testData`, [a#x, b#x])
      +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
         +- Project [a#x, b#x]
            +- SubqueryAlias testData
               +- LocalRelation [a#x, b#x]


-- !query
SELECT COUNT(DISTINCT b) FILTER (WHERE b > 0), COUNT(DISTINCT b, c) FILTER (WHERE b > 0 AND c > 2)
FROM (SELECT 1 AS a, 2 AS b, 3 AS c) GROUP BY a
-- !query analysis
Aggregate [a#x], [count(distinct b#x) FILTER (WHERE (b#x > 0)) AS count(DISTINCT b) FILTER (WHERE (b > 0))#xL, count(distinct b#x, c#x) FILTER (WHERE ((b#x > 0) AND (c#x > 2))) AS count(DISTINCT b, c) FILTER (WHERE ((b > 0) AND (c > 2)))#xL]
+- SubqueryAlias __auto_generated_subquery_name
   +- Project [1 AS a#x, 2 AS b#x, 3 AS c#x]
      +- OneRowRelation


-- !query
SELECT a AS k, COUNT(b) FILTER (WHERE b > 0) FROM testData GROUP BY k
-- !query analysis
Aggregate [a#x], [a#x AS k#x, count(b#x) FILTER (WHERE (b#x > 0)) AS count(b) FILTER (WHERE (b > 0))#xL]
+- SubqueryAlias testdata
   +- View (`testData`, [a#x, b#x])
      +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
         +- Project [a#x, b#x]
            +- SubqueryAlias testData
               +- LocalRelation [a#x, b#x]


-- !query
SELECT emp.dept_id,
       avg(salary),
       avg(salary) FILTER (WHERE id > (SELECT 200))
FROM emp
GROUP BY dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, avg(salary#x) AS avg(salary)#x, avg(salary#x) FILTER (WHERE (id#x > scalar-subquery#x [])) AS avg(salary) FILTER (WHERE (id > scalarsubquery()))#x]
:  +- Project [200 AS 200#x]
:     +- OneRowRelation
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT emp.dept_id,
       avg(salary),
       avg(salary) FILTER (WHERE emp.dept_id = (SELECT dept_id FROM dept LIMIT 1))
FROM emp
GROUP BY dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, avg(salary#x) AS avg(salary)#x, avg(salary#x) FILTER (WHERE (dept_id#x = scalar-subquery#x [])) AS avg(salary) FILTER (WHERE (dept_id = scalarsubquery()))#x]
:  +- GlobalLimit 1
:     +- LocalLimit 1
:        +- Project [dept_id#x]
:           +- SubqueryAlias dept
:              +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:                 +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                    +- Project [dept_id#x, dept_name#x, state#x]
:                       +- SubqueryAlias DEPT
:                          +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT emp.dept_id,
       avg(salary),
       avg(salary) FILTER (WHERE EXISTS (SELECT state
               FROM dept
               WHERE dept.dept_id = emp.dept_id))
FROM emp
GROUP BY dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, avg(salary#x) AS avg(salary)#x, avg(salary#x) FILTER (WHERE exists#x [dept_id#x]) AS avg(salary) FILTER (WHERE exists(dept_id))#x]
:  +- Project [state#x]
:     +- Filter (dept_id#x = outer(dept_id#x))
:        +- SubqueryAlias dept
:           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                 +- Project [dept_id#x, dept_name#x, state#x]
:                    +- SubqueryAlias DEPT
:                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT emp.dept_id, 
       Sum(salary),
       Sum(salary) FILTER (WHERE NOT EXISTS (SELECT state 
                   FROM dept 
                   WHERE dept.dept_id = emp.dept_id))
FROM emp 
GROUP BY dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, sum(salary#x) AS sum(salary)#x, sum(salary#x) FILTER (WHERE NOT exists#x [dept_id#x]) AS sum(salary) FILTER (WHERE (NOT exists(dept_id)))#x]
:  +- Project [state#x]
:     +- Filter (dept_id#x = outer(dept_id#x))
:        +- SubqueryAlias dept
:           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                 +- Project [dept_id#x, dept_name#x, state#x]
:                    +- SubqueryAlias DEPT
:                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT emp.dept_id, 
       avg(salary),
       avg(salary) FILTER (WHERE emp.dept_id IN (SELECT DISTINCT dept_id
               FROM dept))
FROM emp 
GROUP BY dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, avg(salary#x) AS avg(salary)#x, avg(salary#x) FILTER (WHERE dept_id#x IN (list#x [])) AS avg(salary) FILTER (WHERE (dept_id IN (listquery())))#x]
:  +- Distinct
:     +- Project [dept_id#x]
:        +- SubqueryAlias dept
:           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                 +- Project [dept_id#x, dept_name#x, state#x]
:                    +- SubqueryAlias DEPT
:                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT emp.dept_id, 
       Sum(salary),
       Sum(salary) FILTER (WHERE emp.dept_id NOT IN (SELECT DISTINCT dept_id
               FROM dept))
FROM emp 
GROUP BY dept_id
-- !query analysis
Aggregate [dept_id#x], [dept_id#x, sum(salary#x) AS sum(salary)#x, sum(salary#x) FILTER (WHERE NOT dept_id#x IN (list#x [])) AS sum(salary) FILTER (WHERE (NOT (dept_id IN (listquery()))))#x]
:  +- Distinct
:     +- Project [dept_id#x]
:        +- SubqueryAlias dept
:           +- View (`DEPT`, [dept_id#x, dept_name#x, state#x])
:              +- Project [cast(dept_id#x as int) AS dept_id#x, cast(dept_name#x as string) AS dept_name#x, cast(state#x as string) AS state#x]
:                 +- Project [dept_id#x, dept_name#x, state#x]
:                    +- SubqueryAlias DEPT
:                       +- LocalRelation [dept_id#x, dept_name#x, state#x]
+- SubqueryAlias emp
   +- View (`EMP`, [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x])
      +- Project [cast(id#x as int) AS id#x, cast(emp_name#x as string) AS emp_name#x, cast(hiredate#x as date) AS hiredate#x, cast(salary#x as double) AS salary#x, cast(dept_id#x as int) AS dept_id#x]
         +- Project [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]
            +- SubqueryAlias EMP
               +- LocalRelation [id#x, emp_name#x, hiredate#x, salary#x, dept_id#x]


-- !query
SELECT t1.b FROM (SELECT COUNT(b) FILTER (WHERE a >= 2) AS b FROM testData) t1
-- !query analysis
Project [b#xL]
+- SubqueryAlias t1
   +- Aggregate [count(b#x) FILTER (WHERE (a#x >= 2)) AS b#xL]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT count(num1) FILTER (WHERE rand(int(num2)) > 1) FROM FilterExpressionTestData
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_AGGREGATE_FILTER.NON_DETERMINISTIC",
  "sqlState" : "42903",
  "messageParameters" : {
    "filterExpr" : "\"(rand(num2) > 1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 53,
    "fragment" : "count(num1) FILTER (WHERE rand(int(num2)) > 1)"
  } ]
}


-- !query
SELECT sum(num1) FILTER (WHERE str) FROM FilterExpressionTestData
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_AGGREGATE_FILTER.NOT_BOOLEAN",
  "sqlState" : "42903",
  "messageParameters" : {
    "filterExpr" : "\"str\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 35,
    "fragment" : "sum(num1) FILTER (WHERE str)"
  } ]
}


-- !query
SELECT sum(num1) FILTER (WHERE max(num2) > 1) FROM FilterExpressionTestData
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_AGGREGATE_FILTER.CONTAINS_AGGREGATE",
  "sqlState" : "42903",
  "messageParameters" : {
    "aggExpr" : "\"max(num2)\"",
    "filterExpr" : "\"(max(num2) > 1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 45,
    "fragment" : "sum(num1) FILTER (WHERE max(num2) > 1)"
  } ]
}


-- !query
SELECT sum(num1) FILTER (WHERE nth_value(num2, 2) OVER(ORDER BY num2) > 1) FROM FilterExpressionTestData
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_AGGREGATE_FILTER.CONTAINS_WINDOW_FUNCTION",
  "sqlState" : "42903",
  "messageParameters" : {
    "filterExpr" : "\"(nth_value(num2, 2) OVER (ORDER BY num2 ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) > 1)\"",
    "windowExpr" : "\"nth_value(num2, 2) OVER (ORDER BY num2 ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 74,
    "fragment" : "sum(num1) FILTER (WHERE nth_value(num2, 2) OVER(ORDER BY num2) > 1)"
  } ]
}
