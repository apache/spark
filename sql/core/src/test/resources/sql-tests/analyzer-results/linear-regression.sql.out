-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW testRegression AS SELECT * FROM VALUES
(1, 10, null), (2, 10, 11), (2, 20, 22), (2, 25, null), (2, 30, 35), (2, null, 40)
AS testRegression(k, y, x)
-- !query analysis
CreateViewCommand `testRegression`, SELECT * FROM VALUES
(1, 10, null), (2, 10, 11), (2, 20, 22), (2, 25, null), (2, 30, 35), (2, null, 40)
AS testRegression(k, y, x), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [k#x, y#x, x#x]
      +- SubqueryAlias testRegression
         +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_count(y, x) FROM testRegression
-- !query analysis
Aggregate [regr_count(y#x, x#x) AS regr_count(y, x)#xL]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_count(y, x) FROM testRegression WHERE x IS NOT NULL
-- !query analysis
Aggregate [regr_count(y#x, x#x) AS regr_count(y, x)#xL]
+- Filter isnotnull(x#x)
   +- SubqueryAlias testregression
      +- View (`testRegression`, [k#x, y#x, x#x])
         +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
            +- Project [k#x, y#x, x#x]
               +- SubqueryAlias testRegression
                  +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, count(*), regr_count(y, x) FROM testRegression GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, count(1) AS count(1)#xL, regr_count(y#x, x#x) AS regr_count(y, x)#xL]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, count(*) FILTER (WHERE x IS NOT NULL), regr_count(y, x) FROM testRegression GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, count(1) FILTER (WHERE isnotnull(x#x)) AS count(1) FILTER (WHERE (x IS NOT NULL))#xL, regr_count(y#x, x#x) AS regr_count(y, x)#xL]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_r2(y, x) FROM testRegression
-- !query analysis
Aggregate [regr_r2(cast(y#x as double), cast(x#x as double)) AS regr_r2(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_r2(y, x) FROM testRegression WHERE x IS NOT NULL
-- !query analysis
Aggregate [regr_r2(cast(y#x as double), cast(x#x as double)) AS regr_r2(y, x)#x]
+- Filter isnotnull(x#x)
   +- SubqueryAlias testregression
      +- View (`testRegression`, [k#x, y#x, x#x])
         +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
            +- Project [k#x, y#x, x#x]
               +- SubqueryAlias testRegression
                  +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, corr(y, x), regr_r2(y, x) FROM testRegression GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, corr(cast(y#x as double), cast(x#x as double)) AS corr(y, x)#x, regr_r2(cast(y#x as double), cast(x#x as double)) AS regr_r2(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, corr(y, x) FILTER (WHERE x IS NOT NULL), regr_r2(y, x) FROM testRegression GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, corr(cast(y#x as double), cast(x#x as double)) FILTER (WHERE isnotnull(x#x)) AS corr(y, x) FILTER (WHERE (x IS NOT NULL))#x, regr_r2(cast(y#x as double), cast(x#x as double)) AS regr_r2(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_avgx(y, x), regr_avgy(y, x) FROM testRegression
-- !query analysis
Aggregate [regr_avgx(y#x, x#x) AS regr_avgx(y, x)#x, regr_avgy(y#x, x#x) AS regr_avgy(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_avgx(y, x), regr_avgy(y, x) FROM testRegression WHERE x IS NOT NULL AND y IS NOT NULL
-- !query analysis
Aggregate [regr_avgx(y#x, x#x) AS regr_avgx(y, x)#x, regr_avgy(y#x, x#x) AS regr_avgy(y, x)#x]
+- Filter (isnotnull(x#x) AND isnotnull(y#x))
   +- SubqueryAlias testregression
      +- View (`testRegression`, [k#x, y#x, x#x])
         +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
            +- Project [k#x, y#x, x#x]
               +- SubqueryAlias testRegression
                  +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, avg(x), avg(y), regr_avgx(y, x), regr_avgy(y, x) FROM testRegression GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, avg(x#x) AS avg(x)#x, avg(y#x) AS avg(y)#x, regr_avgx(y#x, x#x) AS regr_avgx(y, x)#x, regr_avgy(y#x, x#x) AS regr_avgy(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, avg(x) FILTER (WHERE x IS NOT NULL AND y IS NOT NULL), avg(y) FILTER (WHERE x IS NOT NULL AND y IS NOT NULL), regr_avgx(y, x), regr_avgy(y, x) FROM testRegression GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, avg(x#x) FILTER (WHERE (isnotnull(x#x) AND isnotnull(y#x))) AS avg(x) FILTER (WHERE ((x IS NOT NULL) AND (y IS NOT NULL)))#x, avg(y#x) FILTER (WHERE (isnotnull(x#x) AND isnotnull(y#x))) AS avg(y) FILTER (WHERE ((x IS NOT NULL) AND (y IS NOT NULL)))#x, regr_avgx(y#x, x#x) AS regr_avgx(y, x)#x, regr_avgy(y#x, x#x) AS regr_avgy(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_sxx(y, x) FROM testRegression
-- !query analysis
Aggregate [regr_sxx(cast(y#x as double), cast(x#x as double)) AS regr_sxx(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_sxx(y, x) FROM testRegression WHERE x IS NOT NULL AND y IS NOT NULL
-- !query analysis
Aggregate [regr_sxx(cast(y#x as double), cast(x#x as double)) AS regr_sxx(y, x)#x]
+- Filter (isnotnull(x#x) AND isnotnull(y#x))
   +- SubqueryAlias testregression
      +- View (`testRegression`, [k#x, y#x, x#x])
         +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
            +- Project [k#x, y#x, x#x]
               +- SubqueryAlias testRegression
                  +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, regr_sxx(y, x) FROM testRegression GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, regr_sxx(cast(y#x as double), cast(x#x as double)) AS regr_sxx(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, regr_sxx(y, x) FROM testRegression WHERE x IS NOT NULL AND y IS NOT NULL GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, regr_sxx(cast(y#x as double), cast(x#x as double)) AS regr_sxx(y, x)#x]
+- Filter (isnotnull(x#x) AND isnotnull(y#x))
   +- SubqueryAlias testregression
      +- View (`testRegression`, [k#x, y#x, x#x])
         +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
            +- Project [k#x, y#x, x#x]
               +- SubqueryAlias testRegression
                  +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_sxy(y, x) FROM testRegression
-- !query analysis
Aggregate [regr_sxy(cast(y#x as double), cast(x#x as double)) AS regr_sxy(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_sxy(y, x) FROM testRegression WHERE x IS NOT NULL AND y IS NOT NULL
-- !query analysis
Aggregate [regr_sxy(cast(y#x as double), cast(x#x as double)) AS regr_sxy(y, x)#x]
+- Filter (isnotnull(x#x) AND isnotnull(y#x))
   +- SubqueryAlias testregression
      +- View (`testRegression`, [k#x, y#x, x#x])
         +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
            +- Project [k#x, y#x, x#x]
               +- SubqueryAlias testRegression
                  +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, regr_sxy(y, x) FROM testRegression GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, regr_sxy(cast(y#x as double), cast(x#x as double)) AS regr_sxy(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, regr_sxy(y, x) FROM testRegression WHERE x IS NOT NULL AND y IS NOT NULL GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, regr_sxy(cast(y#x as double), cast(x#x as double)) AS regr_sxy(y, x)#x]
+- Filter (isnotnull(x#x) AND isnotnull(y#x))
   +- SubqueryAlias testregression
      +- View (`testRegression`, [k#x, y#x, x#x])
         +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
            +- Project [k#x, y#x, x#x]
               +- SubqueryAlias testRegression
                  +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_syy(y, x) FROM testRegression
-- !query analysis
Aggregate [regr_syy(cast(y#x as double), cast(x#x as double)) AS regr_syy(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_syy(y, x) FROM testRegression WHERE x IS NOT NULL AND y IS NOT NULL
-- !query analysis
Aggregate [regr_syy(cast(y#x as double), cast(x#x as double)) AS regr_syy(y, x)#x]
+- Filter (isnotnull(x#x) AND isnotnull(y#x))
   +- SubqueryAlias testregression
      +- View (`testRegression`, [k#x, y#x, x#x])
         +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
            +- Project [k#x, y#x, x#x]
               +- SubqueryAlias testRegression
                  +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, regr_syy(y, x) FROM testRegression GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, regr_syy(cast(y#x as double), cast(x#x as double)) AS regr_syy(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, regr_syy(y, x) FROM testRegression WHERE x IS NOT NULL AND y IS NOT NULL GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, regr_syy(cast(y#x as double), cast(x#x as double)) AS regr_syy(y, x)#x]
+- Filter (isnotnull(x#x) AND isnotnull(y#x))
   +- SubqueryAlias testregression
      +- View (`testRegression`, [k#x, y#x, x#x])
         +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
            +- Project [k#x, y#x, x#x]
               +- SubqueryAlias testRegression
                  +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_slope(y, x) FROM testRegression
-- !query analysis
Aggregate [regr_slope(cast(y#x as double), cast(x#x as double)) AS regr_slope(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_slope(y, x) FROM testRegression WHERE x IS NOT NULL AND y IS NOT NULL
-- !query analysis
Aggregate [regr_slope(cast(y#x as double), cast(x#x as double)) AS regr_slope(y, x)#x]
+- Filter (isnotnull(x#x) AND isnotnull(y#x))
   +- SubqueryAlias testregression
      +- View (`testRegression`, [k#x, y#x, x#x])
         +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
            +- Project [k#x, y#x, x#x]
               +- SubqueryAlias testRegression
                  +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, regr_slope(y, x) FROM testRegression GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, regr_slope(cast(y#x as double), cast(x#x as double)) AS regr_slope(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, regr_slope(y, x) FROM testRegression WHERE x IS NOT NULL AND y IS NOT NULL GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, regr_slope(cast(y#x as double), cast(x#x as double)) AS regr_slope(y, x)#x]
+- Filter (isnotnull(x#x) AND isnotnull(y#x))
   +- SubqueryAlias testregression
      +- View (`testRegression`, [k#x, y#x, x#x])
         +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
            +- Project [k#x, y#x, x#x]
               +- SubqueryAlias testRegression
                  +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_intercept(y, x) FROM testRegression
-- !query analysis
Aggregate [regr_intercept(cast(y#x as double), cast(x#x as double)) AS regr_intercept(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT regr_intercept(y, x) FROM testRegression WHERE x IS NOT NULL AND y IS NOT NULL
-- !query analysis
Aggregate [regr_intercept(cast(y#x as double), cast(x#x as double)) AS regr_intercept(y, x)#x]
+- Filter (isnotnull(x#x) AND isnotnull(y#x))
   +- SubqueryAlias testregression
      +- View (`testRegression`, [k#x, y#x, x#x])
         +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
            +- Project [k#x, y#x, x#x]
               +- SubqueryAlias testRegression
                  +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, regr_intercept(y, x) FROM testRegression GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, regr_intercept(cast(y#x as double), cast(x#x as double)) AS regr_intercept(y, x)#x]
+- SubqueryAlias testregression
   +- View (`testRegression`, [k#x, y#x, x#x])
      +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
         +- Project [k#x, y#x, x#x]
            +- SubqueryAlias testRegression
               +- LocalRelation [k#x, y#x, x#x]


-- !query
SELECT k, regr_intercept(y, x) FROM testRegression WHERE x IS NOT NULL AND y IS NOT NULL GROUP BY k
-- !query analysis
Aggregate [k#x], [k#x, regr_intercept(cast(y#x as double), cast(x#x as double)) AS regr_intercept(y, x)#x]
+- Filter (isnotnull(x#x) AND isnotnull(y#x))
   +- SubqueryAlias testregression
      +- View (`testRegression`, [k#x, y#x, x#x])
         +- Project [cast(k#x as int) AS k#x, cast(y#x as int) AS y#x, cast(x#x as int) AS x#x]
            +- Project [k#x, y#x, x#x]
               +- SubqueryAlias testRegression
                  +- LocalRelation [k#x, y#x, x#x]
