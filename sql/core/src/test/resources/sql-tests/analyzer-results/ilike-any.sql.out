-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW ilike_any_table AS SELECT * FROM (VALUES
  ('Google', '%Oo%'),
  ('FaceBook', '%oO%'),
  ('linkedIn', '%IN'))
  as t1(company, pat)
-- !query analysis
CreateViewCommand `ilike_any_table`, SELECT * FROM (VALUES
  ('Google', '%Oo%'),
  ('FaceBook', '%oO%'),
  ('linkedIn', '%IN'))
  as t1(company, pat), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [company#x, pat#x]
      +- SubqueryAlias t1
         +- Project [col1#x AS company#x, col2#x AS pat#x]
            +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM ilike_any_table WHERE company ILIKE ANY ('%oo%', '%IN', 'fA%')
-- !query analysis
Project [company#x]
+- Filter likeany(lower(company#x), %oo%, %in, fa%)
   +- SubqueryAlias ilike_any_table
      +- View (`ilike_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM ilike_any_table WHERE company ILIKE ANY ('microsoft', '%yoo%')
-- !query analysis
Project [company#x]
+- Filter likeany(lower(company#x), microsoft, %yoo%)
   +- SubqueryAlias ilike_any_table
      +- View (`ilike_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
select
    company,
    CASE
        WHEN company ILIKE ANY ('%oO%', '%IN', 'Fa%') THEN 'Y'
        ELSE 'N'
    END AS is_available,
    CASE
        WHEN company ILIKE ANY ('%OO%', 'fa%') OR company ILIKE ANY ('%in', 'MS%') THEN 'Y'
        ELSE 'N'
    END AS mix
FROM ilike_any_table
-- !query analysis
Project [company#x, CASE WHEN likeany(lower(company#x), %oo%, %in, fa%) THEN Y ELSE N END AS is_available#x, CASE WHEN (likeany(lower(company#x), %oo%, fa%) OR likeany(lower(company#x), %in, ms%)) THEN Y ELSE N END AS mix#x]
+- SubqueryAlias ilike_any_table
   +- View (`ilike_any_table`, [company#x, pat#x])
      +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
         +- Project [company#x, pat#x]
            +- SubqueryAlias t1
               +- Project [col1#x AS company#x, col2#x AS pat#x]
                  +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM ilike_any_table WHERE company ILIKE ANY ('%zZ%', pat)
-- !query analysis
Project [company#x]
+- Filter (ilike(company#x, %zZ%, \) OR ilike(company#x, pat#x, \))
   +- SubqueryAlias ilike_any_table
      +- View (`ilike_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM ilike_any_table WHERE company NOT ILIKE ANY ('%oO%', '%iN', 'fa%')
-- !query analysis
Project [company#x]
+- Filter notlikeany(lower(company#x), %oo%, %in, fa%)
   +- SubqueryAlias ilike_any_table
      +- View (`ilike_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM ilike_any_table WHERE company NOT ILIKE ANY ('microsoft', '%yOo%')
-- !query analysis
Project [company#x]
+- Filter notlikeany(lower(company#x), microsoft, %yoo%)
   +- SubqueryAlias ilike_any_table
      +- View (`ilike_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM ilike_any_table WHERE company NOT ILIKE ANY ('%oo%', 'Fa%')
-- !query analysis
Project [company#x]
+- Filter notlikeany(lower(company#x), %oo%, fa%)
   +- SubqueryAlias ilike_any_table
      +- View (`ilike_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM ilike_any_table WHERE NOT company ILIKE ANY ('%OO%', 'fa%')
-- !query analysis
Project [company#x]
+- Filter NOT likeany(lower(company#x), %oo%, fa%)
   +- SubqueryAlias ilike_any_table
      +- View (`ilike_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM ilike_any_table WHERE company ILIKE ANY ('%oO%', NULL)
-- !query analysis
Project [company#x]
+- Filter (ilike(company#x, %oO%, \) OR ilike(company#x, cast(null as string), \))
   +- SubqueryAlias ilike_any_table
      +- View (`ilike_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM ilike_any_table WHERE company NOT ILIKE ANY ('%oo%', NULL)
-- !query analysis
Project [company#x]
+- Filter (NOT ilike(company#x, %oo%, \) OR NOT ilike(company#x, cast(null as string), \))
   +- SubqueryAlias ilike_any_table
      +- View (`ilike_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM ilike_any_table WHERE company ILIKE ANY (NULL, NULL)
-- !query analysis
Project [company#x]
+- Filter (ilike(company#x, cast(null as string), \) OR ilike(company#x, cast(null as string), \))
   +- SubqueryAlias ilike_any_table
      +- View (`ilike_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM ilike_any_table WHERE company NOT ILIKE ANY (NULL, NULL)
-- !query analysis
Project [company#x]
+- Filter (NOT ilike(company#x, cast(null as string), \) OR NOT ilike(company#x, cast(null as string), \))
   +- SubqueryAlias ilike_any_table
      +- View (`ilike_any_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM ilike_any_table WHERE company ILIKE ANY ()
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_0064",
  "messageParameters" : {
    "msg" : "Expected something between '(' and ')'."
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 51,
    "stopIndex" : 62,
    "fragment" : "ILIKE ANY ()"
  } ]
}
