-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view nt1 as select * from values
  ("one", 1),
  ("two", 2),
  ("three", 3)
  as nt1(k, v1)
-- !query analysis
CreateViewCommand `nt1`, select * from values
  ("one", 1),
  ("two", 2),
  ("three", 3)
  as nt1(k, v1), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [k#x, v1#x]
      +- SubqueryAlias nt1
         +- LocalRelation [k#x, v1#x]


-- !query
create temporary view nt2 as select * from values
  ("one", 1),
  ("two", 22),
  ("one", 5)
  as nt2(k, v2)
-- !query analysis
CreateViewCommand `nt2`, select * from values
  ("one", 1),
  ("two", 22),
  ("one", 5)
  as nt2(k, v2), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [k#x, v2#x]
      +- SubqueryAlias nt2
         +- LocalRelation [k#x, v2#x]


-- !query
SELECT * FROM nt1 natural join nt2 where udf(k) = "one"
-- !query analysis
Project [k#x, v1#x, v2#x]
+- Filter (cast(udf(cast(k#x as string)) as string) = one)
   +- Project [k#x, v1#x, v2#x]
      +- Join Inner, (k#x = k#x)
         :- SubqueryAlias nt1
         :  +- View (`nt1`, [k#x, v1#x])
         :     +- Project [cast(k#x as string) AS k#x, cast(v1#x as int) AS v1#x]
         :        +- Project [k#x, v1#x]
         :           +- SubqueryAlias nt1
         :              +- LocalRelation [k#x, v1#x]
         +- SubqueryAlias nt2
            +- View (`nt2`, [k#x, v2#x])
               +- Project [cast(k#x as string) AS k#x, cast(v2#x as int) AS v2#x]
                  +- Project [k#x, v2#x]
                     +- SubqueryAlias nt2
                        +- LocalRelation [k#x, v2#x]


-- !query
SELECT * FROM nt1 natural left join nt2 where k <> udf("") order by v1, v2
-- !query analysis
Sort [v1#x ASC NULLS FIRST, v2#x ASC NULLS FIRST], true
+- Project [k#x, v1#x, v2#x]
   +- Filter NOT (k#x = cast(udf(cast( as string)) as string))
      +- Project [k#x, v1#x, v2#x]
         +- Join LeftOuter, (k#x = k#x)
            :- SubqueryAlias nt1
            :  +- View (`nt1`, [k#x, v1#x])
            :     +- Project [cast(k#x as string) AS k#x, cast(v1#x as int) AS v1#x]
            :        +- Project [k#x, v1#x]
            :           +- SubqueryAlias nt1
            :              +- LocalRelation [k#x, v1#x]
            +- SubqueryAlias nt2
               +- View (`nt2`, [k#x, v2#x])
                  +- Project [cast(k#x as string) AS k#x, cast(v2#x as int) AS v2#x]
                     +- Project [k#x, v2#x]
                        +- SubqueryAlias nt2
                           +- LocalRelation [k#x, v2#x]


-- !query
SELECT * FROM nt1 natural right join nt2 where udf(k) <> udf("") order by v1, v2
-- !query analysis
Sort [v1#x ASC NULLS FIRST, v2#x ASC NULLS FIRST], true
+- Project [k#x, v1#x, v2#x]
   +- Filter NOT (cast(udf(cast(k#x as string)) as string) = cast(udf(cast( as string)) as string))
      +- Project [k#x, v1#x, v2#x]
         +- Join RightOuter, (k#x = k#x)
            :- SubqueryAlias nt1
            :  +- View (`nt1`, [k#x, v1#x])
            :     +- Project [cast(k#x as string) AS k#x, cast(v1#x as int) AS v1#x]
            :        +- Project [k#x, v1#x]
            :           +- SubqueryAlias nt1
            :              +- LocalRelation [k#x, v1#x]
            +- SubqueryAlias nt2
               +- View (`nt2`, [k#x, v2#x])
                  +- Project [cast(k#x as string) AS k#x, cast(v2#x as int) AS v2#x]
                     +- Project [k#x, v2#x]
                        +- SubqueryAlias nt2
                           +- LocalRelation [k#x, v2#x]


-- !query
SELECT udf(count(*)) FROM nt1 natural full outer join nt2
-- !query analysis
Aggregate [cast(udf(cast(count(1) as string)) as bigint) AS udf(count(1))#xL]
+- Project [coalesce(k#x, k#x) AS k#x, v1#x, v2#x]
   +- Join FullOuter, (k#x = k#x)
      :- SubqueryAlias nt1
      :  +- View (`nt1`, [k#x, v1#x])
      :     +- Project [cast(k#x as string) AS k#x, cast(v1#x as int) AS v1#x]
      :        +- Project [k#x, v1#x]
      :           +- SubqueryAlias nt1
      :              +- LocalRelation [k#x, v1#x]
      +- SubqueryAlias nt2
         +- View (`nt2`, [k#x, v2#x])
            +- Project [cast(k#x as string) AS k#x, cast(v2#x as int) AS v2#x]
               +- Project [k#x, v2#x]
                  +- SubqueryAlias nt2
                     +- LocalRelation [k#x, v2#x]
