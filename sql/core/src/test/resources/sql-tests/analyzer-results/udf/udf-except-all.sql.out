-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW tab1 AS SELECT * FROM VALUES
    (0), (1), (2), (2), (2), (2), (3), (null), (null) AS tab1(c1)
-- !query analysis
CreateViewCommand `tab1`, SELECT * FROM VALUES
    (0), (1), (2), (2), (2), (2), (3), (null), (null) AS tab1(c1), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [c1#x]
      +- SubqueryAlias tab1
         +- LocalRelation [c1#x]


-- !query
CREATE TEMPORARY VIEW tab2 AS SELECT * FROM VALUES
    (1), (2), (2), (3), (5), (5), (null) AS tab2(c1)
-- !query analysis
CreateViewCommand `tab2`, SELECT * FROM VALUES
    (1), (2), (2), (3), (5), (5), (null) AS tab2(c1), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [c1#x]
      +- SubqueryAlias tab2
         +- LocalRelation [c1#x]


-- !query
CREATE TEMPORARY VIEW tab3 AS SELECT * FROM VALUES
    (1, 2), 
    (1, 2),
    (1, 3),
    (2, 3),
    (2, 2)
    AS tab3(k, v)
-- !query analysis
CreateViewCommand `tab3`, SELECT * FROM VALUES
    (1, 2), 
    (1, 2),
    (1, 3),
    (2, 3),
    (2, 2)
    AS tab3(k, v), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [k#x, v#x]
      +- SubqueryAlias tab3
         +- LocalRelation [k#x, v#x]


-- !query
CREATE TEMPORARY VIEW tab4 AS SELECT * FROM VALUES
    (1, 2), 
    (2, 3),
    (2, 2),
    (2, 2),
    (2, 20)
    AS tab4(k, v)
-- !query analysis
CreateViewCommand `tab4`, SELECT * FROM VALUES
    (1, 2), 
    (2, 3),
    (2, 2),
    (2, 2),
    (2, 20)
    AS tab4(k, v), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [k#x, v#x]
      +- SubqueryAlias tab4
         +- LocalRelation [k#x, v#x]


-- !query
SELECT udf(c1) FROM tab1
EXCEPT ALL
SELECT udf(c1) FROM tab2
-- !query analysis
Except All true
:- Project [cast(udf(cast(c1#x as string)) as int) AS udf(c1)#x]
:  +- SubqueryAlias tab1
:     +- View (`tab1`, [c1#x])
:        +- Project [cast(c1#x as int) AS c1#x]
:           +- Project [c1#x]
:              +- SubqueryAlias tab1
:                 +- LocalRelation [c1#x]
+- Project [cast(udf(cast(c1#x as string)) as int) AS udf(c1)#x]
   +- SubqueryAlias tab2
      +- View (`tab2`, [c1#x])
         +- Project [cast(c1#x as int) AS c1#x]
            +- Project [c1#x]
               +- SubqueryAlias tab2
                  +- LocalRelation [c1#x]


-- !query
SELECT udf(c1) FROM tab1
MINUS ALL
SELECT udf(c1) FROM tab2
-- !query analysis
Except All true
:- Project [cast(udf(cast(c1#x as string)) as int) AS udf(c1)#x]
:  +- SubqueryAlias tab1
:     +- View (`tab1`, [c1#x])
:        +- Project [cast(c1#x as int) AS c1#x]
:           +- Project [c1#x]
:              +- SubqueryAlias tab1
:                 +- LocalRelation [c1#x]
+- Project [cast(udf(cast(c1#x as string)) as int) AS udf(c1)#x]
   +- SubqueryAlias tab2
      +- View (`tab2`, [c1#x])
         +- Project [cast(c1#x as int) AS c1#x]
            +- Project [c1#x]
               +- SubqueryAlias tab2
                  +- LocalRelation [c1#x]


-- !query
SELECT udf(c1) FROM tab1
EXCEPT ALL
SELECT udf(c1) FROM tab2 WHERE udf(c1) IS NOT NULL
-- !query analysis
Except All true
:- Project [cast(udf(cast(c1#x as string)) as int) AS udf(c1)#x]
:  +- SubqueryAlias tab1
:     +- View (`tab1`, [c1#x])
:        +- Project [cast(c1#x as int) AS c1#x]
:           +- Project [c1#x]
:              +- SubqueryAlias tab1
:                 +- LocalRelation [c1#x]
+- Project [cast(udf(cast(c1#x as string)) as int) AS udf(c1)#x]
   +- Filter isnotnull(cast(udf(cast(c1#x as string)) as int))
      +- SubqueryAlias tab2
         +- View (`tab2`, [c1#x])
            +- Project [cast(c1#x as int) AS c1#x]
               +- Project [c1#x]
                  +- SubqueryAlias tab2
                     +- LocalRelation [c1#x]


-- !query
SELECT udf(c1) FROM tab1 WHERE udf(c1) > 5
EXCEPT ALL
SELECT udf(c1) FROM tab2
-- !query analysis
Except All true
:- Project [cast(udf(cast(c1#x as string)) as int) AS udf(c1)#x]
:  +- Filter (cast(udf(cast(c1#x as string)) as int) > 5)
:     +- SubqueryAlias tab1
:        +- View (`tab1`, [c1#x])
:           +- Project [cast(c1#x as int) AS c1#x]
:              +- Project [c1#x]
:                 +- SubqueryAlias tab1
:                    +- LocalRelation [c1#x]
+- Project [cast(udf(cast(c1#x as string)) as int) AS udf(c1)#x]
   +- SubqueryAlias tab2
      +- View (`tab2`, [c1#x])
         +- Project [cast(c1#x as int) AS c1#x]
            +- Project [c1#x]
               +- SubqueryAlias tab2
                  +- LocalRelation [c1#x]


-- !query
SELECT udf(c1) FROM tab1
EXCEPT ALL
SELECT udf(c1) FROM tab2 WHERE udf(c1 > udf(6))
-- !query analysis
Except All true
:- Project [cast(udf(cast(c1#x as string)) as int) AS udf(c1)#x]
:  +- SubqueryAlias tab1
:     +- View (`tab1`, [c1#x])
:        +- Project [cast(c1#x as int) AS c1#x]
:           +- Project [c1#x]
:              +- SubqueryAlias tab1
:                 +- LocalRelation [c1#x]
+- Project [cast(udf(cast(c1#x as string)) as int) AS udf(c1)#x]
   +- Filter cast(udf(cast((c1#x > cast(udf(cast(6 as string)) as int)) as string)) as boolean)
      +- SubqueryAlias tab2
         +- View (`tab2`, [c1#x])
            +- Project [cast(c1#x as int) AS c1#x]
               +- Project [c1#x]
                  +- SubqueryAlias tab2
                     +- LocalRelation [c1#x]


-- !query
SELECT udf(c1) FROM tab1
EXCEPT ALL
SELECT CAST(udf(1) AS BIGINT)
-- !query analysis
Except All true
:- Project [cast(udf(c1)#x as bigint) AS udf(c1)#xL]
:  +- Project [cast(udf(cast(c1#x as string)) as int) AS udf(c1)#x]
:     +- SubqueryAlias tab1
:        +- View (`tab1`, [c1#x])
:           +- Project [cast(c1#x as int) AS c1#x]
:              +- Project [c1#x]
:                 +- SubqueryAlias tab1
:                    +- LocalRelation [c1#x]
+- Project [cast(cast(udf(cast(1 as string)) as int) as bigint) AS CAST(udf(1) AS BIGINT)#xL]
   +- OneRowRelation


-- !query
SELECT udf(c1) FROM tab1
EXCEPT ALL
SELECT array(1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"ARRAY<INT>\"",
    "dataType2" : "\"INT\"",
    "hint" : "",
    "operator" : "EXCEPT ALL",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 51,
    "fragment" : "SELECT udf(c1) FROM tab1\nEXCEPT ALL\nSELECT array(1)"
  } ]
}


-- !query
SELECT udf(k), v FROM tab3
EXCEPT ALL
SELECT k, udf(v) FROM tab4
-- !query analysis
Except All true
:- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, v#x]
:  +- SubqueryAlias tab3
:     +- View (`tab3`, [k#x, v#x])
:        +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:           +- Project [k#x, v#x]
:              +- SubqueryAlias tab3
:                 +- LocalRelation [k#x, v#x]
+- Project [k#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
   +- SubqueryAlias tab4
      +- View (`tab4`, [k#x, v#x])
         +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
            +- Project [k#x, v#x]
               +- SubqueryAlias tab4
                  +- LocalRelation [k#x, v#x]


-- !query
SELECT k, udf(v) FROM tab4
EXCEPT ALL
SELECT udf(k), v FROM tab3
-- !query analysis
Except All true
:- Project [k#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:  +- SubqueryAlias tab4
:     +- View (`tab4`, [k#x, v#x])
:        +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:           +- Project [k#x, v#x]
:              +- SubqueryAlias tab4
:                 +- LocalRelation [k#x, v#x]
+- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, v#x]
   +- SubqueryAlias tab3
      +- View (`tab3`, [k#x, v#x])
         +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
            +- Project [k#x, v#x]
               +- SubqueryAlias tab3
                  +- LocalRelation [k#x, v#x]


-- !query
SELECT udf(k), udf(v) FROM tab4
EXCEPT ALL
SELECT udf(k), udf(v) FROM tab3
INTERSECT DISTINCT
SELECT udf(k), udf(v) FROM tab4
-- !query analysis
Except All true
:- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:  +- SubqueryAlias tab4
:     +- View (`tab4`, [k#x, v#x])
:        +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:           +- Project [k#x, v#x]
:              +- SubqueryAlias tab4
:                 +- LocalRelation [k#x, v#x]
+- Intersect false
   :- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
   :  +- SubqueryAlias tab3
   :     +- View (`tab3`, [k#x, v#x])
   :        +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
   :           +- Project [k#x, v#x]
   :              +- SubqueryAlias tab3
   :                 +- LocalRelation [k#x, v#x]
   +- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
      +- SubqueryAlias tab4
         +- View (`tab4`, [k#x, v#x])
            +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
               +- Project [k#x, v#x]
                  +- SubqueryAlias tab4
                     +- LocalRelation [k#x, v#x]


-- !query
SELECT udf(k), v FROM tab4
EXCEPT ALL
SELECT k, udf(v) FROM tab3
EXCEPT DISTINCT
SELECT udf(k), udf(v) FROM tab4
-- !query analysis
Except false
:- Except All true
:  :- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, v#x]
:  :  +- SubqueryAlias tab4
:  :     +- View (`tab4`, [k#x, v#x])
:  :        +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:  :           +- Project [k#x, v#x]
:  :              +- SubqueryAlias tab4
:  :                 +- LocalRelation [k#x, v#x]
:  +- Project [k#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:     +- SubqueryAlias tab3
:        +- View (`tab3`, [k#x, v#x])
:           +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:              +- Project [k#x, v#x]
:                 +- SubqueryAlias tab3
:                    +- LocalRelation [k#x, v#x]
+- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
   +- SubqueryAlias tab4
      +- View (`tab4`, [k#x, v#x])
         +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
            +- Project [k#x, v#x]
               +- SubqueryAlias tab4
                  +- LocalRelation [k#x, v#x]


-- !query
SELECT k, udf(v) FROM tab3
EXCEPT ALL
SELECT udf(k), udf(v) FROM tab4
UNION ALL
SELECT udf(k), v FROM tab3
EXCEPT DISTINCT
SELECT k, udf(v) FROM tab4
-- !query analysis
Except false
:- Union false, false
:  :- Except All true
:  :  :- Project [k#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:  :  :  +- SubqueryAlias tab3
:  :  :     +- View (`tab3`, [k#x, v#x])
:  :  :        +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:  :  :           +- Project [k#x, v#x]
:  :  :              +- SubqueryAlias tab3
:  :  :                 +- LocalRelation [k#x, v#x]
:  :  +- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:  :     +- SubqueryAlias tab4
:  :        +- View (`tab4`, [k#x, v#x])
:  :           +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:  :              +- Project [k#x, v#x]
:  :                 +- SubqueryAlias tab4
:  :                    +- LocalRelation [k#x, v#x]
:  +- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, v#x]
:     +- SubqueryAlias tab3
:        +- View (`tab3`, [k#x, v#x])
:           +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:              +- Project [k#x, v#x]
:                 +- SubqueryAlias tab3
:                    +- LocalRelation [k#x, v#x]
+- Project [k#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
   +- SubqueryAlias tab4
      +- View (`tab4`, [k#x, v#x])
         +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
            +- Project [k#x, v#x]
               +- SubqueryAlias tab4
                  +- LocalRelation [k#x, v#x]


-- !query
SELECT k FROM tab3
EXCEPT ALL
SELECT k, v FROM tab4
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "NUM_COLUMNS_MISMATCH",
  "sqlState" : "42826",
  "messageParameters" : {
    "firstNumColumns" : "1",
    "invalidNumColumns" : "2",
    "invalidOrdinalNum" : "second",
    "operator" : "EXCEPT ALL"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 51,
    "fragment" : "SELECT k FROM tab3\nEXCEPT ALL\nSELECT k, v FROM tab4"
  } ]
}


-- !query
SELECT udf(k), udf(v) FROM tab3
EXCEPT ALL
SELECT udf(k), udf(v) FROM tab4
UNION
SELECT udf(k), udf(v) FROM tab3
EXCEPT DISTINCT
SELECT udf(k), udf(v) FROM tab4
-- !query analysis
Except false
:- Distinct
:  +- Union false, false
:     :- Except All true
:     :  :- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:     :  :  +- SubqueryAlias tab3
:     :  :     +- View (`tab3`, [k#x, v#x])
:     :  :        +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:     :  :           +- Project [k#x, v#x]
:     :  :              +- SubqueryAlias tab3
:     :  :                 +- LocalRelation [k#x, v#x]
:     :  +- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:     :     +- SubqueryAlias tab4
:     :        +- View (`tab4`, [k#x, v#x])
:     :           +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:     :              +- Project [k#x, v#x]
:     :                 +- SubqueryAlias tab4
:     :                    +- LocalRelation [k#x, v#x]
:     +- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:        +- SubqueryAlias tab3
:           +- View (`tab3`, [k#x, v#x])
:              +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:                 +- Project [k#x, v#x]
:                    +- SubqueryAlias tab3
:                       +- LocalRelation [k#x, v#x]
+- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
   +- SubqueryAlias tab4
      +- View (`tab4`, [k#x, v#x])
         +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
            +- Project [k#x, v#x]
               +- SubqueryAlias tab4
                  +- LocalRelation [k#x, v#x]


-- !query
SELECT udf(k), udf(v) FROM tab3
MINUS ALL
SELECT k, udf(v) FROM tab4
UNION
SELECT udf(k), udf(v) FROM tab3
MINUS DISTINCT
SELECT k, udf(v) FROM tab4
-- !query analysis
Except false
:- Distinct
:  +- Union false, false
:     :- Except All true
:     :  :- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:     :  :  +- SubqueryAlias tab3
:     :  :     +- View (`tab3`, [k#x, v#x])
:     :  :        +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:     :  :           +- Project [k#x, v#x]
:     :  :              +- SubqueryAlias tab3
:     :  :                 +- LocalRelation [k#x, v#x]
:     :  +- Project [k#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:     :     +- SubqueryAlias tab4
:     :        +- View (`tab4`, [k#x, v#x])
:     :           +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:     :              +- Project [k#x, v#x]
:     :                 +- SubqueryAlias tab4
:     :                    +- LocalRelation [k#x, v#x]
:     +- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:        +- SubqueryAlias tab3
:           +- View (`tab3`, [k#x, v#x])
:              +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:                 +- Project [k#x, v#x]
:                    +- SubqueryAlias tab3
:                       +- LocalRelation [k#x, v#x]
+- Project [k#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
   +- SubqueryAlias tab4
      +- View (`tab4`, [k#x, v#x])
         +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
            +- Project [k#x, v#x]
               +- SubqueryAlias tab4
                  +- LocalRelation [k#x, v#x]


-- !query
SELECT k, udf(v) FROM tab3
EXCEPT ALL
SELECT udf(k), v FROM tab4
EXCEPT DISTINCT
SELECT k, udf(v) FROM tab3
EXCEPT DISTINCT
SELECT udf(k), v FROM tab4
-- !query analysis
Except false
:- Except false
:  :- Except All true
:  :  :- Project [k#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:  :  :  +- SubqueryAlias tab3
:  :  :     +- View (`tab3`, [k#x, v#x])
:  :  :        +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:  :  :           +- Project [k#x, v#x]
:  :  :              +- SubqueryAlias tab3
:  :  :                 +- LocalRelation [k#x, v#x]
:  :  +- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, v#x]
:  :     +- SubqueryAlias tab4
:  :        +- View (`tab4`, [k#x, v#x])
:  :           +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:  :              +- Project [k#x, v#x]
:  :                 +- SubqueryAlias tab4
:  :                    +- LocalRelation [k#x, v#x]
:  +- Project [k#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:     +- SubqueryAlias tab3
:        +- View (`tab3`, [k#x, v#x])
:           +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:              +- Project [k#x, v#x]
:                 +- SubqueryAlias tab3
:                    +- LocalRelation [k#x, v#x]
+- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, v#x]
   +- SubqueryAlias tab4
      +- View (`tab4`, [k#x, v#x])
         +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
            +- Project [k#x, v#x]
               +- SubqueryAlias tab4
                  +- LocalRelation [k#x, v#x]


-- !query
SELECT * 
FROM   (SELECT tab3.k,
               udf(tab4.v)
        FROM   tab3 
               JOIN tab4 
                 ON udf(tab3.k) = tab4.k)
EXCEPT ALL 
SELECT * 
FROM   (SELECT udf(tab3.k),
               tab4.v
        FROM   tab3 
               JOIN tab4 
                 ON tab3.k = udf(tab4.k))
-- !query analysis
Except All true
:- Project [k#x, udf(v)#x]
:  +- SubqueryAlias __auto_generated_subquery_name
:     +- Project [k#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:        +- Join Inner, (cast(udf(cast(k#x as string)) as int) = k#x)
:           :- SubqueryAlias tab3
:           :  +- View (`tab3`, [k#x, v#x])
:           :     +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:           :        +- Project [k#x, v#x]
:           :           +- SubqueryAlias tab3
:           :              +- LocalRelation [k#x, v#x]
:           +- SubqueryAlias tab4
:              +- View (`tab4`, [k#x, v#x])
:                 +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:                    +- Project [k#x, v#x]
:                       +- SubqueryAlias tab4
:                          +- LocalRelation [k#x, v#x]
+- Project [udf(k)#x, v#x]
   +- SubqueryAlias __auto_generated_subquery_name
      +- Project [cast(udf(cast(k#x as string)) as int) AS udf(k)#x, v#x]
         +- Join Inner, (k#x = cast(udf(cast(k#x as string)) as int))
            :- SubqueryAlias tab3
            :  +- View (`tab3`, [k#x, v#x])
            :     +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
            :        +- Project [k#x, v#x]
            :           +- SubqueryAlias tab3
            :              +- LocalRelation [k#x, v#x]
            +- SubqueryAlias tab4
               +- View (`tab4`, [k#x, v#x])
                  +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
                     +- Project [k#x, v#x]
                        +- SubqueryAlias tab4
                           +- LocalRelation [k#x, v#x]


-- !query
SELECT * 
FROM   (SELECT udf(udf(tab3.k)),
               udf(tab4.v)
        FROM   tab3 
               JOIN tab4 
                 ON udf(udf(tab3.k)) = udf(tab4.k))
EXCEPT ALL 
SELECT * 
FROM   (SELECT udf(tab4.v) AS k,
               udf(udf(tab3.k)) AS v
        FROM   tab3 
               JOIN tab4 
                 ON udf(tab3.k) = udf(tab4.k))
-- !query analysis
Except All true
:- Project [udf(udf(k))#x, udf(v)#x]
:  +- SubqueryAlias __auto_generated_subquery_name
:     +- Project [cast(udf(cast(cast(udf(cast(k#x as string)) as int) as string)) as int) AS udf(udf(k))#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:        +- Join Inner, (cast(udf(cast(cast(udf(cast(k#x as string)) as int) as string)) as int) = cast(udf(cast(k#x as string)) as int))
:           :- SubqueryAlias tab3
:           :  +- View (`tab3`, [k#x, v#x])
:           :     +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:           :        +- Project [k#x, v#x]
:           :           +- SubqueryAlias tab3
:           :              +- LocalRelation [k#x, v#x]
:           +- SubqueryAlias tab4
:              +- View (`tab4`, [k#x, v#x])
:                 +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:                    +- Project [k#x, v#x]
:                       +- SubqueryAlias tab4
:                          +- LocalRelation [k#x, v#x]
+- Project [k#x, v#x]
   +- SubqueryAlias __auto_generated_subquery_name
      +- Project [cast(udf(cast(v#x as string)) as int) AS k#x, cast(udf(cast(cast(udf(cast(k#x as string)) as int) as string)) as int) AS v#x]
         +- Join Inner, (cast(udf(cast(k#x as string)) as int) = cast(udf(cast(k#x as string)) as int))
            :- SubqueryAlias tab3
            :  +- View (`tab3`, [k#x, v#x])
            :     +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
            :        +- Project [k#x, v#x]
            :           +- SubqueryAlias tab3
            :              +- LocalRelation [k#x, v#x]
            +- SubqueryAlias tab4
               +- View (`tab4`, [k#x, v#x])
                  +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
                     +- Project [k#x, v#x]
                        +- SubqueryAlias tab4
                           +- LocalRelation [k#x, v#x]


-- !query
SELECT udf(v) FROM tab3 GROUP BY v
EXCEPT ALL
SELECT udf(k) FROM tab4 GROUP BY k
-- !query analysis
Except All true
:- Aggregate [v#x], [cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:  +- SubqueryAlias tab3
:     +- View (`tab3`, [k#x, v#x])
:        +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
:           +- Project [k#x, v#x]
:              +- SubqueryAlias tab3
:                 +- LocalRelation [k#x, v#x]
+- Aggregate [k#x], [cast(udf(cast(k#x as string)) as int) AS udf(k)#x]
   +- SubqueryAlias tab4
      +- View (`tab4`, [k#x, v#x])
         +- Project [cast(k#x as int) AS k#x, cast(v#x as int) AS v#x]
            +- Project [k#x, v#x]
               +- SubqueryAlias tab4
                  +- LocalRelation [k#x, v#x]


-- !query
DROP VIEW IF EXISTS tab1
-- !query analysis
DropTempViewCommand tab1


-- !query
DROP VIEW IF EXISTS tab2
-- !query analysis
DropTempViewCommand tab2


-- !query
DROP VIEW IF EXISTS tab3
-- !query analysis
DropTempViewCommand tab3


-- !query
DROP VIEW IF EXISTS tab4
-- !query analysis
DropTempViewCommand tab4
