-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view t1 as select * from values
  ("one", 1),
  ("two", 2),
  ("three", 3),
  ("one", NULL)
  as t1(k, v)
-- !query analysis
CreateViewCommand `t1`, select * from values
  ("one", 1),
  ("two", 2),
  ("three", 3),
  ("one", NULL)
  as t1(k, v), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [k#x, v#x]
      +- SubqueryAlias t1
         +- LocalRelation [k#x, v#x]


-- !query
create temporary view t2 as select * from values
  ("one", 1),
  ("two", 22),
  ("one", 5),
  ("one", NULL),
  (NULL, 5)
  as t2(k, v)
-- !query analysis
CreateViewCommand `t2`, select * from values
  ("one", 1),
  ("two", 22),
  ("one", 5),
  ("one", NULL),
  (NULL, 5)
  as t2(k, v), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [k#x, v#x]
      +- SubqueryAlias t2
         +- LocalRelation [k#x, v#x]


-- !query
SELECT udf(k), udf(v) FROM t1 EXCEPT SELECT udf(k), udf(v) FROM t2
-- !query analysis
Except false
:- Project [cast(udf(cast(k#x as string)) as string) AS udf(k)#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
:  +- SubqueryAlias t1
:     +- View (`t1`, [k#x, v#x])
:        +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
:           +- Project [k#x, v#x]
:              +- SubqueryAlias t1
:                 +- LocalRelation [k#x, v#x]
+- Project [cast(udf(cast(k#x as string)) as string) AS udf(k)#x, cast(udf(cast(v#x as string)) as int) AS udf(v)#x]
   +- SubqueryAlias t2
      +- View (`t2`, [k#x, v#x])
         +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
            +- Project [k#x, v#x]
               +- SubqueryAlias t2
                  +- LocalRelation [k#x, v#x]


-- !query
SELECT * FROM t1 EXCEPT SELECT * FROM t1 where udf(v) <> 1 and v <> udf(2)
-- !query analysis
Except false
:- Project [k#x, v#x]
:  +- SubqueryAlias t1
:     +- View (`t1`, [k#x, v#x])
:        +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
:           +- Project [k#x, v#x]
:              +- SubqueryAlias t1
:                 +- LocalRelation [k#x, v#x]
+- Project [k#x, v#x]
   +- Filter (NOT (cast(udf(cast(v#x as string)) as int) = 1) AND NOT (v#x = cast(udf(cast(2 as string)) as int)))
      +- SubqueryAlias t1
         +- View (`t1`, [k#x, v#x])
            +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
               +- Project [k#x, v#x]
                  +- SubqueryAlias t1
                     +- LocalRelation [k#x, v#x]


-- !query
SELECT * FROM t1 where udf(v) <> 1 and v <> udf(22) EXCEPT SELECT * FROM t1 where udf(v) <> 2 and v >= udf(3)
-- !query analysis
Except false
:- Project [k#x, v#x]
:  +- Filter (NOT (cast(udf(cast(v#x as string)) as int) = 1) AND NOT (v#x = cast(udf(cast(22 as string)) as int)))
:     +- SubqueryAlias t1
:        +- View (`t1`, [k#x, v#x])
:           +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
:              +- Project [k#x, v#x]
:                 +- SubqueryAlias t1
:                    +- LocalRelation [k#x, v#x]
+- Project [k#x, v#x]
   +- Filter (NOT (cast(udf(cast(v#x as string)) as int) = 2) AND (v#x >= cast(udf(cast(3 as string)) as int)))
      +- SubqueryAlias t1
         +- View (`t1`, [k#x, v#x])
            +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
               +- Project [k#x, v#x]
                  +- SubqueryAlias t1
                     +- LocalRelation [k#x, v#x]


-- !query
SELECT t1.* FROM t1, t2 where t1.k = t2.k
EXCEPT
SELECT t1.* FROM t1, t2 where t1.k = t2.k and t1.k != udf('one')
-- !query analysis
Except false
:- Project [k#x, v#x]
:  +- Filter (k#x = k#x)
:     +- Join Inner
:        :- SubqueryAlias t1
:        :  +- View (`t1`, [k#x, v#x])
:        :     +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
:        :        +- Project [k#x, v#x]
:        :           +- SubqueryAlias t1
:        :              +- LocalRelation [k#x, v#x]
:        +- SubqueryAlias t2
:           +- View (`t2`, [k#x, v#x])
:              +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
:                 +- Project [k#x, v#x]
:                    +- SubqueryAlias t2
:                       +- LocalRelation [k#x, v#x]
+- Project [k#x, v#x]
   +- Filter ((k#x = k#x) AND NOT (k#x = cast(udf(cast(one as string)) as string)))
      +- Join Inner
         :- SubqueryAlias t1
         :  +- View (`t1`, [k#x, v#x])
         :     +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
         :        +- Project [k#x, v#x]
         :           +- SubqueryAlias t1
         :              +- LocalRelation [k#x, v#x]
         +- SubqueryAlias t2
            +- View (`t2`, [k#x, v#x])
               +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
                  +- Project [k#x, v#x]
                     +- SubqueryAlias t2
                        +- LocalRelation [k#x, v#x]


-- !query
SELECT * FROM t2 where v >= udf(1) and udf(v) <> 22 EXCEPT SELECT * FROM t1
-- !query analysis
Except false
:- Project [k#x, v#x]
:  +- Filter ((v#x >= cast(udf(cast(1 as string)) as int)) AND NOT (cast(udf(cast(v#x as string)) as int) = 22))
:     +- SubqueryAlias t2
:        +- View (`t2`, [k#x, v#x])
:           +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
:              +- Project [k#x, v#x]
:                 +- SubqueryAlias t2
:                    +- LocalRelation [k#x, v#x]
+- Project [k#x, v#x]
   +- SubqueryAlias t1
      +- View (`t1`, [k#x, v#x])
         +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
            +- Project [k#x, v#x]
               +- SubqueryAlias t1
                  +- LocalRelation [k#x, v#x]


-- !query
SELECT (SELECT min(udf(k)) FROM t2 WHERE t2.k = t1.k) min_t2 FROM t1
MINUS
SELECT (SELECT udf(min(k)) FROM t2) abs_min_t2 FROM t1 WHERE  t1.k = udf('one')
-- !query analysis
Except false
:- Project [scalar-subquery#x [k#x] AS min_t2#x]
:  :  +- Aggregate [min(cast(udf(cast(k#x as string)) as string)) AS min(udf(k))#x]
:  :     +- Filter (k#x = outer(k#x))
:  :        +- SubqueryAlias t2
:  :           +- View (`t2`, [k#x, v#x])
:  :              +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
:  :                 +- Project [k#x, v#x]
:  :                    +- SubqueryAlias t2
:  :                       +- LocalRelation [k#x, v#x]
:  +- SubqueryAlias t1
:     +- View (`t1`, [k#x, v#x])
:        +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
:           +- Project [k#x, v#x]
:              +- SubqueryAlias t1
:                 +- LocalRelation [k#x, v#x]
+- Project [scalar-subquery#x [] AS abs_min_t2#x]
   :  +- Aggregate [cast(udf(cast(min(k#x) as string)) as string) AS udf(min(k))#x]
   :     +- SubqueryAlias t2
   :        +- View (`t2`, [k#x, v#x])
   :           +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
   :              +- Project [k#x, v#x]
   :                 +- SubqueryAlias t2
   :                    +- LocalRelation [k#x, v#x]
   +- Filter (k#x = cast(udf(cast(one as string)) as string))
      +- SubqueryAlias t1
         +- View (`t1`, [k#x, v#x])
            +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
               +- Project [k#x, v#x]
                  +- SubqueryAlias t1
                     +- LocalRelation [k#x, v#x]


-- !query
SELECT t1.k
FROM   t1
WHERE  t1.v <= (SELECT   udf(max(udf(t2.v)))
                FROM     t2
                WHERE    udf(t2.k) = udf(t1.k))
MINUS
SELECT t1.k
FROM   t1
WHERE  udf(t1.v) >= (SELECT   min(udf(t2.v))
                FROM     t2
                WHERE    t2.k = t1.k)
-- !query analysis
Except false
:- Project [k#x]
:  +- Filter (v#x <= scalar-subquery#x [k#x])
:     :  +- Aggregate [cast(udf(cast(max(cast(udf(cast(v#x as string)) as int)) as string)) as int) AS udf(max(udf(v)))#x]
:     :     +- Filter (cast(udf(cast(k#x as string)) as string) = cast(udf(cast(outer(k#x) as string)) as string))
:     :        +- SubqueryAlias t2
:     :           +- View (`t2`, [k#x, v#x])
:     :              +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
:     :                 +- Project [k#x, v#x]
:     :                    +- SubqueryAlias t2
:     :                       +- LocalRelation [k#x, v#x]
:     +- SubqueryAlias t1
:        +- View (`t1`, [k#x, v#x])
:           +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
:              +- Project [k#x, v#x]
:                 +- SubqueryAlias t1
:                    +- LocalRelation [k#x, v#x]
+- Project [k#x]
   +- Filter (cast(udf(cast(v#x as string)) as int) >= scalar-subquery#x [k#x])
      :  +- Aggregate [min(cast(udf(cast(v#x as string)) as int)) AS min(udf(v))#x]
      :     +- Filter (k#x = outer(k#x))
      :        +- SubqueryAlias t2
      :           +- View (`t2`, [k#x, v#x])
      :              +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
      :                 +- Project [k#x, v#x]
      :                    +- SubqueryAlias t2
      :                       +- LocalRelation [k#x, v#x]
      +- SubqueryAlias t1
         +- View (`t1`, [k#x, v#x])
            +- Project [cast(k#x as string) AS k#x, cast(v#x as int) AS v#x]
               +- Project [k#x, v#x]
                  +- SubqueryAlias t1
                     +- LocalRelation [k#x, v#x]
