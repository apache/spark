-- Automatically generated by SQLQueryTestSuite
-- !query
select concat_ws()
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "WRONG_NUM_ARGS.WITHOUT_SUGGESTION",
  "sqlState" : "42605",
  "messageParameters" : {
    "actualNum" : "0",
    "docroot" : "https://spark.apache.org/docs/latest",
    "expectedNum" : "> 0",
    "functionName" : "`concat_ws`"
  }
}


-- !query
select format_string()
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "WRONG_NUM_ARGS.WITHOUT_SUGGESTION",
  "sqlState" : "42605",
  "messageParameters" : {
    "actualNum" : "0",
    "docroot" : "https://spark.apache.org/docs/latest",
    "expectedNum" : "> 0",
    "functionName" : "`format_string`"
  }
}


-- !query
select 'a' || 'b' || 'c'
-- !query analysis
Project [concat(concat(a, b), c) AS concat(concat(a, b), c)#x]
+- OneRowRelation


-- !query
select replace('abc', 'b', '123')
-- !query analysis
Project [replace(abc, b, 123) AS replace(abc, b, 123)#x]
+- OneRowRelation


-- !query
select replace('abc', 'b')
-- !query analysis
Project [replace(abc, b, ) AS replace(abc, b, )#x]
+- OneRowRelation


-- !query
select length(uuid()), (uuid() <> uuid())
-- !query analysis
[Analyzer test output redacted due to nondeterminism]


-- !query
select position('bar' in 'foobarbar'), position(null, 'foobarbar'), position('aaads', null)
-- !query analysis
Project [locate(bar, foobarbar, 1) AS locate(bar, foobarbar, 1)#x, position(cast(null as string), foobarbar, 1) AS position(NULL, foobarbar, 1)#x, position(aaads, cast(null as string), 1) AS position(aaads, NULL, 1)#x]
+- OneRowRelation


-- !query
select left("abcd", 2), left("abcd", 5), left("abcd", '2'), left("abcd", null)
-- !query analysis
Project [left(abcd, 2) AS left(abcd, 2)#x, left(abcd, 5) AS left(abcd, 5)#x, left(abcd, cast(2 as int)) AS left(abcd, 2)#x, left(abcd, cast(null as int)) AS left(abcd, NULL)#x]
+- OneRowRelation


-- !query
select left(null, -2)
-- !query analysis
Project [left(cast(null as string), -2) AS left(NULL, -2)#x]
+- OneRowRelation


-- !query
select left("abcd", -2), left("abcd", 0), left("abcd", 'a')
-- !query analysis
Project [left(abcd, -2) AS left(abcd, -2)#x, left(abcd, 0) AS left(abcd, 0)#x, left(abcd, cast(a as int)) AS left(abcd, a)#x]
+- OneRowRelation


-- !query
select right("abcd", 2), right("abcd", 5), right("abcd", '2'), right("abcd", null)
-- !query analysis
Project [right(abcd, 2) AS right(abcd, 2)#x, right(abcd, 5) AS right(abcd, 5)#x, right(abcd, cast(2 as int)) AS right(abcd, 2)#x, right(abcd, cast(null as int)) AS right(abcd, NULL)#x]
+- OneRowRelation


-- !query
select right(null, -2)
-- !query analysis
Project [right(cast(null as string), -2) AS right(NULL, -2)#x]
+- OneRowRelation


-- !query
select right("abcd", -2), right("abcd", 0), right("abcd", 'a')
-- !query analysis
Project [right(abcd, -2) AS right(abcd, -2)#x, right(abcd, 0) AS right(abcd, 0)#x, right(abcd, cast(a as int)) AS right(abcd, a)#x]
+- OneRowRelation


-- !query
SELECT split('aa1cc2ee3', '[1-9]+')
-- !query analysis
Project [split(aa1cc2ee3, [1-9]+, -1) AS split(aa1cc2ee3, [1-9]+, -1)#x]
+- OneRowRelation


-- !query
SELECT split('aa1cc2ee3', '[1-9]+', 2)
-- !query analysis
Project [split(aa1cc2ee3, [1-9]+, 2) AS split(aa1cc2ee3, [1-9]+, 2)#x]
+- OneRowRelation


-- !query
SELECT split('hello', '')
-- !query analysis
Project [split(hello, , -1) AS split(hello, , -1)#x]
+- OneRowRelation


-- !query
SELECT split('', '')
-- !query analysis
Project [split(, , -1) AS split(, , -1)#x]
+- OneRowRelation


-- !query
SELECT split('abc', null)
-- !query analysis
Project [split(abc, cast(null as string), -1) AS split(abc, NULL, -1)#x]
+- OneRowRelation


-- !query
SELECT split(null, 'b')
-- !query analysis
Project [split(cast(null as string), b, -1) AS split(NULL, b, -1)#x]
+- OneRowRelation


-- !query
SELECT split_part('11.12.13', '.', 2)
-- !query analysis
Project [split_part(11.12.13, ., 2) AS split_part(11.12.13, ., 2)#x]
+- OneRowRelation


-- !query
SELECT split_part('11.12.13', '.', -1)
-- !query analysis
Project [split_part(11.12.13, ., -1) AS split_part(11.12.13, ., -1)#x]
+- OneRowRelation


-- !query
SELECT split_part('11.12.13', '.', -3)
-- !query analysis
Project [split_part(11.12.13, ., -3) AS split_part(11.12.13, ., -3)#x]
+- OneRowRelation


-- !query
SELECT split_part('11.12.13', '', 1)
-- !query analysis
Project [split_part(11.12.13, , 1) AS split_part(11.12.13, , 1)#x]
+- OneRowRelation


-- !query
SELECT split_part('11ab12ab13', 'ab', 1)
-- !query analysis
Project [split_part(11ab12ab13, ab, 1) AS split_part(11ab12ab13, ab, 1)#x]
+- OneRowRelation


-- !query
SELECT split_part('11.12.13', '.', 0)
-- !query analysis
Project [split_part(11.12.13, ., 0) AS split_part(11.12.13, ., 0)#x]
+- OneRowRelation


-- !query
SELECT split_part('11.12.13', '.', 4)
-- !query analysis
Project [split_part(11.12.13, ., 4) AS split_part(11.12.13, ., 4)#x]
+- OneRowRelation


-- !query
SELECT split_part('11.12.13', '.', 5)
-- !query analysis
Project [split_part(11.12.13, ., 5) AS split_part(11.12.13, ., 5)#x]
+- OneRowRelation


-- !query
SELECT split_part('11.12.13', '.', -5)
-- !query analysis
Project [split_part(11.12.13, ., -5) AS split_part(11.12.13, ., -5)#x]
+- OneRowRelation


-- !query
SELECT split_part(null, '.', 1)
-- !query analysis
Project [split_part(cast(null as string), ., 1) AS split_part(NULL, ., 1)#x]
+- OneRowRelation


-- !query
SELECT split_part(str, delimiter, partNum) FROM VALUES ('11.12.13', '.', 3) AS v1(str, delimiter, partNum)
-- !query analysis
Project [split_part(str#x, delimiter#x, partNum#x) AS split_part(str, delimiter, partNum)#x]
+- SubqueryAlias v1
   +- LocalRelation [str#x, delimiter#x, partNum#x]


-- !query
SELECT substr('Spark SQL', 5)
-- !query analysis
Project [substr(Spark SQL, 5, 2147483647) AS substr(Spark SQL, 5, 2147483647)#x]
+- OneRowRelation


-- !query
SELECT substr('Spark SQL', -3)
-- !query analysis
Project [substr(Spark SQL, -3, 2147483647) AS substr(Spark SQL, -3, 2147483647)#x]
+- OneRowRelation


-- !query
SELECT substr('Spark SQL', 5, 1)
-- !query analysis
Project [substr(Spark SQL, 5, 1) AS substr(Spark SQL, 5, 1)#x]
+- OneRowRelation


-- !query
SELECT substr('Spark SQL' from 5)
-- !query analysis
Project [substring(Spark SQL, 5, 2147483647) AS substring(Spark SQL, 5, 2147483647)#x]
+- OneRowRelation


-- !query
SELECT substr('Spark SQL' from -3)
-- !query analysis
Project [substring(Spark SQL, -3, 2147483647) AS substring(Spark SQL, -3, 2147483647)#x]
+- OneRowRelation


-- !query
SELECT substr('Spark SQL' from 5 for 1)
-- !query analysis
Project [substring(Spark SQL, 5, 1) AS substring(Spark SQL, 5, 1)#x]
+- OneRowRelation


-- !query
SELECT substring('Spark SQL', 5)
-- !query analysis
Project [substring(Spark SQL, 5, 2147483647) AS substring(Spark SQL, 5, 2147483647)#x]
+- OneRowRelation


-- !query
SELECT substring('Spark SQL', -3)
-- !query analysis
Project [substring(Spark SQL, -3, 2147483647) AS substring(Spark SQL, -3, 2147483647)#x]
+- OneRowRelation


-- !query
SELECT substring('Spark SQL', 5, 1)
-- !query analysis
Project [substring(Spark SQL, 5, 1) AS substring(Spark SQL, 5, 1)#x]
+- OneRowRelation


-- !query
SELECT substring('Spark SQL' from 5)
-- !query analysis
Project [substring(Spark SQL, 5, 2147483647) AS substring(Spark SQL, 5, 2147483647)#x]
+- OneRowRelation


-- !query
SELECT substring('Spark SQL' from -3)
-- !query analysis
Project [substring(Spark SQL, -3, 2147483647) AS substring(Spark SQL, -3, 2147483647)#x]
+- OneRowRelation


-- !query
SELECT substring('Spark SQL' from 5 for 1)
-- !query analysis
Project [substring(Spark SQL, 5, 1) AS substring(Spark SQL, 5, 1)#x]
+- OneRowRelation


-- !query
SELECT trim(" xyz "), ltrim(" xyz "), rtrim(" xyz ")
-- !query analysis
Project [trim( xyz , None) AS trim( xyz )#x, ltrim( xyz , None) AS ltrim( xyz )#x, rtrim( xyz , None) AS rtrim( xyz )#x]
+- OneRowRelation


-- !query
SELECT trim(BOTH 'xyz' FROM 'yxTomxx'), trim('xyz' FROM 'yxTomxx')
-- !query analysis
Project [trim(yxTomxx, Some(xyz)) AS TRIM(BOTH xyz FROM yxTomxx)#x, trim(yxTomxx, Some(xyz)) AS TRIM(BOTH xyz FROM yxTomxx)#x]
+- OneRowRelation


-- !query
SELECT trim(BOTH 'x' FROM 'xxxbarxxx'), trim('x' FROM 'xxxbarxxx')
-- !query analysis
Project [trim(xxxbarxxx, Some(x)) AS TRIM(BOTH x FROM xxxbarxxx)#x, trim(xxxbarxxx, Some(x)) AS TRIM(BOTH x FROM xxxbarxxx)#x]
+- OneRowRelation


-- !query
SELECT trim(LEADING 'xyz' FROM 'zzzytest')
-- !query analysis
Project [ltrim(zzzytest, Some(xyz)) AS TRIM(LEADING xyz FROM zzzytest)#x]
+- OneRowRelation


-- !query
SELECT trim(LEADING 'xyz' FROM 'zzzytestxyz')
-- !query analysis
Project [ltrim(zzzytestxyz, Some(xyz)) AS TRIM(LEADING xyz FROM zzzytestxyz)#x]
+- OneRowRelation


-- !query
SELECT trim(LEADING 'xy' FROM 'xyxXxyLAST WORD')
-- !query analysis
Project [ltrim(xyxXxyLAST WORD, Some(xy)) AS TRIM(LEADING xy FROM xyxXxyLAST WORD)#x]
+- OneRowRelation


-- !query
SELECT trim(TRAILING 'xyz' FROM 'testxxzx')
-- !query analysis
Project [rtrim(testxxzx, Some(xyz)) AS TRIM(TRAILING xyz FROM testxxzx)#x]
+- OneRowRelation


-- !query
SELECT trim(TRAILING 'xyz' FROM 'xyztestxxzx')
-- !query analysis
Project [rtrim(xyztestxxzx, Some(xyz)) AS TRIM(TRAILING xyz FROM xyztestxxzx)#x]
+- OneRowRelation


-- !query
SELECT trim(TRAILING 'xy' FROM 'TURNERyxXxy')
-- !query analysis
Project [rtrim(TURNERyxXxy, Some(xy)) AS TRIM(TRAILING xy FROM TURNERyxXxy)#x]
+- OneRowRelation


-- !query
SELECT btrim('xyxtrimyyx', 'xy')
-- !query analysis
Project [btrim(xyxtrimyyx, xy) AS btrim(xyxtrimyyx, xy)#x]
+- OneRowRelation


-- !query
SELECT btrim(encode(" xyz ", 'utf-8'))
-- !query analysis
Project [btrim(encode( xyz , utf-8)) AS btrim(encode( xyz , utf-8))#x]
+- OneRowRelation


-- !query
SELECT btrim(encode('yxTomxx', 'utf-8'), encode('xyz', 'utf-8'))
-- !query analysis
Project [btrim(encode(yxTomxx, utf-8), encode(xyz, utf-8)) AS btrim(encode(yxTomxx, utf-8), encode(xyz, utf-8))#x]
+- OneRowRelation


-- !query
SELECT btrim(encode('xxxbarxxx', 'utf-8'), encode('x', 'utf-8'))
-- !query analysis
Project [btrim(encode(xxxbarxxx, utf-8), encode(x, utf-8)) AS btrim(encode(xxxbarxxx, utf-8), encode(x, utf-8))#x]
+- OneRowRelation


-- !query
SELECT lpad('hi', 'invalid_length')
-- !query analysis
Project [lpad(hi, cast(invalid_length as int),  ) AS lpad(hi, invalid_length,  )#x]
+- OneRowRelation


-- !query
SELECT rpad('hi', 'invalid_length')
-- !query analysis
Project [rpad(hi, cast(invalid_length as int),  ) AS rpad(hi, invalid_length,  )#x]
+- OneRowRelation


-- !query
SELECT hex(lpad(unhex(''), 5))
-- !query analysis
Project [hex(lpad(lpad, unhex(, false), 5, 0x00)) AS hex(lpad(unhex(), 5, X'00'))#x]
+- OneRowRelation


-- !query
SELECT hex(lpad(unhex('aabb'), 5))
-- !query analysis
Project [hex(lpad(lpad, unhex(aabb, false), 5, 0x00)) AS hex(lpad(unhex(aabb), 5, X'00'))#x]
+- OneRowRelation


-- !query
SELECT hex(lpad(unhex('aabbcc'), 2))
-- !query analysis
Project [hex(lpad(lpad, unhex(aabbcc, false), 2, 0x00)) AS hex(lpad(unhex(aabbcc), 2, X'00'))#x]
+- OneRowRelation


-- !query
SELECT hex(lpad(unhex('123'), 2))
-- !query analysis
Project [hex(lpad(lpad, unhex(123, false), 2, 0x00)) AS hex(lpad(unhex(123), 2, X'00'))#x]
+- OneRowRelation


-- !query
SELECT hex(lpad(unhex('12345'), 2))
-- !query analysis
Project [hex(lpad(lpad, unhex(12345, false), 2, 0x00)) AS hex(lpad(unhex(12345), 2, X'00'))#x]
+- OneRowRelation


-- !query
SELECT hex(lpad(unhex(''), 5, unhex('1f')))
-- !query analysis
Project [hex(lpad(lpad, unhex(, false), 5, unhex(1f, false))) AS hex(lpad(unhex(), 5, unhex(1f)))#x]
+- OneRowRelation


-- !query
SELECT hex(lpad(unhex('aa'), 5, unhex('1f')))
-- !query analysis
Project [hex(lpad(lpad, unhex(aa, false), 5, unhex(1f, false))) AS hex(lpad(unhex(aa), 5, unhex(1f)))#x]
+- OneRowRelation


-- !query
SELECT hex(lpad(unhex('aa'), 6, unhex('1f')))
-- !query analysis
Project [hex(lpad(lpad, unhex(aa, false), 6, unhex(1f, false))) AS hex(lpad(unhex(aa), 6, unhex(1f)))#x]
+- OneRowRelation


-- !query
SELECT hex(lpad(unhex(''), 5, unhex('1f2e')))
-- !query analysis
Project [hex(lpad(lpad, unhex(, false), 5, unhex(1f2e, false))) AS hex(lpad(unhex(), 5, unhex(1f2e)))#x]
+- OneRowRelation


-- !query
SELECT hex(lpad(unhex('aa'), 5, unhex('1f2e')))
-- !query analysis
Project [hex(lpad(lpad, unhex(aa, false), 5, unhex(1f2e, false))) AS hex(lpad(unhex(aa), 5, unhex(1f2e)))#x]
+- OneRowRelation


-- !query
SELECT hex(lpad(unhex('aa'), 6, unhex('1f2e')))
-- !query analysis
Project [hex(lpad(lpad, unhex(aa, false), 6, unhex(1f2e, false))) AS hex(lpad(unhex(aa), 6, unhex(1f2e)))#x]
+- OneRowRelation


-- !query
SELECT hex(lpad(unhex(''), 6, unhex('')))
-- !query analysis
Project [hex(lpad(lpad, unhex(, false), 6, unhex(, false))) AS hex(lpad(unhex(), 6, unhex()))#x]
+- OneRowRelation


-- !query
SELECT hex(lpad(unhex('aabbcc'), 6, unhex('')))
-- !query analysis
Project [hex(lpad(lpad, unhex(aabbcc, false), 6, unhex(, false))) AS hex(lpad(unhex(aabbcc), 6, unhex()))#x]
+- OneRowRelation


-- !query
SELECT hex(lpad(unhex('aabbcc'), 2, unhex('ff')))
-- !query analysis
Project [hex(lpad(lpad, unhex(aabbcc, false), 2, unhex(ff, false))) AS hex(lpad(unhex(aabbcc), 2, unhex(ff)))#x]
+- OneRowRelation


-- !query
SELECT hex(rpad(unhex(''), 5))
-- !query analysis
Project [hex(rpad(rpad, unhex(, false), 5, 0x00)) AS hex(rpad(unhex(), 5, X'00'))#x]
+- OneRowRelation


-- !query
SELECT hex(rpad(unhex('aabb'), 5))
-- !query analysis
Project [hex(rpad(rpad, unhex(aabb, false), 5, 0x00)) AS hex(rpad(unhex(aabb), 5, X'00'))#x]
+- OneRowRelation


-- !query
SELECT hex(rpad(unhex('aabbcc'), 2))
-- !query analysis
Project [hex(rpad(rpad, unhex(aabbcc, false), 2, 0x00)) AS hex(rpad(unhex(aabbcc), 2, X'00'))#x]
+- OneRowRelation


-- !query
SELECT hex(rpad(unhex('123'), 2))
-- !query analysis
Project [hex(rpad(rpad, unhex(123, false), 2, 0x00)) AS hex(rpad(unhex(123), 2, X'00'))#x]
+- OneRowRelation


-- !query
SELECT hex(rpad(unhex('12345'), 2))
-- !query analysis
Project [hex(rpad(rpad, unhex(12345, false), 2, 0x00)) AS hex(rpad(unhex(12345), 2, X'00'))#x]
+- OneRowRelation


-- !query
SELECT hex(rpad(unhex(''), 5, unhex('1f')))
-- !query analysis
Project [hex(rpad(rpad, unhex(, false), 5, unhex(1f, false))) AS hex(rpad(unhex(), 5, unhex(1f)))#x]
+- OneRowRelation


-- !query
SELECT hex(rpad(unhex('aa'), 5, unhex('1f')))
-- !query analysis
Project [hex(rpad(rpad, unhex(aa, false), 5, unhex(1f, false))) AS hex(rpad(unhex(aa), 5, unhex(1f)))#x]
+- OneRowRelation


-- !query
SELECT hex(rpad(unhex('aa'), 6, unhex('1f')))
-- !query analysis
Project [hex(rpad(rpad, unhex(aa, false), 6, unhex(1f, false))) AS hex(rpad(unhex(aa), 6, unhex(1f)))#x]
+- OneRowRelation


-- !query
SELECT hex(rpad(unhex(''), 5, unhex('1f2e')))
-- !query analysis
Project [hex(rpad(rpad, unhex(, false), 5, unhex(1f2e, false))) AS hex(rpad(unhex(), 5, unhex(1f2e)))#x]
+- OneRowRelation


-- !query
SELECT hex(rpad(unhex('aa'), 5, unhex('1f2e')))
-- !query analysis
Project [hex(rpad(rpad, unhex(aa, false), 5, unhex(1f2e, false))) AS hex(rpad(unhex(aa), 5, unhex(1f2e)))#x]
+- OneRowRelation


-- !query
SELECT hex(rpad(unhex('aa'), 6, unhex('1f2e')))
-- !query analysis
Project [hex(rpad(rpad, unhex(aa, false), 6, unhex(1f2e, false))) AS hex(rpad(unhex(aa), 6, unhex(1f2e)))#x]
+- OneRowRelation


-- !query
SELECT hex(rpad(unhex(''), 6, unhex('')))
-- !query analysis
Project [hex(rpad(rpad, unhex(, false), 6, unhex(, false))) AS hex(rpad(unhex(), 6, unhex()))#x]
+- OneRowRelation


-- !query
SELECT hex(rpad(unhex('aabbcc'), 6, unhex('')))
-- !query analysis
Project [hex(rpad(rpad, unhex(aabbcc, false), 6, unhex(, false))) AS hex(rpad(unhex(aabbcc), 6, unhex()))#x]
+- OneRowRelation


-- !query
SELECT hex(rpad(unhex('aabbcc'), 2, unhex('ff')))
-- !query analysis
Project [hex(rpad(rpad, unhex(aabbcc, false), 2, unhex(ff, false))) AS hex(rpad(unhex(aabbcc), 2, unhex(ff)))#x]
+- OneRowRelation


-- !query
SELECT lpad('abc', 5, x'57')
-- !query analysis
Project [lpad(abc, 5, cast(0x57 as string)) AS lpad(abc, 5, X'57')#x]
+- OneRowRelation


-- !query
SELECT lpad(x'57', 5, 'abc')
-- !query analysis
Project [lpad(cast(0x57 as string), 5, abc) AS lpad(X'57', 5, abc)#x]
+- OneRowRelation


-- !query
SELECT rpad('abc', 5, x'57')
-- !query analysis
Project [rpad(abc, 5, cast(0x57 as string)) AS rpad(abc, 5, X'57')#x]
+- OneRowRelation


-- !query
SELECT rpad(x'57', 5, 'abc')
-- !query analysis
Project [rpad(cast(0x57 as string), 5, abc) AS rpad(X'57', 5, abc)#x]
+- OneRowRelation


-- !query
set spark.sql.legacy.javaCharsets=true
-- !query analysis
SetCommand (spark.sql.legacy.javaCharsets,Some(true))


-- !query
select encode('hello', 'WINDOWS-1252')
-- !query analysis
Project [encode(hello, WINDOWS-1252) AS encode(hello, WINDOWS-1252)#x]
+- OneRowRelation


-- !query
select encode(scol, ecol) from values('hello', 'WINDOWS-1252') as t(scol, ecol)
-- !query analysis
Project [encode(scol#x, ecol#x) AS encode(scol, ecol)#x]
+- SubqueryAlias t
   +- LocalRelation [scol#x, ecol#x]


-- !query
set spark.sql.legacy.javaCharsets=false
-- !query analysis
SetCommand (spark.sql.legacy.javaCharsets,Some(false))


-- !query
select encode('hello', 'WINDOWS-1252')
-- !query analysis
Project [encode(hello, WINDOWS-1252) AS encode(hello, WINDOWS-1252)#x]
+- OneRowRelation


-- !query
select encode(scol, ecol) from values('hello', 'WINDOWS-1252') as t(scol, ecol)
-- !query analysis
Project [encode(scol#x, ecol#x) AS encode(scol, ecol)#x]
+- SubqueryAlias t
   +- LocalRelation [scol#x, ecol#x]


-- !query
select encode('hello', 'Windows-xxx')
-- !query analysis
Project [encode(hello, Windows-xxx) AS encode(hello, Windows-xxx)#x]
+- OneRowRelation


-- !query
select encode(scol, ecol) from values('hello', 'Windows-xxx') as t(scol, ecol)
-- !query analysis
Project [encode(scol#x, ecol#x) AS encode(scol, ecol)#x]
+- SubqueryAlias t
   +- LocalRelation [scol#x, ecol#x]


-- !query
set spark.sql.legacy.codingErrorAction=true
-- !query analysis
SetCommand (spark.sql.legacy.codingErrorAction,Some(true))


-- !query
select encode('渭城朝雨浥轻尘', 'US-ASCII')
-- !query analysis
Project [encode(渭城朝雨浥轻尘, US-ASCII) AS encode(渭城朝雨浥轻尘, US-ASCII)#x]
+- OneRowRelation


-- !query
select encode(scol, ecol) from values('渭城朝雨浥轻尘', 'US-ASCII') as t(scol, ecol)
-- !query analysis
Project [encode(scol#x, ecol#x) AS encode(scol, ecol)#x]
+- SubqueryAlias t
   +- LocalRelation [scol#x, ecol#x]


-- !query
set spark.sql.legacy.codingErrorAction=false
-- !query analysis
SetCommand (spark.sql.legacy.codingErrorAction,Some(false))


-- !query
select encode('客舍青青柳色新', 'US-ASCII')
-- !query analysis
Project [encode(客舍青青柳色新, US-ASCII) AS encode(客舍青青柳色新, US-ASCII)#x]
+- OneRowRelation


-- !query
select encode(scol, ecol) from values('客舍青青柳色新', 'US-ASCII') as t(scol, ecol)
-- !query analysis
Project [encode(scol#x, ecol#x) AS encode(scol, ecol)#x]
+- SubqueryAlias t
   +- LocalRelation [scol#x, ecol#x]


-- !query
select encode(decode(encode('白日依山尽，黄河入海流。欲穷千里目，更上一层楼。', 'UTF-16'), 'UTF-16'), 'UTF-8')
-- !query analysis
Project [encode(decode(encode(白日依山尽，黄河入海流。欲穷千里目，更上一层楼。, UTF-16), UTF-16), UTF-8) AS encode(decode(encode(白日依山尽，黄河入海流。欲穷千里目，更上一层楼。, UTF-16), UTF-16), UTF-8)#x]
+- OneRowRelation


-- !query
select encode(decode(encode('南山經之首曰䧿山。其首曰招搖之山，臨於西海之上。', 'UTF-16'), 'UTF-16'), 'UTF-8')
-- !query analysis
Project [encode(decode(encode(南山經之首曰䧿山。其首曰招搖之山，臨於西海之上。, UTF-16), UTF-16), UTF-8) AS encode(decode(encode(南山經之首曰䧿山。其首曰招搖之山，臨於西海之上。, UTF-16), UTF-16), UTF-8)#x]
+- OneRowRelation


-- !query
select encode(decode(encode('세계에서 가장 인기 있는 빅데이터 처리 프레임워크인 Spark', 'UTF-16'), 'UTF-16'), 'UTF-8')
-- !query analysis
Project [encode(decode(encode(세계에서 가장 인기 있는 빅데이터 처리 프레임워크인 Spark, UTF-16), UTF-16), UTF-8) AS encode(decode(encode(세계에서 가장 인기 있는 빅데이터 처리 프레임워크인 Spark, UTF-16), UTF-16), UTF-8)#x]
+- OneRowRelation


-- !query
select encode(decode(encode('το Spark είναι το πιο δημοφιλές πλαίσιο επεξεργασίας μεγάλων δεδομένων παγκοσμίως', 'UTF-16'), 'UTF-16'), 'UTF-8')
-- !query analysis
Project [encode(decode(encode(το Spark είναι το πιο δημοφιλές πλαίσιο επεξεργασίας μεγάλων δεδομένων παγκοσμίως, UTF-16), UTF-16), UTF-8) AS encode(decode(encode(το Spark είναι το πιο δημοφιλές πλαίσιο επεξεργασίας μεγάλων δεδομένων παγκοσμίως, UTF-16), UTF-16), UTF-8)#x]
+- OneRowRelation


-- !query
select encode(decode(encode('Sparkは世界で最も人気のあるビッグデータ処理フレームワークである。', 'UTF-16'), 'UTF-16'), 'UTF-8')
-- !query analysis
Project [encode(decode(encode(Sparkは世界で最も人気のあるビッグデータ処理フレームワークである。, UTF-16), UTF-16), UTF-8) AS encode(decode(encode(Sparkは世界で最も人気のあるビッグデータ処理フレームワークである。, UTF-16), UTF-16), UTF-8)#x]
+- OneRowRelation


-- !query
select decode()
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "WRONG_NUM_ARGS.WITHOUT_SUGGESTION",
  "sqlState" : "42605",
  "messageParameters" : {
    "actualNum" : "0",
    "docroot" : "https://spark.apache.org/docs/latest",
    "expectedNum" : "2",
    "functionName" : "`decode`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 15,
    "fragment" : "decode()"
  } ]
}


-- !query
select decode(encode('abc', 'utf-8'))
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "WRONG_NUM_ARGS.WITHOUT_SUGGESTION",
  "sqlState" : "42605",
  "messageParameters" : {
    "actualNum" : "1",
    "docroot" : "https://spark.apache.org/docs/latest",
    "expectedNum" : "2",
    "functionName" : "`decode`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 37,
    "fragment" : "decode(encode('abc', 'utf-8'))"
  } ]
}


-- !query
select decode(encode('abc', 'utf-8'), 'utf-8')
-- !query analysis
Project [decode(encode(abc, utf-8), utf-8) AS decode(encode(abc, utf-8), utf-8)#x]
+- OneRowRelation


-- !query
select decode(encode('大千世界', 'utf-32'), 'utf-32')
-- !query analysis
Project [decode(encode(大千世界, utf-32), utf-32) AS decode(encode(大千世界, utf-32), utf-32)#x]
+- OneRowRelation


-- !query
select decode(1, 1, 'Southlake')
-- !query analysis
Project [decode(1, 1, Southlake) AS decode(1, 1, Southlake)#x]
+- OneRowRelation


-- !query
select decode(2, 1, 'Southlake')
-- !query analysis
Project [decode(2, 1, Southlake) AS decode(2, 1, Southlake)#x]
+- OneRowRelation


-- !query
select decode(2, 1, 'Southlake', 2, 'San Francisco', 3, 'New Jersey', 4, 'Seattle', 'Non domestic')
-- !query analysis
Project [decode(2, 1, Southlake, 2, San Francisco, 3, New Jersey, 4, Seattle, Non domestic) AS decode(2, 1, Southlake, 2, San Francisco, 3, New Jersey, 4, Seattle, Non domestic)#x]
+- OneRowRelation


-- !query
select decode(6, 1, 'Southlake', 2, 'San Francisco', 3, 'New Jersey', 4, 'Seattle', 'Non domestic')
-- !query analysis
Project [decode(6, 1, Southlake, 2, San Francisco, 3, New Jersey, 4, Seattle, Non domestic) AS decode(6, 1, Southlake, 2, San Francisco, 3, New Jersey, 4, Seattle, Non domestic)#x]
+- OneRowRelation


-- !query
select decode(6, 1, 'Southlake', 2, 'San Francisco', 3, 'New Jersey', 4, 'Seattle')
-- !query analysis
Project [decode(6, 1, Southlake, 2, San Francisco, 3, New Jersey, 4, Seattle) AS decode(6, 1, Southlake, 2, San Francisco, 3, New Jersey, 4, Seattle)#x]
+- OneRowRelation


-- !query
select decode(null, 6, 'Spark', NULL, 'SQL', 4, 'rocks')
-- !query analysis
Project [decode(null, 6, Spark, null, SQL, 4, rocks) AS decode(NULL, 6, Spark, NULL, SQL, 4, rocks)#x]
+- OneRowRelation


-- !query
select decode(null, 6, 'Spark', NULL, 'SQL', 4, 'rocks', NULL, '.')
-- !query analysis
Project [decode(null, 6, Spark, null, SQL, 4, rocks, null, .) AS decode(NULL, 6, Spark, NULL, SQL, 4, rocks, NULL, .)#x]
+- OneRowRelation


-- !query
select decode(X'68656c6c6f', 'Windows-xxx')
-- !query analysis
Project [decode(0x68656C6C6F, Windows-xxx) AS decode(X'68656C6C6F', Windows-xxx)#x]
+- OneRowRelation


-- !query
select decode(scol, ecol) from values(X'68656c6c6f', 'Windows-xxx') as t(scol, ecol)
-- !query analysis
Project [decode(scol#x, ecol#x) AS decode(scol, ecol)#x]
+- SubqueryAlias t
   +- LocalRelation [scol#x, ecol#x]


-- !query
set spark.sql.legacy.javaCharsets=true
-- !query analysis
SetCommand (spark.sql.legacy.javaCharsets,Some(true))


-- !query
select decode(X'68656c6c6f', 'WINDOWS-1252')
-- !query analysis
Project [decode(0x68656C6C6F, WINDOWS-1252) AS decode(X'68656C6C6F', WINDOWS-1252)#x]
+- OneRowRelation


-- !query
select decode(scol, ecol) from values(X'68656c6c6f', 'WINDOWS-1252') as t(scol, ecol)
-- !query analysis
Project [decode(scol#x, ecol#x) AS decode(scol, ecol)#x]
+- SubqueryAlias t
   +- LocalRelation [scol#x, ecol#x]


-- !query
set spark.sql.legacy.javaCharsets=false
-- !query analysis
SetCommand (spark.sql.legacy.javaCharsets,Some(false))


-- !query
select decode(X'68656c6c6f', 'WINDOWS-1252')
-- !query analysis
Project [decode(0x68656C6C6F, WINDOWS-1252) AS decode(X'68656C6C6F', WINDOWS-1252)#x]
+- OneRowRelation


-- !query
select decode(scol, ecol) from values(X'68656c6c6f', 'WINDOWS-1252') as t(scol, ecol)
-- !query analysis
Project [decode(scol#x, ecol#x) AS decode(scol, ecol)#x]
+- SubqueryAlias t
   +- LocalRelation [scol#x, ecol#x]


-- !query
set spark.sql.legacy.codingErrorAction=true
-- !query analysis
SetCommand (spark.sql.legacy.codingErrorAction,Some(true))


-- !query
select decode(X'E58A9DE5909BE69BB4E5B0BDE4B880E69DAFE98592', 'US-ASCII')
-- !query analysis
Project [decode(0xE58A9DE5909BE69BB4E5B0BDE4B880E69DAFE98592, US-ASCII) AS decode(X'E58A9DE5909BE69BB4E5B0BDE4B880E69DAFE98592', US-ASCII)#x]
+- OneRowRelation


-- !query
select decode(scol, ecol) from values(X'E58A9DE5909BE69BB4E5B0BDE4B880E69DAFE98592', 'US-ASCII') as t(scol, ecol)
-- !query analysis
Project [decode(scol#x, ecol#x) AS decode(scol, ecol)#x]
+- SubqueryAlias t
   +- LocalRelation [scol#x, ecol#x]


-- !query
set spark.sql.legacy.codingErrorAction=false
-- !query analysis
SetCommand (spark.sql.legacy.codingErrorAction,Some(false))


-- !query
select decode(X'E8A5BFE587BAE998B3E585B3E697A0E69585E4BABA', 'US-ASCII')
-- !query analysis
Project [decode(0xE8A5BFE587BAE998B3E585B3E697A0E69585E4BABA, US-ASCII) AS decode(X'E8A5BFE587BAE998B3E585B3E697A0E69585E4BABA', US-ASCII)#x]
+- OneRowRelation


-- !query
select decode(scol, ecol) from values(X'E8A5BFE587BAE998B3E585B3E697A0E69585E4BABA', 'US-ASCII') as t(scol, ecol)
-- !query analysis
Project [decode(scol#x, ecol#x) AS decode(scol, ecol)#x]
+- SubqueryAlias t
   +- LocalRelation [scol#x, ecol#x]


-- !query
SELECT CONTAINS(null, 'Spark')
-- !query analysis
Project [Contains(cast(null as string), Spark) AS contains(NULL, Spark)#x]
+- OneRowRelation


-- !query
SELECT CONTAINS('Spark SQL', null)
-- !query analysis
Project [Contains(Spark SQL, cast(null as string)) AS contains(Spark SQL, NULL)#x]
+- OneRowRelation


-- !query
SELECT CONTAINS(null, null)
-- !query analysis
Project [Contains(cast(null as string), cast(null as string)) AS contains(NULL, NULL)#x]
+- OneRowRelation


-- !query
SELECT CONTAINS('Spark SQL', 'Spark')
-- !query analysis
Project [Contains(Spark SQL, Spark) AS contains(Spark SQL, Spark)#x]
+- OneRowRelation


-- !query
SELECT CONTAINS('Spark SQL', 'SQL')
-- !query analysis
Project [Contains(Spark SQL, SQL) AS contains(Spark SQL, SQL)#x]
+- OneRowRelation


-- !query
SELECT CONTAINS('Spark SQL', 'SPARK')
-- !query analysis
Project [Contains(Spark SQL, SPARK) AS contains(Spark SQL, SPARK)#x]
+- OneRowRelation


-- !query
SELECT startswith('Spark SQL', 'ark')
-- !query analysis
Project [StartsWith(Spark SQL, ark) AS startswith(Spark SQL, ark)#x]
+- OneRowRelation


-- !query
SELECT startswith('Spark SQL', 'Spa')
-- !query analysis
Project [StartsWith(Spark SQL, Spa) AS startswith(Spark SQL, Spa)#x]
+- OneRowRelation


-- !query
SELECT startswith(null, 'Spark')
-- !query analysis
Project [StartsWith(cast(null as string), Spark) AS startswith(NULL, Spark)#x]
+- OneRowRelation


-- !query
SELECT startswith('Spark', null)
-- !query analysis
Project [StartsWith(Spark, cast(null as string)) AS startswith(Spark, NULL)#x]
+- OneRowRelation


-- !query
SELECT startswith(null, null)
-- !query analysis
Project [StartsWith(cast(null as string), cast(null as string)) AS startswith(NULL, NULL)#x]
+- OneRowRelation


-- !query
SELECT endswith('Spark SQL', 'QL')
-- !query analysis
Project [EndsWith(Spark SQL, QL) AS endswith(Spark SQL, QL)#x]
+- OneRowRelation


-- !query
SELECT endswith('Spark SQL', 'Spa')
-- !query analysis
Project [EndsWith(Spark SQL, Spa) AS endswith(Spark SQL, Spa)#x]
+- OneRowRelation


-- !query
SELECT endswith(null, 'Spark')
-- !query analysis
Project [EndsWith(cast(null as string), Spark) AS endswith(NULL, Spark)#x]
+- OneRowRelation


-- !query
SELECT endswith('Spark', null)
-- !query analysis
Project [EndsWith(Spark, cast(null as string)) AS endswith(Spark, NULL)#x]
+- OneRowRelation


-- !query
SELECT endswith(null, null)
-- !query analysis
Project [EndsWith(cast(null as string), cast(null as string)) AS endswith(NULL, NULL)#x]
+- OneRowRelation


-- !query
SELECT contains(x'537061726b2053514c', x'537061726b')
-- !query analysis
Project [contains(contains, 0x537061726B2053514C, 0x537061726B) AS contains(X'537061726B2053514C', X'537061726B')#x]
+- OneRowRelation


-- !query
SELECT contains(x'', x'')
-- !query analysis
Project [contains(contains, 0x, 0x) AS contains(X'', X'')#x]
+- OneRowRelation


-- !query
SELECT contains(x'537061726b2053514c', null)
-- !query analysis
Project [Contains(cast(0x537061726B2053514C as string), cast(null as string)) AS contains(X'537061726B2053514C', NULL)#x]
+- OneRowRelation


-- !query
SELECT contains(12, '1')
-- !query analysis
Project [Contains(cast(12 as string), 1) AS contains(12, 1)#x]
+- OneRowRelation


-- !query
SELECT contains(true, 'ru')
-- !query analysis
Project [Contains(cast(true as string), ru) AS contains(true, ru)#x]
+- OneRowRelation


-- !query
SELECT contains(x'12', 12)
-- !query analysis
Project [Contains(cast(0x12 as string), cast(12 as string)) AS contains(X'12', 12)#x]
+- OneRowRelation


-- !query
SELECT contains(true, false)
-- !query analysis
Project [Contains(cast(true as string), cast(false as string)) AS contains(true, false)#x]
+- OneRowRelation


-- !query
SELECT startswith(x'537061726b2053514c', x'537061726b')
-- !query analysis
Project [startswith(startswith, 0x537061726B2053514C, 0x537061726B) AS startswith(X'537061726B2053514C', X'537061726B')#x]
+- OneRowRelation


-- !query
SELECT startswith(x'537061726b2053514c', x'')
-- !query analysis
Project [startswith(startswith, 0x537061726B2053514C, 0x) AS startswith(X'537061726B2053514C', X'')#x]
+- OneRowRelation


-- !query
SELECT startswith(x'', x'')
-- !query analysis
Project [startswith(startswith, 0x, 0x) AS startswith(X'', X'')#x]
+- OneRowRelation


-- !query
SELECT startswith(x'537061726b2053514c', null)
-- !query analysis
Project [StartsWith(cast(0x537061726B2053514C as string), cast(null as string)) AS startswith(X'537061726B2053514C', NULL)#x]
+- OneRowRelation


-- !query
SELECT endswith(x'537061726b2053514c', x'53516c')
-- !query analysis
Project [endswith(endswith, 0x537061726B2053514C, 0x53516C) AS endswith(X'537061726B2053514C', X'53516C')#x]
+- OneRowRelation


-- !query
SELECT endsWith(x'537061726b2053514c', x'537061726b')
-- !query analysis
Project [endswith(endswith, 0x537061726B2053514C, 0x537061726B) AS endswith(X'537061726B2053514C', X'537061726B')#x]
+- OneRowRelation


-- !query
SELECT endsWith(x'537061726b2053514c', x'')
-- !query analysis
Project [endswith(endswith, 0x537061726B2053514C, 0x) AS endswith(X'537061726B2053514C', X'')#x]
+- OneRowRelation


-- !query
SELECT endsWith(x'', x'')
-- !query analysis
Project [endswith(endswith, 0x, 0x) AS endswith(X'', X'')#x]
+- OneRowRelation


-- !query
SELECT endsWith(x'537061726b2053514c', null)
-- !query analysis
Project [EndsWith(cast(0x537061726B2053514C as string), cast(null as string)) AS endswith(X'537061726B2053514C', NULL)#x]
+- OneRowRelation


-- !query
select to_number('454', '000')
-- !query analysis
Project [to_number(454, 000) AS to_number(454, 000)#x]
+- OneRowRelation


-- !query
select to_number('454.2', '000.0')
-- !query analysis
Project [to_number(454.2, 000.0) AS to_number(454.2, 000.0)#x]
+- OneRowRelation


-- !query
select to_number('12,454', '00,000')
-- !query analysis
Project [to_number(12,454, 00,000) AS to_number(12,454, 00,000)#x]
+- OneRowRelation


-- !query
select to_number('$78.12', '$00.00')
-- !query analysis
Project [to_number($78.12, $00.00) AS to_number($78.12, $00.00)#x]
+- OneRowRelation


-- !query
select to_number('+454', 'S000')
-- !query analysis
Project [to_number(+454, S000) AS to_number(+454, S000)#x]
+- OneRowRelation


-- !query
select to_number('-454', 'S000')
-- !query analysis
Project [to_number(-454, S000) AS to_number(-454, S000)#x]
+- OneRowRelation


-- !query
select to_number('12,454.8-', '00,000.9MI')
-- !query analysis
Project [to_number(12,454.8-, 00,000.9MI) AS to_number(12,454.8-, 00,000.9MI)#x]
+- OneRowRelation


-- !query
select to_number('00,454.8-', '00,000.9MI')
-- !query analysis
Project [to_number(00,454.8-, 00,000.9MI) AS to_number(00,454.8-, 00,000.9MI)#x]
+- OneRowRelation


-- !query
select to_number('<00,454.8>', '00,000.9PR')
-- !query analysis
Project [to_number(<00,454.8>, 00,000.9PR) AS to_number(<00,454.8>, 00,000.9PR)#x]
+- OneRowRelation


-- !query
select to_binary('', 'base64')
-- !query analysis
Project [to_binary(, Some(base64), false) AS to_binary(, base64)#x]
+- OneRowRelation


-- !query
select to_binary('  ', 'base64')
-- !query analysis
Project [to_binary(  , Some(base64), false) AS to_binary(  , base64)#x]
+- OneRowRelation


-- !query
select to_binary(' ab cd ', 'base64')
-- !query analysis
Project [to_binary( ab cd , Some(base64), false) AS to_binary( ab cd , base64)#x]
+- OneRowRelation


-- !query
select to_binary(' ab c=', 'base64')
-- !query analysis
Project [to_binary( ab c=, Some(base64), false) AS to_binary( ab c=, base64)#x]
+- OneRowRelation


-- !query
select to_binary(' ab cdef= = ', 'base64')
-- !query analysis
Project [to_binary( ab cdef= = , Some(base64), false) AS to_binary( ab cdef= = , base64)#x]
+- OneRowRelation


-- !query
select to_binary(
  concat(' b25lIHR3byB0aHJlZSBmb3VyIGZpdmUgc2l4IHNldmVuIGVpZ2h0IG5pbmUgdGVuIGVsZXZlbiB0',
         'd2VsdmUgdGhpcnRlZW4gZm91cnRlZW4gZml2dGVlbiBzaXh0ZWVuIHNldmVudGVlbiBlaWdodGVl'), 'base64')
-- !query analysis
Project [to_binary(concat( b25lIHR3byB0aHJlZSBmb3VyIGZpdmUgc2l4IHNldmVuIGVpZ2h0IG5pbmUgdGVuIGVsZXZlbiB0, d2VsdmUgdGhpcnRlZW4gZm91cnRlZW4gZml2dGVlbiBzaXh0ZWVuIHNldmVudGVlbiBlaWdodGVl), Some(base64), false) AS to_binary(concat( b25lIHR3byB0aHJlZSBmb3VyIGZpdmUgc2l4IHNldmVuIGVpZ2h0IG5pbmUgdGVuIGVsZXZlbiB0, d2VsdmUgdGhpcnRlZW4gZm91cnRlZW4gZml2dGVlbiBzaXh0ZWVuIHNldmVudGVlbiBlaWdodGVl), base64)#x]
+- OneRowRelation


-- !query
select to_binary('a', 'base64')
-- !query analysis
Project [to_binary(a, Some(base64), false) AS to_binary(a, base64)#x]
+- OneRowRelation


-- !query
select to_binary('a?', 'base64')
-- !query analysis
Project [to_binary(a?, Some(base64), false) AS to_binary(a?, base64)#x]
+- OneRowRelation


-- !query
select to_binary('abcde', 'base64')
-- !query analysis
Project [to_binary(abcde, Some(base64), false) AS to_binary(abcde, base64)#x]
+- OneRowRelation


-- !query
select to_binary('abcd=', 'base64')
-- !query analysis
Project [to_binary(abcd=, Some(base64), false) AS to_binary(abcd=, base64)#x]
+- OneRowRelation


-- !query
select to_binary('a===', 'base64')
-- !query analysis
Project [to_binary(a===, Some(base64), false) AS to_binary(a===, base64)#x]
+- OneRowRelation


-- !query
select to_binary('ab==f', 'base64')
-- !query analysis
Project [to_binary(ab==f, Some(base64), false) AS to_binary(ab==f, base64)#x]
+- OneRowRelation


-- !query
select to_binary(
  '∮ E⋅da = Q,  n → ∞, ∑ f(i) = ∏ g(i), ∀x∈ℝ: ⌈x⌉ = −⌊−x⌋, α ∧ ¬β = ¬(¬α ∨ β)', 'utf-8')
-- !query analysis
Project [to_binary(∮ E⋅da = Q,  n → ∞, ∑ f(i) = ∏ g(i), ∀x∈ℝ: ⌈x⌉ = −⌊−x⌋, α ∧ ¬β = ¬(¬α ∨ β), Some(utf-8), false) AS to_binary(∮ E⋅da = Q,  n → ∞, ∑ f(i) = ∏ g(i), ∀x∈ℝ: ⌈x⌉ = −⌊−x⌋, α ∧ ¬β = ¬(¬α ∨ β), utf-8)#x]
+- OneRowRelation


-- !query
select to_binary('大千世界', 'utf8')
-- !query analysis
Project [to_binary(大千世界, Some(utf8), false) AS to_binary(大千世界, utf8)#x]
+- OneRowRelation


-- !query
select to_binary('', 'utf-8')
-- !query analysis
Project [to_binary(, Some(utf-8), false) AS to_binary(, utf-8)#x]
+- OneRowRelation


-- !query
select to_binary('  ', 'utf8')
-- !query analysis
Project [to_binary(  , Some(utf8), false) AS to_binary(  , utf8)#x]
+- OneRowRelation


-- !query
select to_binary('737472696E67')
-- !query analysis
Project [to_binary(737472696E67, None, false) AS to_binary(737472696E67)#x]
+- OneRowRelation


-- !query
select to_binary('737472696E67', 'hex')
-- !query analysis
Project [to_binary(737472696E67, Some(hex), false) AS to_binary(737472696E67, hex)#x]
+- OneRowRelation


-- !query
select to_binary('')
-- !query analysis
Project [to_binary(, None, false) AS to_binary()#x]
+- OneRowRelation


-- !query
select to_binary('1', 'hex')
-- !query analysis
Project [to_binary(1, Some(hex), false) AS to_binary(1, hex)#x]
+- OneRowRelation


-- !query
select to_binary('FF')
-- !query analysis
Project [to_binary(FF, None, false) AS to_binary(FF)#x]
+- OneRowRelation


-- !query
select to_binary('123', 'hex')
-- !query analysis
Project [to_binary(123, Some(hex), false) AS to_binary(123, hex)#x]
+- OneRowRelation


-- !query
select to_binary('12345', 'hex')
-- !query analysis
Project [to_binary(12345, Some(hex), false) AS to_binary(12345, hex)#x]
+- OneRowRelation


-- !query
select to_binary('GG')
-- !query analysis
Project [to_binary(GG, None, false) AS to_binary(GG)#x]
+- OneRowRelation


-- !query
select to_binary('01 AF', 'hex')
-- !query analysis
Project [to_binary(01 AF, Some(hex), false) AS to_binary(01 AF, hex)#x]
+- OneRowRelation


-- !query
select to_binary('abc', concat('utf', '-8'))
-- !query analysis
Project [to_binary(abc, Some(concat(utf, -8)), false) AS to_binary(abc, concat(utf, -8))#x]
+- OneRowRelation


-- !query
select to_binary(' ab cdef= = ', substr('base64whynot', 0, 6))
-- !query analysis
Project [to_binary( ab cdef= = , Some(substr(base64whynot, 0, 6)), false) AS to_binary( ab cdef= = , substr(base64whynot, 0, 6))#x]
+- OneRowRelation


-- !query
select to_binary(' ab cdef= = ', replace('HEX0', '0'))
-- !query analysis
Project [to_binary( ab cdef= = , Some(replace(HEX0, 0, )), false) AS to_binary( ab cdef= = , replace(HEX0, 0, ))#x]
+- OneRowRelation


-- !query
select to_binary('abc', 'Hex')
-- !query analysis
Project [to_binary(abc, Some(Hex), false) AS to_binary(abc, Hex)#x]
+- OneRowRelation


-- !query
select to_binary('abc', null)
-- !query analysis
Project [to_binary(abc, Some(cast(null as string)), false) AS to_binary(abc, NULL)#x]
+- OneRowRelation


-- !query
select to_binary(null, 'utf-8')
-- !query analysis
Project [to_binary(cast(null as string), Some(utf-8), false) AS to_binary(NULL, utf-8)#x]
+- OneRowRelation


-- !query
select to_binary(null, null)
-- !query analysis
Project [to_binary(cast(null as string), Some(cast(null as string)), false) AS to_binary(NULL, NULL)#x]
+- OneRowRelation


-- !query
select to_binary(null, cast(null as string))
-- !query analysis
Project [to_binary(cast(null as string), Some(cast(null as string)), false) AS to_binary(NULL, CAST(NULL AS STRING))#x]
+- OneRowRelation


-- !query
select to_binary('abc', 1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.INVALID_ARG_VALUE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputName" : "fmt",
    "inputValue" : "'1'",
    "requireType" : "case-insensitive \"STRING\"",
    "sqlExpr" : "\"to_binary(abc, 1)\"",
    "validValues" : "'hex', 'utf-8', 'utf8', or 'base64'"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 26,
    "fragment" : "to_binary('abc', 1)"
  } ]
}


-- !query
select to_binary('abc', 'invalidFormat')
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.INVALID_ARG_VALUE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputName" : "fmt",
    "inputValue" : "'invalidformat'",
    "requireType" : "case-insensitive \"STRING\"",
    "sqlExpr" : "\"to_binary(abc, invalidFormat)\"",
    "validValues" : "'hex', 'utf-8', 'utf8', or 'base64'"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 40,
    "fragment" : "to_binary('abc', 'invalidFormat')"
  } ]
}


-- !query
CREATE TEMPORARY VIEW fmtTable(fmtField) AS SELECT * FROM VALUES ('invalidFormat')
-- !query analysis
CreateViewCommand `fmtTable`, [(fmtField,None)], SELECT * FROM VALUES ('invalidFormat'), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [col1#x]
      +- LocalRelation [col1#x]


-- !query
SELECT to_binary('abc', fmtField) FROM fmtTable
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.NON_FOLDABLE_INPUT",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputExpr" : "\"fmtField\"",
    "inputName" : "`fmt`",
    "inputType" : "\"STRING\"",
    "sqlExpr" : "\"to_binary(abc, fmtField)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 33,
    "fragment" : "to_binary('abc', fmtField)"
  } ]
}


-- !query
DROP VIEW IF EXISTS fmtTable
-- !query analysis
DropTempViewCommand fmtTable


-- !query
select luhn_check('4111111111111111')
-- !query analysis
Project [luhn_check(4111111111111111) AS luhn_check(4111111111111111)#x]
+- OneRowRelation


-- !query
select luhn_check('5500000000000004')
-- !query analysis
Project [luhn_check(5500000000000004) AS luhn_check(5500000000000004)#x]
+- OneRowRelation


-- !query
select luhn_check('340000000000009')
-- !query analysis
Project [luhn_check(340000000000009) AS luhn_check(340000000000009)#x]
+- OneRowRelation


-- !query
select luhn_check('6011000000000004')
-- !query analysis
Project [luhn_check(6011000000000004) AS luhn_check(6011000000000004)#x]
+- OneRowRelation


-- !query
select luhn_check('6011000000000005')
-- !query analysis
Project [luhn_check(6011000000000005) AS luhn_check(6011000000000005)#x]
+- OneRowRelation


-- !query
select luhn_check('378282246310006')
-- !query analysis
Project [luhn_check(378282246310006) AS luhn_check(378282246310006)#x]
+- OneRowRelation


-- !query
select luhn_check('0')
-- !query analysis
Project [luhn_check(0) AS luhn_check(0)#x]
+- OneRowRelation


-- !query
select luhn_check('4111111111111111    ')
-- !query analysis
Project [luhn_check(4111111111111111    ) AS luhn_check(4111111111111111    )#x]
+- OneRowRelation


-- !query
select luhn_check('4111111 111111111')
-- !query analysis
Project [luhn_check(4111111 111111111) AS luhn_check(4111111 111111111)#x]
+- OneRowRelation


-- !query
select luhn_check(' 4111111111111111')
-- !query analysis
Project [luhn_check( 4111111111111111) AS luhn_check( 4111111111111111)#x]
+- OneRowRelation


-- !query
select luhn_check('')
-- !query analysis
Project [luhn_check() AS luhn_check()#x]
+- OneRowRelation


-- !query
select luhn_check('  ')
-- !query analysis
Project [luhn_check(  ) AS luhn_check(  )#x]
+- OneRowRelation


-- !query
select luhn_check('510B105105105106')
-- !query analysis
Project [luhn_check(510B105105105106) AS luhn_check(510B105105105106)#x]
+- OneRowRelation


-- !query
select luhn_check('ABCDED')
-- !query analysis
Project [luhn_check(ABCDED) AS luhn_check(ABCDED)#x]
+- OneRowRelation


-- !query
select luhn_check(null)
-- !query analysis
Project [luhn_check(cast(null as string)) AS luhn_check(NULL)#x]
+- OneRowRelation


-- !query
select luhn_check(6011111111111117)
-- !query analysis
Project [luhn_check(cast(6011111111111117 as string)) AS luhn_check(6011111111111117)#x]
+- OneRowRelation


-- !query
select luhn_check(6011111111111118)
-- !query analysis
Project [luhn_check(cast(6011111111111118 as string)) AS luhn_check(6011111111111118)#x]
+- OneRowRelation


-- !query
select luhn_check(123.456)
-- !query analysis
Project [luhn_check(cast(123.456 as string)) AS luhn_check(123.456)#x]
+- OneRowRelation


-- !query
select is_valid_utf8('')
-- !query analysis
Project [is_valid_utf8() AS is_valid_utf8()#x]
+- OneRowRelation


-- !query
select is_valid_utf8('abc')
-- !query analysis
Project [is_valid_utf8(abc) AS is_valid_utf8(abc)#x]
+- OneRowRelation


-- !query
select is_valid_utf8(x'80')
-- !query analysis
Project [is_valid_utf8(cast(0x80 as string)) AS is_valid_utf8(X'80')#x]
+- OneRowRelation


-- !query
select make_valid_utf8('')
-- !query analysis
Project [make_valid_utf8() AS make_valid_utf8()#x]
+- OneRowRelation


-- !query
select make_valid_utf8('abc')
-- !query analysis
Project [make_valid_utf8(abc) AS make_valid_utf8(abc)#x]
+- OneRowRelation


-- !query
select make_valid_utf8(x'80')
-- !query analysis
Project [make_valid_utf8(cast(0x80 as string)) AS make_valid_utf8(X'80')#x]
+- OneRowRelation


-- !query
select validate_utf8('')
-- !query analysis
Project [validate_utf8() AS validate_utf8()#x]
+- OneRowRelation


-- !query
select validate_utf8('abc')
-- !query analysis
Project [validate_utf8(abc) AS validate_utf8(abc)#x]
+- OneRowRelation


-- !query
select validate_utf8(x'80')
-- !query analysis
Project [validate_utf8(cast(0x80 as string)) AS validate_utf8(X'80')#x]
+- OneRowRelation


-- !query
select try_validate_utf8('')
-- !query analysis
Project [try_validate_utf8() AS try_validate_utf8()#x]
+- OneRowRelation


-- !query
select try_validate_utf8('abc')
-- !query analysis
Project [try_validate_utf8(abc) AS try_validate_utf8(abc)#x]
+- OneRowRelation


-- !query
select try_validate_utf8(x'80')
-- !query analysis
Project [try_validate_utf8(cast(0x80 as string)) AS try_validate_utf8(X'80')#x]
+- OneRowRelation
