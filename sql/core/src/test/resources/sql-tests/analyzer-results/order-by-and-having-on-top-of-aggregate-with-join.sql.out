-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW v1 AS SELECT * FROM VALUES
  (1, 2),
  (3, 5),
  (7, 2),
  (1, 2),
  (8, 3),
  (4, 9),
  (5, 7),
  (9, 4),
  (2, 6),
  (5, 7),
  (3, 8),
  (6, 1),
  (4, 9),
  (7, 5),
  (2, 8)
-- !query analysis
CreateViewCommand `v1`, SELECT * FROM VALUES
  (1, 2),
  (3, 5),
  (7, 2),
  (1, 2),
  (8, 3),
  (4, 9),
  (5, 7),
  (9, 4),
  (2, 6),
  (5, 7),
  (3, 8),
  (6, 1),
  (4, 9),
  (7, 5),
  (2, 8), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [col1#x, col2#x]
      +- LocalRelation [col1#x, col2#x]


-- !query
CREATE OR REPLACE TEMPORARY VIEW v2 AS SELECT * FROM VALUES
  (1, 2),
  (5, 9),
  (8, 4),
  (7, 5),
  (4, 9),
  (3, 1),
  (7, 2),
  (6, 8),
  (9, 7),
  (2, 3),
  (8, 3),
  (5, 7),
  (1, 6),
  (3, 2),
  (9, 8)
-- !query analysis
CreateViewCommand `v2`, SELECT * FROM VALUES
  (1, 2),
  (5, 9),
  (8, 4),
  (7, 5),
  (4, 9),
  (3, 1),
  (7, 2),
  (6, 8),
  (9, 7),
  (2, 3),
  (8, 3),
  (5, 7),
  (1, 6),
  (3, 2),
  (9, 8), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [col1#x, col2#x]
      +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 ORDER BY col1
-- !query analysis
Project [sum(col2)#xL]
+- Sort [col1#x ASC NULLS FIRST], true
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, col1#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 ORDER BY col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 65,
    "stopIndex" : 68,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY v1.col1
-- !query analysis
Project [sum(col2)#xL]
+- Sort [col1#x ASC NULLS FIRST], true
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, col1#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY v1.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 68,
    "stopIndex" : 74,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY v2.col1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col1`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 68,
    "stopIndex" : 74,
    "fragment" : "v2.col1"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY v2.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 68,
    "stopIndex" : 74,
    "fragment" : "v2.col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 ORDER BY 1 + col1, 2 + col2
-- !query analysis
Project [sum(col2)#xL]
+- Sort [(1 + col1)#x ASC NULLS FIRST, (2 + col2)#x ASC NULLS FIRST], true
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, (1 + col1#x) AS (1 + col1)#x, (2 + col2#x) AS (2 + col2)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 ORDER BY 1 + col2, 2 + col1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 83,
    "stopIndex" : 86,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 ORDER BY 1 + v1.col1, 2 + v1.col2
-- !query analysis
Project [sum(col2)#xL]
+- Sort [(1 + col1)#x ASC NULLS FIRST, (2 + col2)#x ASC NULLS FIRST], true
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, (1 + col1#x) AS (1 + col1)#x, (2 + col2#x) AS (2 + col2)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 ORDER BY 1 + v1.col2, 2 + v1.col1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 89,
    "stopIndex" : 95,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 ORDER BY 1 + v1.col1, 2 + v2.col2
-- !query analysis
Project [sum(col2)#xL]
+- Sort [(1 + col1)#x ASC NULLS FIRST, (2 + col2)#x ASC NULLS FIRST], true
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, (1 + col1#x) AS (1 + col1)#x, (2 + col2#x) AS (2 + col2)#x]
      +- Project [col1#x, col2#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 ORDER BY 1 + v2.col1, 2 + v1.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col1`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 89,
    "stopIndex" : 95,
    "fragment" : "v2.col1"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 ORDER BY MAX(col1)
-- !query analysis
Project [sum(col2)#xL]
+- Sort [max(col1)#x ASC NULLS FIRST], true
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 ORDER BY MAX(col2)
-- !query analysis
Project [sum(col2)#xL]
+- Sort [max(col2)#x ASC NULLS FIRST], true
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY MAX(v1.col1)
-- !query analysis
Project [sum(col2)#xL]
+- Sort [max(col1)#x ASC NULLS FIRST], true
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY MAX(v1.col2)
-- !query analysis
Project [sum(col2)#xL]
+- Sort [max(col2)#x ASC NULLS FIRST], true
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY MAX(v2.col1)
-- !query analysis
Project [sum(col2)#xL]
+- Sort [max(col1)#x ASC NULLS FIRST], true
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
      +- Project [col1#x, col2#x, col1#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY MAX(v2.col2)
-- !query analysis
Project [sum(col2)#xL]
+- Sort [max(col2)#x ASC NULLS FIRST], true
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
      +- Project [col1#x, col2#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 ORDER BY 1 + MAX(col1), 2 + MIN(col2)
-- !query analysis
Project [sum(col2)#xL]
+- Sort [(1 + max(col1)#x) ASC NULLS FIRST, (2 + min(col2)#x) ASC NULLS FIRST], true
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x, min(col2#x) AS min(col2)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 ORDER BY 1 + MAX(col2), 2 + MIN(col1)
-- !query analysis
Project [sum(col2)#xL]
+- Sort [(1 + max(col2)#x) ASC NULLS FIRST, (2 + min(col1)#x) ASC NULLS FIRST], true
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x, min(col1#x) AS min(col1)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 ORDER BY 1 + MAX(v1.col1), 2 + MIN(v1.col2)
-- !query analysis
Project [sum(col2)#xL]
+- Sort [(1 + max(col1)#x) ASC NULLS FIRST, (2 + min(col2)#x) ASC NULLS FIRST], true
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x, min(col2#x) AS min(col2)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 ORDER BY 1 + MAX(v1.col2), 2 + MIN(v1.col1)
-- !query analysis
Project [sum(col2)#xL]
+- Sort [(1 + max(col2)#x) ASC NULLS FIRST, (2 + min(col1)#x) ASC NULLS FIRST], true
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x, min(col1#x) AS min(col1)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 ORDER BY 1 + MAX(v1.col1), 2 + MIN(v2.col2)
-- !query analysis
Project [sum(col2)#xL]
+- Sort [(1 + max(col1)#x) ASC NULLS FIRST, (2 + min(col2)#x) ASC NULLS FIRST], true
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x, min(col2#x) AS min(col2)#x]
      +- Project [col1#x, col2#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 ORDER BY 1 + MAX(v2.col1), 2 + MIN(v1.col2)
-- !query analysis
Project [sum(col2)#xL]
+- Sort [(1 + max(col1)#x) ASC NULLS FIRST, (2 + min(col2)#x) ASC NULLS FIRST], true
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x, min(col2#x) AS min(col2)#x]
      +- Project [col1#x, col2#x, col2#x, col1#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 ORDER BY col1
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [col1#x ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, col1#x]
      +- Project [sum(col2)#xL, col1#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, col1#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, col1#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 ORDER BY col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`a`, `b`, `c`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 94,
    "stopIndex" : 97,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY v1.col1
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [col1#x ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, col1#x]
      +- Project [sum(col2)#xL, col1#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, col1#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, col1#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY v1.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 97,
    "stopIndex" : 103,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY v2.col1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col1`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 97,
    "stopIndex" : 103,
    "fragment" : "v2.col1"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY v2.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col2`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 97,
    "stopIndex" : 103,
    "fragment" : "v2.col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 ORDER BY 1 + col1, 2 + col2
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [(1 + col1)#x ASC NULLS FIRST, (2 + col2)#x ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, (1 + col1)#x AS (1 + col1)#x, (2 + col2)#x AS (2 + col2)#x]
      +- Project [sum(col2)#xL, (1 + col1)#x, (2 + col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, (1 + col1)#x, (2 + col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, (1 + col1#x) AS (1 + col1)#x, (2 + col2#x) AS (2 + col2)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 ORDER BY 1 + col2, 2 + col1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`a`, `b`, `c`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 112,
    "stopIndex" : 115,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 ORDER BY 1 + v1.col1, 2 + v1.col2
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [(1 + col1)#x ASC NULLS FIRST, (2 + col2)#x ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, (1 + col1)#x AS (1 + col1)#x, (2 + col2)#x AS (2 + col2)#x]
      +- Project [sum(col2)#xL, (1 + col1)#x, (2 + col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, (1 + col1)#x, (2 + col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, (1 + col1#x) AS (1 + col1)#x, (2 + col2#x) AS (2 + col2)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 ORDER BY 1 + v1.col2, 2 + v1.col1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 118,
    "stopIndex" : 124,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 ORDER BY 1 + v1.col1, 2 + v2.col2
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [(1 + col1)#x ASC NULLS FIRST, (2 + col2)#x ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, (1 + col1)#x AS (1 + col1)#x, (2 + col2)#x AS (2 + col2)#x]
      +- Project [sum(col2)#xL, (1 + col1)#x, (2 + col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, (1 + col1)#x, (2 + col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, (1 + col1#x) AS (1 + col1)#x, (2 + col2#x) AS (2 + col2)#x]
               +- Project [col1#x, col2#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 ORDER BY 1 + v2.col1, 2 + v1.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col1`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 118,
    "stopIndex" : 124,
    "fragment" : "v2.col1"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 ORDER BY MAX(col1)
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [max(col1)#x ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col1)#x AS max(col1)#x]
      +- Project [sum(col2)#xL, max(col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 ORDER BY MAX(col2)
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [max(col2)#x ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col2)#x AS max(col2)#x]
      +- Project [sum(col2)#xL, max(col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY MAX(v1.col1)
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [max(col1)#x ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col1)#x AS max(col1)#x]
      +- Project [sum(col2)#xL, max(col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY MAX(v1.col2)
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [max(col2)#x ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col2)#x AS max(col2)#x]
      +- Project [sum(col2)#xL, max(col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY MAX(v2.col1)
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [max(col1)#x ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col1)#x AS max(col1)#x]
      +- Project [sum(col2)#xL, max(col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
               +- Project [col1#x, col2#x, col1#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 ORDER BY MAX(v2.col2)
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [max(col2)#x ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col2)#x AS max(col2)#x]
      +- Project [sum(col2)#xL, max(col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
               +- Project [col1#x, col2#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 ORDER BY 1 + MAX(col1), 2 + MIN(col2)
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [(1 + max(col1)#x) ASC NULLS FIRST, (2 + min(col2)#x) ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col1)#x AS max(col1)#x, min(col2)#x AS min(col2)#x]
      +- Project [sum(col2)#xL, max(col1)#x, min(col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col1)#x, min(col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x, min(col2#x) AS min(col2)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 ORDER BY 1 + MAX(col2), 2 + MIN(col1)
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [(1 + max(col2)#x) ASC NULLS FIRST, (2 + min(col1)#x) ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col2)#x AS max(col2)#x, min(col1)#x AS min(col1)#x]
      +- Project [sum(col2)#xL, max(col2)#x, min(col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col2)#x, min(col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x, min(col1#x) AS min(col1)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 ORDER BY 1 + MAX(v1.col1), 2 + MIN(v1.col2)
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [(1 + max(col1)#x) ASC NULLS FIRST, (2 + min(col2)#x) ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col1)#x AS max(col1)#x, min(col2)#x AS min(col2)#x]
      +- Project [sum(col2)#xL, max(col1)#x, min(col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col1)#x, min(col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x, min(col2#x) AS min(col2)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 ORDER BY 1 + MAX(v1.col2), 2 + MIN(v1.col1)
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [(1 + max(col2)#x) ASC NULLS FIRST, (2 + min(col1)#x) ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col2)#x AS max(col2)#x, min(col1)#x AS min(col1)#x]
      +- Project [sum(col2)#xL, max(col2)#x, min(col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col2)#x, min(col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x, min(col1#x) AS min(col1)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 ORDER BY 1 + MAX(v1.col1), 2 + MIN(v2.col2)
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [(1 + max(col1)#x) ASC NULLS FIRST, (2 + min(col2)#x) ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col1)#x AS max(col1)#x, min(col2)#x AS min(col2)#x]
      +- Project [sum(col2)#xL, max(col1)#x, min(col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col1)#x, min(col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x, min(col2#x) AS min(col2)#x]
               +- Project [col1#x, col2#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 ORDER BY 1 + MAX(v2.col1), 2 + MIN(v1.col2)
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [(1 + max(col1)#x) ASC NULLS FIRST, (2 + min(col2)#x) ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col1)#x AS max(col1)#x, min(col2)#x AS min(col2)#x]
      +- Project [sum(col2)#xL, max(col1)#x, min(col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col1)#x, min(col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x, min(col2#x) AS min(col2)#x]
               +- Project [col1#x, col2#x, col2#x, col1#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING col1 > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter (col1#x > 5)
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, col1#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING col2 > 5
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 63,
    "stopIndex" : 66,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v1.col1 > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter (col1#x > 5)
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, col1#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v1.col2 > 5
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 66,
    "stopIndex" : 72,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v2.col1 > 5
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col1`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 66,
    "stopIndex" : 72,
    "fragment" : "v2.col1"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v2.col2 > 5
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 66,
    "stopIndex" : 72,
    "fragment" : "v2.col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + col1 > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter ((1 + col1)#x > 5)
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, (1 + col1#x) AS (1 + col1)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + col2 > 5
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 81,
    "stopIndex" : 84,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + v1.col1 > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter ((1 + col1)#x > 5)
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, (1 + col1#x) AS (1 + col1)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + v1.col2 > 5
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 87,
    "stopIndex" : 93,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + v1.col1 > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter ((1 + col1)#x > 5)
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, (1 + col1#x) AS (1 + col1)#x]
      +- Project [col1#x, col2#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + v2.col1 > 5
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col1`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 87,
    "stopIndex" : 93,
    "fragment" : "v2.col1"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING MAX(col1) > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter (max(col1)#x > 5)
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING MAX(col2) > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter (max(col2)#x > 5)
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v1.col1) > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter (max(col1)#x > 5)
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v1.col2) > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter (max(col2)#x > 5)
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v2.col1) > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter (max(col1)#x > 5)
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
      +- Project [col1#x, col2#x, col1#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v2.col2) > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter (max(col2)#x > 5)
   +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
      +- Project [col1#x, col2#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + MAX(col1) > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter ((1 + max(col1)#x) > 5)
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + MAX(col2) > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter ((1 + max(col2)#x) > 5)
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + MAX(v1.col1) > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter ((1 + max(col1)#x) > 5)
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + MAX(v1.col2) > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter ((1 + max(col2)#x) > 5)
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
      +- Project [col1#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + MAX(v1.col1) > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter ((1 + max(col1)#x) > 5)
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
      +- Project [col1#x, col2#x, col2#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + MAX(v2.col1) > 5
-- !query analysis
Project [sum(col2)#xL]
+- Filter ((1 + max(col1)#x) > 5)
   +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
      +- Project [col1#x, col2#x, col2#x, col1#x]
         +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
            :- SubqueryAlias v1
            :  +- View (`v1`, [col1#x, col2#x])
            :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
            :        +- Project [col1#x, col2#x]
            :           +- LocalRelation [col1#x, col2#x]
            +- SubqueryAlias v2
               +- View (`v2`, [col1#x, col2#x])
                  +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     +- Project [col1#x, col2#x]
                        +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING col1 > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter (col1#x > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, col1#x]
      +- Project [sum(col2)#xL, col1#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, col1#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, col1#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING col2 > 5
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`a`, `b`, `c`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 92,
    "stopIndex" : 95,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v1.col1 > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter (col1#x > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, col1#x]
      +- Project [sum(col2)#xL, col1#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, col1#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, col1#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v1.col2 > 5
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 95,
    "stopIndex" : 101,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v2.col1 > 5
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col1`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 95,
    "stopIndex" : 101,
    "fragment" : "v2.col1"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v2.col2 > 5
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col2`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 95,
    "stopIndex" : 101,
    "fragment" : "v2.col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + col1 > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter ((1 + col1)#x > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, (1 + col1)#x AS (1 + col1)#x]
      +- Project [sum(col2)#xL, (1 + col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, (1 + col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, (1 + col1#x) AS (1 + col1)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + col2 > 5
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`a`, `b`, `c`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 110,
    "stopIndex" : 113,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + v1.col1 > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter ((1 + col1)#x > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, (1 + col1)#x AS (1 + col1)#x]
      +- Project [sum(col2)#xL, (1 + col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, (1 + col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, (1 + col1#x) AS (1 + col1)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + v1.col2 > 5
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 116,
    "stopIndex" : 122,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + v1.col1 > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter ((1 + col1)#x > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, (1 + col1)#x AS (1 + col1)#x]
      +- Project [sum(col2)#xL, (1 + col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, (1 + col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, (1 + col1#x) AS (1 + col1)#x]
               +- Project [col1#x, col2#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + v2.col1 > 5
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col1`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 116,
    "stopIndex" : 122,
    "fragment" : "v2.col1"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING MAX(col1) > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter (max(col1)#x > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col1)#x AS max(col1)#x]
      +- Project [sum(col2)#xL, max(col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING MAX(col2) > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter (max(col2)#x > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col2)#x AS max(col2)#x]
      +- Project [sum(col2)#xL, max(col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v1.col1) > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter (max(col1)#x > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col1)#x AS max(col1)#x]
      +- Project [sum(col2)#xL, max(col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v1.col2) > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter (max(col2)#x > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col2)#x AS max(col2)#x]
      +- Project [sum(col2)#xL, max(col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v2.col1) > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter (max(col1)#x > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col1)#x AS max(col1)#x]
      +- Project [sum(col2)#xL, max(col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
               +- Project [col1#x, col2#x, col1#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v2.col2) > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter (max(col2)#x > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col2)#x AS max(col2)#x]
      +- Project [sum(col2)#xL, max(col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
               +- Project [col1#x, col2#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + MAX(col1) > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter ((1 + max(col1)#x) > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col1)#x AS max(col1)#x]
      +- Project [sum(col2)#xL, max(col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + MAX(col2) > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter ((1 + max(col2)#x) > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col2)#x AS max(col2)#x]
      +- Project [sum(col2)#xL, max(col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + MAX(v1.col1) > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter ((1 + max(col1)#x) > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col1)#x AS max(col1)#x]
      +- Project [sum(col2)#xL, max(col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + MAX(v1.col2) > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter ((1 + max(col2)#x) > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col2)#x AS max(col2)#x]
      +- Project [sum(col2)#xL, max(col2)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col2)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col2#x) AS max(col2)#x]
               +- Project [col1#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + MAX(v1.col1) > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter ((1 + max(col1)#x) > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col1)#x AS max(col1)#x]
      +- Project [sum(col2)#xL, max(col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
               +- Project [col1#x, col2#x, col2#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + MAX(v2.col1) > 5
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Filter ((1 + max(col1)#x) > 5)
   +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, max(col1)#x AS max(col1)#x]
      +- Project [sum(col2)#xL, max(col1)#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
         +- Project [sum(col2)#xL, max(col1)#x, sum(col2)#xL AS a#xL]
            +- Aggregate [(col1#x + 1), (col2#x + 2)], [sum(col2#x) AS sum(col2)#xL, max(col1#x) AS max(col1)#x]
               +- Project [col1#x, col2#x, col2#x, col1#x]
                  +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                     :- SubqueryAlias v1
                     :  +- View (`v1`, [col1#x, col2#x])
                     :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                     :        +- Project [col1#x, col2#x]
                     :           +- LocalRelation [col1#x, col2#x]
                     +- SubqueryAlias v2
                        +- View (`v2`, [col1#x, col2#x])
                           +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                              +- Project [col1#x, col2#x]
                                 +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING col1 > 5 ORDER BY col1
-- !query analysis
Project [sum(col2)#xL]
+- Sort [col1#x ASC NULLS FIRST], true
   +- Project [sum(col2)#xL, col1#x]
      +- Filter (col1#x > 5)
         +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, col1#x]
            +- Project [col1#x, col2#x]
               +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                  :- SubqueryAlias v1
                  :  +- View (`v1`, [col1#x, col2#x])
                  :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                  :        +- Project [col1#x, col2#x]
                  :           +- LocalRelation [col1#x, col2#x]
                  +- SubqueryAlias v2
                     +- View (`v2`, [col1#x, col2#x])
                        +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                           +- Project [col1#x, col2#x]
                              +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING col2 > 5 ORDER BY col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 63,
    "stopIndex" : 66,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v1.col1 > 5 ORDER BY v1.col1
-- !query analysis
Project [sum(col2)#xL]
+- Sort [col1#x ASC NULLS FIRST], true
   +- Project [sum(col2)#xL, col1#x]
      +- Filter (col1#x > 5)
         +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, col1#x]
            +- Project [col1#x, col2#x]
               +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                  :- SubqueryAlias v1
                  :  +- View (`v1`, [col1#x, col2#x])
                  :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                  :        +- Project [col1#x, col2#x]
                  :           +- LocalRelation [col1#x, col2#x]
                  +- SubqueryAlias v2
                     +- View (`v2`, [col1#x, col2#x])
                        +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                           +- Project [col1#x, col2#x]
                              +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v1.col2 > 5 ORDER BY v1.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 66,
    "stopIndex" : 72,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v2.col1 > 5 ORDER BY v2.col1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col1`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 66,
    "stopIndex" : 72,
    "fragment" : "v2.col1"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v2.col2 > 5 ORDER BY v2.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 66,
    "stopIndex" : 72,
    "fragment" : "v2.col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + col1 > 5 ORDER BY 1 + col1, 2 + col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col1`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 103,
    "stopIndex" : 106,
    "fragment" : "col1"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + col2 > 5 ORDER BY 1 + col2, 2 + col1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 81,
    "stopIndex" : 84,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + v1.col1 > 5 ORDER BY 1 + v1.col1, 2 + v1.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col1`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 112,
    "stopIndex" : 118,
    "fragment" : "v1.col1"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + v1.col2 > 5 ORDER BY 1 + v1.col2, 2 + v1.col1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 87,
    "stopIndex" : 93,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + v1.col1 > 5 ORDER BY 1 + v1.col1, 2 + v2.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col1`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 112,
    "stopIndex" : 118,
    "fragment" : "v1.col1"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + v2.col1 > 5 ORDER BY 1 + v2.col1, 2 + v1.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col1`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 87,
    "stopIndex" : 93,
    "fragment" : "v2.col1"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING MAX(col1) > 5 ORDER BY MAX(col1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNSUPPORTED_EXPR_FOR_OPERATOR",
  "sqlState" : "42K0E",
  "messageParameters" : {
    "invalidExprSqls" : "\"max(col1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 77,
    "stopIndex" : 94,
    "fragment" : "ORDER BY MAX(col1)"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING MAX(col2) > 5 ORDER BY MAX(col2)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 90,
    "stopIndex" : 93,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v1.col1) > 5 ORDER BY MAX(v1.col1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNSUPPORTED_EXPR_FOR_OPERATOR",
  "sqlState" : "42K0E",
  "messageParameters" : {
    "invalidExprSqls" : "\"max(col1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 83,
    "stopIndex" : 103,
    "fragment" : "ORDER BY MAX(v1.col1)"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v1.col2) > 5 ORDER BY MAX(v1.col2)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 96,
    "stopIndex" : 102,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v2.col1) > 5 ORDER BY MAX(v2.col1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col1`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 96,
    "stopIndex" : 102,
    "fragment" : "v2.col1"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v2.col2) > 5 ORDER BY MAX(v2.col2)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 96,
    "stopIndex" : 102,
    "fragment" : "v2.col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + MAX(col1) > 5 ORDER BY 1 + MAX(col1), 2 + MIN(col2)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col1`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 112,
    "stopIndex" : 115,
    "fragment" : "col1"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + MAX(col2) > 5 ORDER BY 1 + MAX(col2), 2 + MIN(col1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 112,
    "stopIndex" : 115,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + MAX(v1.col1) > 5 ORDER BY 1 + MAX(v1.col1), 2 + MIN(v1.col2)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col1`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 121,
    "stopIndex" : 127,
    "fragment" : "v1.col1"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + MAX(v1.col2) > 5 ORDER BY 1 + MAX(v1.col2), 2 + MIN(v1.col1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 121,
    "stopIndex" : 127,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + MAX(v1.col1) > 5 ORDER BY 1 + MAX(v1.col1), 2 + MIN(v2.col2)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col1`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 121,
    "stopIndex" : 127,
    "fragment" : "v1.col1"
  } ]
}


-- !query
SELECT SUM(col2) FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + MAX(v1.col1) > 5 ORDER BY 1 + MAX(v1.col1), 2 + MIN(v2.col2)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col1`",
    "proposal" : "`sum(col2)`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 121,
    "stopIndex" : 127,
    "fragment" : "v1.col1"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING col1 > 5 ORDER BY col1
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [col1#x ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, c#xL, col1#x]
      +- Filter (col1#x > 5)
         +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, col1#x]
            +- Project [sum(col2)#xL, col1#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
               +- Project [sum(col2)#xL, col1#x, sum(col2)#xL AS a#xL]
                  +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, col1#x]
                     +- Project [col1#x, col2#x]
                        +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                           :- SubqueryAlias v1
                           :  +- View (`v1`, [col1#x, col2#x])
                           :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                           :        +- Project [col1#x, col2#x]
                           :           +- LocalRelation [col1#x, col2#x]
                           +- SubqueryAlias v2
                              +- View (`v2`, [col1#x, col2#x])
                                 +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                                    +- Project [col1#x, col2#x]
                                       +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING col2 > 5 ORDER BY col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`a`, `b`, `c`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 92,
    "stopIndex" : 95,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v1.col1 > 5 ORDER BY v1.col1
-- !query analysis
Project [a#xL, b#xL, c#xL]
+- Sort [col1#x ASC NULLS FIRST], true
   +- Project [a#xL, b#xL, c#xL, col1#x]
      +- Filter (col1#x > 5)
         +- Project [a#xL, b#xL, (b#xL + cast(1 as bigint)) AS c#xL, col1#x]
            +- Project [sum(col2)#xL, col1#x, a#xL, (a#xL + cast(1 as bigint)) AS b#xL]
               +- Project [sum(col2)#xL, col1#x, sum(col2)#xL AS a#xL]
                  +- Aggregate [col1#x], [sum(col2#x) AS sum(col2)#xL, col1#x]
                     +- Project [col1#x, col2#x]
                        +- Join Inner, ((col1#x = col1#x) AND (col2#x = col2#x))
                           :- SubqueryAlias v1
                           :  +- View (`v1`, [col1#x, col2#x])
                           :     +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                           :        +- Project [col1#x, col2#x]
                           :           +- LocalRelation [col1#x, col2#x]
                           +- SubqueryAlias v2
                              +- View (`v2`, [col1#x, col2#x])
                                 +- Project [cast(col1#x as int) AS col1#x, cast(col2#x as int) AS col2#x]
                                    +- Project [col1#x, col2#x]
                                       +- LocalRelation [col1#x, col2#x]


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v1.col2 > 5 ORDER BY v1.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 95,
    "stopIndex" : 101,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v2.col1 > 5 ORDER BY v2.col1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col1`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 95,
    "stopIndex" : 101,
    "fragment" : "v2.col1"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING v2.col2 > 5 ORDER BY v2.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col2`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 95,
    "stopIndex" : 101,
    "fragment" : "v2.col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + col1 > 5 ORDER BY 1 + col1, 2 + col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col1`",
    "proposal" : "`a`, `b`, `c`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 132,
    "stopIndex" : 135,
    "fragment" : "col1"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + col2 > 5 ORDER BY 1 + col2, 2 + col1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`a`, `b`, `c`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 110,
    "stopIndex" : 113,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + v1.col1 > 5 ORDER BY 1 + v1.col1, 2 + v1.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col1`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 141,
    "stopIndex" : 147,
    "fragment" : "v1.col1"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + v1.col2 > 5 ORDER BY 1 + v1.col2, 2 + v1.col1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 116,
    "stopIndex" : 122,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + v1.col1 > 5 ORDER BY 1 + v1.col1, 2 + v2.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col1`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 141,
    "stopIndex" : 147,
    "fragment" : "v1.col1"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + v2.col1 > 5 ORDER BY 1 + v2.col1, 2 + v1.col2
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col1`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 116,
    "stopIndex" : 122,
    "fragment" : "v2.col1"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING MAX(col1) > 5 ORDER BY MAX(col1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNSUPPORTED_EXPR_FOR_OPERATOR",
  "sqlState" : "42K0E",
  "messageParameters" : {
    "invalidExprSqls" : "\"max(col1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 106,
    "stopIndex" : 123,
    "fragment" : "ORDER BY MAX(col1)"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 HAVING MAX(col2) > 5 ORDER BY MAX(col2)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`a`, `b`, `c`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 119,
    "stopIndex" : 122,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v1.col1) > 5 ORDER BY MAX(v1.col1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNSUPPORTED_EXPR_FOR_OPERATOR",
  "sqlState" : "42K0E",
  "messageParameters" : {
    "invalidExprSqls" : "\"max(col1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 112,
    "stopIndex" : 132,
    "fragment" : "ORDER BY MAX(v1.col1)"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v1.col2) > 5 ORDER BY MAX(v1.col2)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 125,
    "stopIndex" : 131,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v2.col1) > 5 ORDER BY MAX(v2.col1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col1`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 125,
    "stopIndex" : 131,
    "fragment" : "v2.col1"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 HAVING MAX(v2.col2) > 5 ORDER BY MAX(v2.col2)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v2`.`col2`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 125,
    "stopIndex" : 131,
    "fragment" : "v2.col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + MAX(col1) > 5 ORDER BY 1 + MAX(col1), 2 + MIN(col2)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col1`",
    "proposal" : "`a`, `b`, `c`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 141,
    "stopIndex" : 144,
    "fragment" : "col1"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY col1 + 1, col2 + 2 HAVING 1 + MAX(col2) > 5 ORDER BY 1 + MAX(col2), 2 + MIN(col1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col2`",
    "proposal" : "`a`, `b`, `c`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 141,
    "stopIndex" : 144,
    "fragment" : "col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + MAX(v1.col1) > 5 ORDER BY 1 + MAX(v1.col1), 2 + MIN(v1.col2)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col1`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 150,
    "stopIndex" : 156,
    "fragment" : "v1.col1"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v1.col2 + 2 HAVING 1 + MAX(v1.col2) > 5 ORDER BY 1 + MAX(v1.col2), 2 + MIN(v1.col1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col2`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 150,
    "stopIndex" : 156,
    "fragment" : "v1.col2"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + MAX(v1.col1) > 5 ORDER BY 1 + MAX(v1.col1), 2 + MIN(v2.col2)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col1`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 150,
    "stopIndex" : 156,
    "fragment" : "v1.col1"
  } ]
}


-- !query
SELECT SUM(col2) AS a, a + 1 AS b, b + 1 AS c FROM v1 NATURAL JOIN v2 GROUP BY v1.col1 + 1, v2.col2 + 2 HAVING 1 + MAX(v1.col1) > 5 ORDER BY 1 + MAX(v1.col1), 2 + MIN(v2.col2)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`v1`.`col1`",
    "proposal" : "`c`, `a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 150,
    "stopIndex" : 156,
    "fragment" : "v1.col1"
  } ]
}


-- !query
DROP VIEW IF EXISTS v1
-- !query analysis
DropTempViewCommand v1


-- !query
DROP VIEW IF EXISTS v2
-- !query analysis
DropTempViewCommand v2
