-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view time_view as select '11:53:26.038344' time_str, 'HH:mm:ss.SSSSSS' fmt_str
-- !query analysis
CreateViewCommand `time_view`, select '11:53:26.038344' time_str, 'HH:mm:ss.SSSSSS' fmt_str, false, false, LocalTempView, UNSUPPORTED, true
   +- Project [11:53:26.038344 AS time_str#x, HH:mm:ss.SSSSSS AS fmt_str#x]
      +- OneRowRelation


-- !query
select time '16:39:45\t'
-- !query analysis
Project [16:39:45 AS TIME '16:39:45'#x]
+- OneRowRelation


-- !query
select to_time(null), to_time('01:02:03'), to_time('23-59-59.999999', 'HH-mm-ss.SSSSSS')
-- !query analysis
Project [to_time(null, None) AS to_time(NULL)#x, to_time(01:02:03, None) AS to_time(01:02:03)#x, to_time(23-59-59.999999, Some(HH-mm-ss.SSSSSS)) AS to_time(23-59-59.999999, HH-mm-ss.SSSSSS)#x]
+- OneRowRelation


-- !query
select to_time(time_str, fmt_str) from time_view
-- !query analysis
Project [to_time(time_str#x, Some(fmt_str#x)) AS to_time(time_str, fmt_str)#x]
+- SubqueryAlias time_view
   +- View (`time_view`, [time_str#x, fmt_str#x])
      +- Project [cast(time_str#x as string) AS time_str#x, cast(fmt_str#x as string) AS fmt_str#x]
         +- Project [11:53:26.038344 AS time_str#x, HH:mm:ss.SSSSSS AS fmt_str#x]
            +- OneRowRelation


-- !query
select to_time("11", "HH")
-- !query analysis
Project [to_time(11, Some(HH)) AS to_time(11, HH)#x]
+- OneRowRelation


-- !query
select to_time("13-60", "HH-mm")
-- !query analysis
Project [to_time(13-60, Some(HH-mm)) AS to_time(13-60, HH-mm)#x]
+- OneRowRelation


-- !query
select try_to_time(null), try_to_time('00:12:00'), try_to_time('01:02:03', 'HH:mm:ss')
-- !query analysis
Project [try_to_time(to_time(null, None)) AS try_to_time(to_time(NULL))#x, try_to_time(to_time(00:12:00, None)) AS try_to_time(to_time(00:12:00))#x, try_to_time(to_time(01:02:03, Some(HH:mm:ss))) AS try_to_time(to_time(01:02:03, HH:mm:ss))#x]
+- OneRowRelation


-- !query
select try_to_time(1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"1\"",
    "inputType" : "\"INT\"",
    "paramIndex" : "first",
    "requiredType" : "\"STRING\"",
    "sqlExpr" : "\"to_time(1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 21,
    "fragment" : "try_to_time(1)"
  } ]
}


-- !query
select try_to_time('12:48:31 abc')
-- !query analysis
Project [try_to_time(to_time(12:48:31 abc, None)) AS try_to_time(to_time(12:48:31 abc))#x]
+- OneRowRelation


-- !query
select try_to_time('10:11:12.', 'HH:mm:ss.SSSSSS')
-- !query analysis
Project [try_to_time(to_time(10:11:12., Some(HH:mm:ss.SSSSSS))) AS try_to_time(to_time(10:11:12., HH:mm:ss.SSSSSS))#x]
+- OneRowRelation


-- !query
select try_to_time("02-69", "HH-mm")
-- !query analysis
Project [try_to_time(to_time(02-69, Some(HH-mm))) AS try_to_time(to_time(02-69, HH-mm))#x]
+- OneRowRelation


-- !query
select try_to_time('11:12:13', 'HH:mm:ss', 'SSSSSS')
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "WRONG_NUM_ARGS.WITHOUT_SUGGESTION",
  "sqlState" : "42605",
  "messageParameters" : {
    "actualNum" : "3",
    "docroot" : "https://spark.apache.org/docs/latest",
    "expectedNum" : "[1, 2]",
    "functionName" : "`try_to_time`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 52,
    "fragment" : "try_to_time('11:12:13', 'HH:mm:ss', 'SSSSSS')"
  } ]
}
