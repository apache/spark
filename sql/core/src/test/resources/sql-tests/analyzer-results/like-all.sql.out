-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW like_all_table AS SELECT * FROM (VALUES
  ('google', '%oo%'),
  ('facebook', '%oo%'),
  ('linkedin', '%in'))
  as t1(company, pat)
-- !query analysis
CreateViewCommand `like_all_table`, SELECT * FROM (VALUES
  ('google', '%oo%'),
  ('facebook', '%oo%'),
  ('linkedin', '%in'))
  as t1(company, pat), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [company#x, pat#x]
      +- SubqueryAlias t1
         +- Project [col1#x AS company#x, col2#x AS pat#x]
            +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_all_table WHERE company LIKE ALL ('%oo%', '%go%')
-- !query analysis
Project [company#x]
+- Filter likeall(company#x, %oo%, %go%)
   +- SubqueryAlias like_all_table
      +- View (`like_all_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_all_table WHERE company LIKE ALL ('microsoft', '%yoo%')
-- !query analysis
Project [company#x]
+- Filter likeall(company#x, microsoft, %yoo%)
   +- SubqueryAlias like_all_table
      +- View (`like_all_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT 
    company,
    CASE
        WHEN company LIKE ALL ('%oo%', '%go%') THEN 'Y'
        ELSE 'N'
    END AS is_available,
    CASE
        WHEN company LIKE ALL ('%oo%', 'go%') OR company LIKE ALL ('%in', 'ms%') THEN 'Y'
        ELSE 'N'
    END AS mix
FROM like_all_table
-- !query analysis
Project [company#x, CASE WHEN likeall(company#x, %oo%, %go%) THEN Y ELSE N END AS is_available#x, CASE WHEN (likeall(company#x, %oo%, go%) OR likeall(company#x, %in, ms%)) THEN Y ELSE N END AS mix#x]
+- SubqueryAlias like_all_table
   +- View (`like_all_table`, [company#x, pat#x])
      +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
         +- Project [company#x, pat#x]
            +- SubqueryAlias t1
               +- Project [col1#x AS company#x, col2#x AS pat#x]
                  +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_all_table WHERE company LIKE ALL ('%oo%', pat)
-- !query analysis
Project [company#x]
+- Filter (company#x LIKE %oo% AND company#x LIKE pat#x)
   +- SubqueryAlias like_all_table
      +- View (`like_all_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_all_table WHERE company NOT LIKE ALL ('%oo%', '%in', 'fa%')
-- !query analysis
Project [company#x]
+- Filter notlikeall(company#x, %oo%, %in, fa%)
   +- SubqueryAlias like_all_table
      +- View (`like_all_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_all_table WHERE company NOT LIKE ALL ('microsoft', '%yoo%')
-- !query analysis
Project [company#x]
+- Filter notlikeall(company#x, microsoft, %yoo%)
   +- SubqueryAlias like_all_table
      +- View (`like_all_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_all_table WHERE company NOT LIKE ALL ('%oo%', 'fa%')
-- !query analysis
Project [company#x]
+- Filter notlikeall(company#x, %oo%, fa%)
   +- SubqueryAlias like_all_table
      +- View (`like_all_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_all_table WHERE NOT company LIKE ALL ('%oo%', 'fa%')
-- !query analysis
Project [company#x]
+- Filter NOT likeall(company#x, %oo%, fa%)
   +- SubqueryAlias like_all_table
      +- View (`like_all_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_all_table WHERE company LIKE ALL ('%oo%', NULL)
-- !query analysis
Project [company#x]
+- Filter (company#x LIKE %oo% AND company#x LIKE cast(null as string))
   +- SubqueryAlias like_all_table
      +- View (`like_all_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_all_table WHERE company NOT LIKE ALL ('%oo%', NULL)
-- !query analysis
Project [company#x]
+- Filter (NOT company#x LIKE %oo% AND NOT company#x LIKE cast(null as string))
   +- SubqueryAlias like_all_table
      +- View (`like_all_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_all_table WHERE company LIKE ALL (NULL, NULL)
-- !query analysis
Project [company#x]
+- Filter (company#x LIKE cast(null as string) AND company#x LIKE cast(null as string))
   +- SubqueryAlias like_all_table
      +- View (`like_all_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_all_table WHERE company NOT LIKE ALL (NULL, NULL)
-- !query analysis
Project [company#x]
+- Filter (NOT company#x LIKE cast(null as string) AND NOT company#x LIKE cast(null as string))
   +- SubqueryAlias like_all_table
      +- View (`like_all_table`, [company#x, pat#x])
         +- Project [cast(company#x as string) AS company#x, cast(pat#x as string) AS pat#x]
            +- Project [company#x, pat#x]
               +- SubqueryAlias t1
                  +- Project [col1#x AS company#x, col2#x AS pat#x]
                     +- LocalRelation [col1#x, col2#x]


-- !query
SELECT company FROM like_all_table WHERE company LIKE ALL ()
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_0064",
  "messageParameters" : {
    "msg" : "Expected something between '(' and ')'."
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 50,
    "stopIndex" : 60,
    "fragment" : "LIKE ALL ()"
  } ]
}
