-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE DATABASE showdb
-- !query analysis
CreateNamespace false
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [showdb]


-- !query
USE showdb
-- !query analysis
SetCatalogAndNamespace
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [showdb]


-- !query
CREATE TABLE show_t1(a String, b Int, c String, d String) USING parquet PARTITIONED BY (c, d)
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`showdb`.`show_t1`, false


-- !query
ALTER TABLE show_t1 ADD PARTITION (c='Us', d=1)
-- !query analysis
AlterTableAddPartitionCommand `spark_catalog`.`showdb`.`show_t1`, [(Map(c -> Us, d -> 1),None)], false


-- !query
CREATE TABLE show_t2(b String, d Int) USING parquet
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`showdb`.`show_t2`, false


-- !query
CREATE TEMPORARY VIEW show_t3(e int) USING parquet
-- !query analysis
CreateTempViewUsing [tableIdent:`show_t3` StructType(StructField(e,IntegerType,true)) replace:false provider:parquet Map()


-- !query
CREATE GLOBAL TEMP VIEW show_t4 AS SELECT 1 as col1
-- !query analysis
CreateViewCommand `show_t4`, SELECT 1 as col1, false, false, GlobalTempView, UNSUPPORTED, true
   +- Project [1 AS col1#x]
      +- OneRowRelation


-- !query
SHOW TABLES
-- !query analysis
ShowTables [namespace#x, tableName#x, isTemporary#x]
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [showdb]


-- !query
SHOW TABLES IN showdb
-- !query analysis
ShowTables [namespace#x, tableName#x, isTemporary#x]
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [showdb]


-- !query
SHOW TABLES 'show_t*'
-- !query analysis
ShowTables show_t*, [namespace#x, tableName#x, isTemporary#x]
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [showdb]


-- !query
SHOW TABLES LIKE 'show_t1*|show_t2*'
-- !query analysis
ShowTables show_t1*|show_t2*, [namespace#x, tableName#x, isTemporary#x]
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [showdb]


-- !query
SHOW TABLES IN showdb 'show_t*'
-- !query analysis
ShowTables show_t*, [namespace#x, tableName#x, isTemporary#x]
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [showdb]


-- !query
SHOW TABLES IN showdb LIKE 'show_t*'
-- !query analysis
ShowTables show_t*, [namespace#x, tableName#x, isTemporary#x]
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [showdb]


-- !query
SHOW TABLE EXTENDED LIKE 'show_t*'
-- !query analysis
ShowTablesCommand showdb, show_t*, [namespace#x, tableName#x, isTemporary#x, information#x], true


-- !query
SHOW TABLE EXTENDED
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "end of input",
    "hint" : ""
  }
}


-- !query
SHOW TABLE EXTENDED LIKE 'show_t1' PARTITION(c='Us', d=1)
-- !query analysis
ShowTablesCommand showdb, show_t1, [namespace#x, tableName#x, isTemporary#x, information#x], true, Map(c -> Us, d -> 1)


-- !query
SHOW TABLE EXTENDED PARTITION(c='Us', d=1)
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'PARTITION'",
    "hint" : ""
  }
}


-- !query
SHOW TABLE EXTENDED LIKE 'show_t*' PARTITION(c='Us', d=1)
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`show_t*`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 26,
    "stopIndex" : 34,
    "fragment" : "'show_t*'"
  } ]
}


-- !query
SHOW TABLE EXTENDED LIKE 'show_t1' PARTITION(c='Us')
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_1232",
  "messageParameters" : {
    "partitionColumnNames" : "c, d",
    "specKeys" : "c",
    "tableName" : "`spark_catalog`.`showdb`.`show_t1`"
  }
}


-- !query
SHOW TABLE EXTENDED LIKE 'show_t1' PARTITION(a='Us', d=1)
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "PARTITIONS_NOT_FOUND",
  "sqlState" : "428FT",
  "messageParameters" : {
    "partitionList" : "`a`",
    "tableName" : "`spark_catalog`.`showdb`.`show_t1`"
  }
}


-- !query
SHOW TABLE EXTENDED LIKE 'show_t1' PARTITION(c='Ch', d=1)
-- !query analysis
org.apache.spark.sql.catalyst.analysis.NoSuchPartitionException
{
  "errorClass" : "PARTITIONS_NOT_FOUND",
  "sqlState" : "428FT",
  "messageParameters" : {
    "partitionList" : "PARTITION (`c` = Ch, `d` = 1)",
    "tableName" : "`showdb`.`show_t1`"
  }
}


-- !query
DROP TABLE show_t1
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), showdb.show_t1


-- !query
DROP TABLE show_t2
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), showdb.show_t2


-- !query
DROP VIEW  show_t3
-- !query analysis
DropTempViewCommand show_t3


-- !query
DROP VIEW  global_temp.show_t4
-- !query analysis
DropTempViewCommand global_temp.show_t4


-- !query
USE default
-- !query analysis
SetCatalogAndNamespace
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [default]


-- !query
DROP DATABASE showdb
-- !query analysis
DropNamespace false, false
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [showdb]
