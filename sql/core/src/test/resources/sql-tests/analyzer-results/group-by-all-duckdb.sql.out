-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view integers as select * from values
  (0, 1),
  (0, 2),
  (1, 3),
  (1, NULL)
  as integers(g, i)
-- !query analysis
CreateViewCommand `integers`, select * from values
  (0, 1),
  (0, 2),
  (1, 3),
  (1, NULL)
  as integers(g, i), false, false, LocalTempView, UNSUPPORTED, true
   +- Project [g#x, i#x]
      +- SubqueryAlias integers
         +- LocalRelation [g#x, i#x]


-- !query
SELECT g, SUM(i) FROM integers GROUP BY ALL ORDER BY 1
-- !query analysis
Sort [g#x ASC NULLS FIRST], true
+- Aggregate [g#x], [g#x, sum(i#x) AS sum(i)#xL]
   +- SubqueryAlias integers
      +- View (`integers`, [g#x, i#x])
         +- Project [cast(g#x as int) AS g#x, cast(i#x as int) AS i#x]
            +- Project [g#x, i#x]
               +- SubqueryAlias integers
                  +- LocalRelation [g#x, i#x]


-- !query
SELECT g, SUM(i), COUNT(*), COUNT(i), SUM(g) FROM integers GROUP BY ALL ORDER BY 1
-- !query analysis
Sort [g#x ASC NULLS FIRST], true
+- Aggregate [g#x], [g#x, sum(i#x) AS sum(i)#xL, count(1) AS count(1)#xL, count(i#x) AS count(i)#xL, sum(g#x) AS sum(g)#xL]
   +- SubqueryAlias integers
      +- View (`integers`, [g#x, i#x])
         +- Project [cast(g#x as int) AS g#x, cast(i#x as int) AS i#x]
            +- Project [g#x, i#x]
               +- SubqueryAlias integers
                  +- LocalRelation [g#x, i#x]


-- !query
SELECT i%2, SUM(i), SUM(g) FROM integers GROUP BY ALL ORDER BY 1
-- !query analysis
Sort [(i % 2)#x ASC NULLS FIRST], true
+- Aggregate [(i#x % 2)], [(i#x % 2) AS (i % 2)#x, sum(i#x) AS sum(i)#xL, sum(g#x) AS sum(g)#xL]
   +- SubqueryAlias integers
      +- View (`integers`, [g#x, i#x])
         +- Project [cast(g#x as int) AS g#x, cast(i#x as int) AS i#x]
            +- Project [g#x, i#x]
               +- SubqueryAlias integers
                  +- LocalRelation [g#x, i#x]


-- !query
SELECT (g+i)%2, SUM(i), SUM(g) FROM integers GROUP BY ALL ORDER BY 1
-- !query analysis
Sort [((g + i) % 2)#x ASC NULLS FIRST], true
+- Aggregate [((g#x + i#x) % 2)], [((g#x + i#x) % 2) AS ((g + i) % 2)#x, sum(i#x) AS sum(i)#xL, sum(g#x) AS sum(g)#xL]
   +- SubqueryAlias integers
      +- View (`integers`, [g#x, i#x])
         +- Project [cast(g#x as int) AS g#x, cast(i#x as int) AS i#x]
            +- Project [g#x, i#x]
               +- SubqueryAlias integers
                  +- LocalRelation [g#x, i#x]


-- !query
SELECT (g+i)%2 + SUM(i), SUM(i), SUM(g) FROM integers GROUP BY ALL ORDER BY 1
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_ALL_IN_GROUP_BY",
  "sqlState" : "42803",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 55,
    "stopIndex" : 66,
    "fragment" : "GROUP BY ALL"
  } ]
}


-- !query
SELECT g, i, g%2, SUM(i), SUM(g) FROM integers GROUP BY ALL ORDER BY 1, 2, 3, 4
-- !query analysis
Sort [g#x ASC NULLS FIRST, i#x ASC NULLS FIRST, (g % 2)#x ASC NULLS FIRST, sum(i)#xL ASC NULLS FIRST], true
+- Aggregate [g#x, i#x, (g#x % 2)], [g#x, i#x, (g#x % 2) AS (g % 2)#x, sum(i#x) AS sum(i)#xL, sum(g#x) AS sum(g)#xL]
   +- SubqueryAlias integers
      +- View (`integers`, [g#x, i#x])
         +- Project [cast(g#x as int) AS g#x, cast(i#x as int) AS i#x]
            +- Project [g#x, i#x]
               +- SubqueryAlias integers
                  +- LocalRelation [g#x, i#x]


-- !query
SELECT c0 FROM (SELECT 1 c0) t0 GROUP BY ALL HAVING c0>0
-- !query analysis
Filter (c0#x > 0)
+- Aggregate [c0#x], [c0#x]
   +- SubqueryAlias t0
      +- Project [1 AS c0#x]
         +- OneRowRelation


-- !query
SELECT c0 FROM (SELECT 1 c0, 1 c1 UNION ALL SELECT 1, 2) t0 GROUP BY ALL ORDER BY c0
-- !query analysis
Sort [c0#x ASC NULLS FIRST], true
+- Aggregate [c0#x], [c0#x]
   +- SubqueryAlias t0
      +- Union false, false
         :- Project [1 AS c0#x, 1 AS c1#x]
         :  +- OneRowRelation
         +- Project [1 AS 1#x, 2 AS 2#x]
            +- OneRowRelation


-- !query
SELECT c0 FROM (SELECT 1 c0, 1 c1 UNION ALL SELECT 1, 2) t0 GROUP BY ALL HAVING c1>0 ORDER BY c0
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`c1`",
    "proposal" : "`c0`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 81,
    "stopIndex" : 82,
    "fragment" : "c1"
  } ]
}
