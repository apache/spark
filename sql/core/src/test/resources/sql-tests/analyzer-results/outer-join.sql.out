-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW t1 AS SELECT * FROM VALUES
(-234), (145), (367), (975), (298)
as t1(int_col1)
-- !query analysis
CreateViewCommand `t1`, SELECT * FROM VALUES
(-234), (145), (367), (975), (298)
as t1(int_col1), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [int_col1#x]
      +- SubqueryAlias t1
         +- LocalRelation [int_col1#x]


-- !query
CREATE OR REPLACE TEMPORARY VIEW t2 AS SELECT * FROM VALUES
(-769, -244), (-800, -409), (940, 86), (-507, 304), (-367, 158)
as t2(int_col0, int_col1)
-- !query analysis
CreateViewCommand `t2`, SELECT * FROM VALUES
(-769, -244), (-800, -409), (940, 86), (-507, 304), (-367, 158)
as t2(int_col0, int_col1), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [int_col0#x, int_col1#x]
      +- SubqueryAlias t2
         +- LocalRelation [int_col0#x, int_col1#x]


-- !query
SELECT
  (SUM(COALESCE(t1.int_col1, t2.int_col0))),
     ((COALESCE(t1.int_col1, t2.int_col0)) * 2)
FROM t1
RIGHT JOIN t2
  ON (t2.int_col0) = (t1.int_col1)
GROUP BY GREATEST(COALESCE(t2.int_col1, 109), COALESCE(t1.int_col1, -449)),
         COALESCE(t1.int_col1, t2.int_col0)
HAVING (SUM(COALESCE(t1.int_col1, t2.int_col0)))
            > ((COALESCE(t1.int_col1, t2.int_col0)) * 2)
-- !query analysis
Filter (sum(coalesce(int_col1, int_col0))#xL > cast((coalesce(int_col1, int_col0) * 2)#x as bigint))
+- Aggregate [greatest(coalesce(int_col1#x, 109), coalesce(int_col1#x, -449)), coalesce(int_col1#x, int_col0#x)], [sum(coalesce(int_col1#x, int_col0#x)) AS sum(coalesce(int_col1, int_col0))#xL, (coalesce(int_col1#x, int_col0#x) * 2) AS (coalesce(int_col1, int_col0) * 2)#x]
   +- Join RightOuter, (int_col0#x = int_col1#x)
      :- SubqueryAlias t1
      :  +- View (`t1`, [int_col1#x])
      :     +- Project [cast(int_col1#x as int) AS int_col1#x]
      :        +- Project [int_col1#x]
      :           +- SubqueryAlias t1
      :              +- LocalRelation [int_col1#x]
      +- SubqueryAlias t2
         +- View (`t2`, [int_col0#x, int_col1#x])
            +- Project [cast(int_col0#x as int) AS int_col0#x, cast(int_col1#x as int) AS int_col1#x]
               +- Project [int_col0#x, int_col1#x]
                  +- SubqueryAlias t2
                     +- LocalRelation [int_col0#x, int_col1#x]


-- !query
CREATE OR REPLACE TEMPORARY VIEW t1 AS SELECT * FROM VALUES (97) as t1(int_col1)
-- !query analysis
CreateViewCommand `t1`, SELECT * FROM VALUES (97) as t1(int_col1), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [int_col1#x]
      +- SubqueryAlias t1
         +- LocalRelation [int_col1#x]


-- !query
CREATE OR REPLACE TEMPORARY VIEW t2 AS SELECT * FROM VALUES (0) as t2(int_col1)
-- !query analysis
CreateViewCommand `t2`, SELECT * FROM VALUES (0) as t2(int_col1), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [int_col1#x]
      +- SubqueryAlias t2
         +- LocalRelation [int_col1#x]


-- !query
SELECT *
FROM (
SELECT
    COALESCE(t2.int_col1, t1.int_col1) AS int_col
    FROM t1
    LEFT JOIN t2 ON false
) t where (t.int_col) is not null
-- !query analysis
Project [int_col#x]
+- Filter isnotnull(int_col#x)
   +- SubqueryAlias t
      +- Project [coalesce(int_col1#x, int_col1#x) AS int_col#x]
         +- Join LeftOuter, false
            :- SubqueryAlias t1
            :  +- View (`t1`, [int_col1#x])
            :     +- Project [cast(int_col1#x as int) AS int_col1#x]
            :        +- Project [int_col1#x]
            :           +- SubqueryAlias t1
            :              +- LocalRelation [int_col1#x]
            +- SubqueryAlias t2
               +- View (`t2`, [int_col1#x])
                  +- Project [cast(int_col1#x as int) AS int_col1#x]
                     +- Project [int_col1#x]
                        +- SubqueryAlias t2
                           +- LocalRelation [int_col1#x]
