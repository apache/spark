-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW testData AS SELECT * FROM VALUES
(1, 1), (1, 2), (2, 1), (2, 2), (3, 1), (3, 2)
AS testData(a, b)
-- !query analysis
CreateViewCommand `testData`, SELECT * FROM VALUES
(1, 1), (1, 2), (2, 1), (2, 2), (3, 1), (3, 2)
AS testData(a, b), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [a#x, b#x]
      +- SubqueryAlias testData
         +- LocalRelation [a#x, b#x]


-- !query
SELECT a + b, b, SUM(a - b) FROM testData GROUP BY a + b, b WITH CUBE
-- !query analysis
Aggregate [(a#x + b#x)#x, b#x, spark_grouping_id#xL], [(a#x + b#x)#x AS (a + b)#x, b#x, sum((a#x - b#x)) AS sum((a - b))#xL]
+- Expand [[a#x, b#x, (a#x + b#x)#x, b#x, 0], [a#x, b#x, (a#x + b#x)#x, null, 1], [a#x, b#x, null, b#x, 2], [a#x, b#x, null, null, 3]], [a#x, b#x, (a#x + b#x)#x, b#x, spark_grouping_id#xL]
   +- Project [a#x, b#x, (a#x + b#x) AS (a#x + b#x)#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, SUM(b) FROM testData GROUP BY a, b WITH CUBE
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL], [a#x, b#x, sum(b#x) AS sum(b)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0], [a#x, b#x, a#x, null, 1], [a#x, b#x, null, b#x, 2], [a#x, b#x, null, null, 3]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a + b, b, SUM(a - b) FROM testData GROUP BY a + b, b WITH ROLLUP
-- !query analysis
Aggregate [(a#x + b#x)#x, b#x, spark_grouping_id#xL], [(a#x + b#x)#x AS (a + b)#x, b#x, sum((a#x - b#x)) AS sum((a - b))#xL]
+- Expand [[a#x, b#x, (a#x + b#x)#x, b#x, 0], [a#x, b#x, (a#x + b#x)#x, null, 1], [a#x, b#x, null, null, 3]], [a#x, b#x, (a#x + b#x)#x, b#x, spark_grouping_id#xL]
   +- Project [a#x, b#x, (a#x + b#x) AS (a#x + b#x)#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, SUM(b) FROM testData GROUP BY a, b WITH ROLLUP
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL], [a#x, b#x, sum(b#x) AS sum(b)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0], [a#x, b#x, a#x, null, 1], [a#x, b#x, null, null, 3]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
CREATE OR REPLACE TEMPORARY VIEW courseSales AS SELECT * FROM VALUES
("dotNET", 2012, 10000), ("Java", 2012, 20000), ("dotNET", 2012, 5000), ("dotNET", 2013, 48000), ("Java", 2013, 30000)
AS courseSales(course, year, earnings)
-- !query analysis
CreateViewCommand `courseSales`, SELECT * FROM VALUES
("dotNET", 2012, 10000), ("Java", 2012, 20000), ("dotNET", 2012, 5000), ("dotNET", 2013, 48000), ("Java", 2013, 30000)
AS courseSales(course, year, earnings), false, true, LocalTempView, UNSUPPORTED, true
   +- Project [course#x, year#x, earnings#x]
      +- SubqueryAlias courseSales
         +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY ROLLUP(course, year) ORDER BY course, year
-- !query analysis
Sort [course#x ASC NULLS FIRST, year#x ASC NULLS FIRST], true
+- Aggregate [course#x, year#x, spark_grouping_id#xL], [course#x, year#x, sum(earnings#x) AS sum(earnings)#xL]
   +- Expand [[course#x, year#x, earnings#x, course#x, year#x, 0], [course#x, year#x, earnings#x, course#x, null, 1], [course#x, year#x, earnings#x, null, null, 3]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL]
      +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
         +- SubqueryAlias coursesales
            +- View (`courseSales`, [course#x, year#x, earnings#x])
               +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                  +- Project [course#x, year#x, earnings#x]
                     +- SubqueryAlias courseSales
                        +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY ROLLUP(course, year, (course, year)) ORDER BY course, year
-- !query analysis
Sort [course#x ASC NULLS FIRST, year#x ASC NULLS FIRST], true
+- Aggregate [course#x, year#x, spark_grouping_id#xL, _gen_grouping_pos#x], [course#x, year#x, sum(earnings#x) AS sum(earnings)#xL]
   +- Expand [[course#x, year#x, earnings#x, course#x, year#x, 0, 0], [course#x, year#x, earnings#x, course#x, year#x, 0, 1], [course#x, year#x, earnings#x, course#x, null, 1, 2], [course#x, year#x, earnings#x, null, null, 3, 3]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL, _gen_grouping_pos#x]
      +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
         +- SubqueryAlias coursesales
            +- View (`courseSales`, [course#x, year#x, earnings#x])
               +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                  +- Project [course#x, year#x, earnings#x]
                     +- SubqueryAlias courseSales
                        +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY ROLLUP(course, year, (course, year), ()) ORDER BY course, year
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_0051",
  "messageParameters" : {
    "element" : "ROLLUP"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 53,
    "stopIndex" : 101,
    "fragment" : "GROUP BY ROLLUP(course, year, (course, year), ())"
  } ]
}


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY CUBE(course, year) ORDER BY course, year
-- !query analysis
Sort [course#x ASC NULLS FIRST, year#x ASC NULLS FIRST], true
+- Aggregate [course#x, year#x, spark_grouping_id#xL], [course#x, year#x, sum(earnings#x) AS sum(earnings)#xL]
   +- Expand [[course#x, year#x, earnings#x, course#x, year#x, 0], [course#x, year#x, earnings#x, course#x, null, 1], [course#x, year#x, earnings#x, null, year#x, 2], [course#x, year#x, earnings#x, null, null, 3]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL]
      +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
         +- SubqueryAlias coursesales
            +- View (`courseSales`, [course#x, year#x, earnings#x])
               +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                  +- Project [course#x, year#x, earnings#x]
                     +- SubqueryAlias courseSales
                        +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY CUBE(course, year, (course, year)) ORDER BY course, year
-- !query analysis
Sort [course#x ASC NULLS FIRST, year#x ASC NULLS FIRST], true
+- Aggregate [course#x, year#x, spark_grouping_id#xL, _gen_grouping_pos#x], [course#x, year#x, sum(earnings#x) AS sum(earnings)#xL]
   +- Expand [[course#x, year#x, earnings#x, course#x, year#x, 0, 0], [course#x, year#x, earnings#x, course#x, year#x, 0, 1], [course#x, year#x, earnings#x, course#x, year#x, 0, 2], [course#x, year#x, earnings#x, course#x, null, 1, 3], [course#x, year#x, earnings#x, course#x, year#x, 0, 4], [course#x, year#x, earnings#x, null, year#x, 2, 5], [course#x, year#x, earnings#x, course#x, year#x, 0, 6], [course#x, year#x, earnings#x, null, null, 3, 7]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL, _gen_grouping_pos#x]
      +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
         +- SubqueryAlias coursesales
            +- View (`courseSales`, [course#x, year#x, earnings#x])
               +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                  +- Project [course#x, year#x, earnings#x]
                     +- SubqueryAlias courseSales
                        +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY CUBE(course, year, (course, year), ()) ORDER BY course, year
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_0051",
  "messageParameters" : {
    "element" : "CUBE"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 53,
    "stopIndex" : 99,
    "fragment" : "GROUP BY CUBE(course, year, (course, year), ())"
  } ]
}


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY course, year GROUPING SETS(course, year)
-- !query analysis
Aggregate [course#x, year#x, spark_grouping_id#xL], [course#x, year#x, sum(earnings#x) AS sum(earnings)#xL]
+- Expand [[course#x, year#x, earnings#x, course#x, null, 1], [course#x, year#x, earnings#x, null, year#x, 2]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL]
   +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
      +- SubqueryAlias coursesales
         +- View (`courseSales`, [course#x, year#x, earnings#x])
            +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
               +- Project [course#x, year#x, earnings#x]
                  +- SubqueryAlias courseSales
                     +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY course, year GROUPING SETS(course, year, ())
-- !query analysis
Aggregate [course#x, year#x, spark_grouping_id#xL], [course#x, year#x, sum(earnings#x) AS sum(earnings)#xL]
+- Expand [[course#x, year#x, earnings#x, course#x, null, 1], [course#x, year#x, earnings#x, null, year#x, 2], [course#x, year#x, earnings#x, null, null, 3]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL]
   +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
      +- SubqueryAlias coursesales
         +- View (`courseSales`, [course#x, year#x, earnings#x])
            +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
               +- Project [course#x, year#x, earnings#x]
                  +- SubqueryAlias courseSales
                     +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY course, year GROUPING SETS(course)
-- !query analysis
Aggregate [course#x, year#x, spark_grouping_id#xL], [course#x, year#x, sum(earnings#x) AS sum(earnings)#xL]
+- Expand [[course#x, year#x, earnings#x, course#x, null, 1]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL]
   +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
      +- SubqueryAlias coursesales
         +- View (`courseSales`, [course#x, year#x, earnings#x])
            +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
               +- Project [course#x, year#x, earnings#x]
                  +- SubqueryAlias courseSales
                     +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY course, year GROUPING SETS(year)
-- !query analysis
Aggregate [course#x, year#x, spark_grouping_id#xL], [course#x, year#x, sum(earnings#x) AS sum(earnings)#xL]
+- Expand [[course#x, year#x, earnings#x, null, year#x, 2]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL]
   +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
      +- SubqueryAlias coursesales
         +- View (`courseSales`, [course#x, year#x, earnings#x])
            +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
               +- Project [course#x, year#x, earnings#x]
                  +- SubqueryAlias courseSales
                     +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY course, CUBE(course, year) ORDER BY course, year
-- !query analysis
Sort [course#x ASC NULLS FIRST, year#x ASC NULLS FIRST], true
+- Aggregate [course#x, year#x, spark_grouping_id#xL, _gen_grouping_pos#x], [course#x, year#x, sum(earnings#x) AS sum(earnings)#xL]
   +- Expand [[course#x, year#x, earnings#x, course#x, year#x, 0, 0], [course#x, year#x, earnings#x, course#x, null, 1, 1], [course#x, year#x, earnings#x, course#x, year#x, 0, 2], [course#x, year#x, earnings#x, course#x, null, 1, 3]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL, _gen_grouping_pos#x]
      +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
         +- SubqueryAlias coursesales
            +- View (`courseSales`, [course#x, year#x, earnings#x])
               +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                  +- Project [course#x, year#x, earnings#x]
                     +- SubqueryAlias courseSales
                        +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY CUBE(course, year), ROLLUP(course, year) ORDER BY course, year
-- !query analysis
Sort [course#x ASC NULLS FIRST, year#x ASC NULLS FIRST], true
+- Aggregate [course#x, year#x, spark_grouping_id#xL, _gen_grouping_pos#x], [course#x, year#x, sum(earnings#x) AS sum(earnings)#xL]
   +- Expand [[course#x, year#x, earnings#x, course#x, year#x, 0, 0], [course#x, year#x, earnings#x, course#x, year#x, 0, 1], [course#x, year#x, earnings#x, course#x, year#x, 0, 2], [course#x, year#x, earnings#x, course#x, year#x, 0, 3], [course#x, year#x, earnings#x, course#x, null, 1, 4], [course#x, year#x, earnings#x, course#x, null, 1, 5], [course#x, year#x, earnings#x, course#x, year#x, 0, 6], [course#x, year#x, earnings#x, course#x, year#x, 0, 7], [course#x, year#x, earnings#x, null, year#x, 2, 8], [course#x, year#x, earnings#x, course#x, year#x, 0, 9], [course#x, year#x, earnings#x, course#x, null, 1, 10], [course#x, year#x, earnings#x, null, null, 3, 11]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL, _gen_grouping_pos#x]
      +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
         +- SubqueryAlias coursesales
            +- View (`courseSales`, [course#x, year#x, earnings#x])
               +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                  +- Project [course#x, year#x, earnings#x]
                     +- SubqueryAlias courseSales
                        +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY CUBE(course, year), ROLLUP(course, year), GROUPING SETS(course, year) ORDER BY course, year
-- !query analysis
Sort [course#x ASC NULLS FIRST, year#x ASC NULLS FIRST], true
+- Aggregate [course#x, year#x, spark_grouping_id#xL, _gen_grouping_pos#x], [course#x, year#x, sum(earnings#x) AS sum(earnings)#xL]
   +- Expand [[course#x, year#x, earnings#x, course#x, year#x, 0, 0], [course#x, year#x, earnings#x, course#x, year#x, 0, 1], [course#x, year#x, earnings#x, course#x, year#x, 0, 2], [course#x, year#x, earnings#x, course#x, year#x, 0, 3], [course#x, year#x, earnings#x, course#x, year#x, 0, 4], [course#x, year#x, earnings#x, course#x, year#x, 0, 5], [course#x, year#x, earnings#x, course#x, year#x, 0, 6], [course#x, year#x, earnings#x, course#x, year#x, 0, 7], [course#x, year#x, earnings#x, course#x, null, 1, 8], [course#x, year#x, earnings#x, course#x, year#x, 0, 9], [course#x, year#x, earnings#x, course#x, null, 1, 10], [course#x, year#x, earnings#x, course#x, year#x, 0, 11], [course#x, year#x, earnings#x, course#x, year#x, 0, 12], [course#x, year#x, earnings#x, course#x, year#x, 0, 13], [course#x, year#x, earnings#x, course#x, year#x, 0, 14], [course#x, year#x, earnings#x, course#x, year#x, 0, 15], [course#x, year#x, earnings#x, course#x, year#x, 0, 16], [course#x, year#x, earnings#x, null, year#x, 2, 17], [course#x, year#x, earnings#x, course#x, year#x, 0, 18], [course#x, year#x, earnings#x, course#x, year#x, 0, 19], [course#x, year#x, earnings#x, course#x, null, 1, 20], [course#x, year#x, earnings#x, course#x, year#x, 0, 21], [course#x, year#x, earnings#x, course#x, null, 1, 22], [course#x, year#x, earnings#x, null, year#x, 2, 23]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL, _gen_grouping_pos#x]
      +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
         +- SubqueryAlias coursesales
            +- View (`courseSales`, [course#x, year#x, earnings#x])
               +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                  +- Project [course#x, year#x, earnings#x]
                     +- SubqueryAlias courseSales
                        +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, SUM(earnings) AS sum FROM courseSales
GROUP BY course, earnings GROUPING SETS((), (course), (course, earnings)) ORDER BY course, sum
-- !query analysis
Sort [course#x ASC NULLS FIRST, sum#xL ASC NULLS FIRST], true
+- Aggregate [course#x, earnings#x, spark_grouping_id#xL], [course#x, sum(earnings#x) AS sum#xL]
   +- Expand [[course#x, year#x, earnings#x, null, null, 3], [course#x, year#x, earnings#x, course#x, null, 1], [course#x, year#x, earnings#x, course#x, earnings#x, 0]], [course#x, year#x, earnings#x, course#x, earnings#x, spark_grouping_id#xL]
      +- Project [course#x, year#x, earnings#x, course#x AS course#x, earnings#x AS earnings#x]
         +- SubqueryAlias coursesales
            +- View (`courseSales`, [course#x, year#x, earnings#x])
               +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                  +- Project [course#x, year#x, earnings#x]
                     +- SubqueryAlias courseSales
                        +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, SUM(earnings) AS sum, GROUPING_ID(course, earnings) FROM courseSales
GROUP BY course, earnings GROUPING SETS((), (course), (course, earnings)) ORDER BY course, sum
-- !query analysis
Sort [course#x ASC NULLS FIRST, sum#xL ASC NULLS FIRST], true
+- Aggregate [course#x, earnings#x, spark_grouping_id#xL], [course#x, sum(earnings#x) AS sum#xL, spark_grouping_id#xL AS grouping_id(course, earnings)#xL]
   +- Expand [[course#x, year#x, earnings#x, null, null, 3], [course#x, year#x, earnings#x, course#x, null, 1], [course#x, year#x, earnings#x, course#x, earnings#x, 0]], [course#x, year#x, earnings#x, course#x, earnings#x, spark_grouping_id#xL]
      +- Project [course#x, year#x, earnings#x, course#x AS course#x, earnings#x AS earnings#x]
         +- SubqueryAlias coursesales
            +- View (`courseSales`, [course#x, year#x, earnings#x])
               +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                  +- Project [course#x, year#x, earnings#x]
                     +- SubqueryAlias courseSales
                        +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, GROUPING(course), GROUPING(year), GROUPING_ID(course, year) FROM courseSales
GROUP BY CUBE(course, year)
-- !query analysis
Aggregate [course#x, year#x, spark_grouping_id#xL], [course#x, year#x, cast((shiftright(spark_grouping_id#xL, 1) & 1) as tinyint) AS grouping(course)#x, cast((shiftright(spark_grouping_id#xL, 0) & 1) as tinyint) AS grouping(year)#x, spark_grouping_id#xL AS grouping_id(course, year)#xL]
+- Expand [[course#x, year#x, earnings#x, course#x, year#x, 0], [course#x, year#x, earnings#x, course#x, null, 1], [course#x, year#x, earnings#x, null, year#x, 2], [course#x, year#x, earnings#x, null, null, 3]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL]
   +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
      +- SubqueryAlias coursesales
         +- View (`courseSales`, [course#x, year#x, earnings#x])
            +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
               +- Project [course#x, year#x, earnings#x]
                  +- SubqueryAlias courseSales
                     +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, GROUPING(course) FROM courseSales GROUP BY course, year
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNSUPPORTED_GROUPING_EXPRESSION",
  "sqlState" : "42K0E",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 22,
    "stopIndex" : 37,
    "fragment" : "GROUPING(course)"
  } ]
}


-- !query
SELECT course, year, GROUPING_ID(course, year) FROM courseSales GROUP BY course, year
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNSUPPORTED_GROUPING_EXPRESSION",
  "sqlState" : "42K0E",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 22,
    "stopIndex" : 46,
    "fragment" : "GROUPING_ID(course, year)"
  } ]
}


-- !query
SELECT course, year, grouping__id FROM courseSales GROUP BY CUBE(course, year) ORDER BY grouping__id, course, year
-- !query analysis
Sort [grouping__id#xL ASC NULLS FIRST, course#x ASC NULLS FIRST, year#x ASC NULLS FIRST], true
+- Aggregate [course#x, year#x, spark_grouping_id#xL], [course#x, year#x, spark_grouping_id#xL AS grouping__id#xL]
   +- Expand [[course#x, year#x, earnings#x, course#x, year#x, 0], [course#x, year#x, earnings#x, course#x, null, 1], [course#x, year#x, earnings#x, null, year#x, 2], [course#x, year#x, earnings#x, null, null, 3]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL]
      +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
         +- SubqueryAlias coursesales
            +- View (`courseSales`, [course#x, year#x, earnings#x])
               +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                  +- Project [course#x, year#x, earnings#x]
                     +- SubqueryAlias courseSales
                        +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year FROM courseSales GROUP BY CUBE(course, year)
HAVING GROUPING(year) = 1 AND GROUPING_ID(course, year) > 0 ORDER BY course, year
-- !query analysis
Sort [course#x ASC NULLS FIRST, year#x ASC NULLS FIRST], true
+- Project [course#x, year#x]
   +- Filter ((cast(cast((shiftright(spark_grouping_id#xL, 0) & 1) as tinyint) as int) = 1) AND (spark_grouping_id#xL > cast(0 as bigint)))
      +- Aggregate [course#x, year#x, spark_grouping_id#xL], [course#x, year#x, spark_grouping_id#xL, spark_grouping_id#xL]
         +- Expand [[course#x, year#x, earnings#x, course#x, year#x, 0], [course#x, year#x, earnings#x, course#x, null, 1], [course#x, year#x, earnings#x, null, year#x, 2], [course#x, year#x, earnings#x, null, null, 3]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL]
            +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
               +- SubqueryAlias coursesales
                  +- View (`courseSales`, [course#x, year#x, earnings#x])
                     +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                        +- Project [course#x, year#x, earnings#x]
                           +- SubqueryAlias courseSales
                              +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year FROM courseSales GROUP BY course, year HAVING GROUPING(course) > 0
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_GROUPING_EXPRESSION",
  "sqlState" : "42K0E"
}


-- !query
SELECT course, year FROM courseSales GROUP BY course, year HAVING GROUPING_ID(course) > 0
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_GROUPING_EXPRESSION",
  "sqlState" : "42K0E"
}


-- !query
SELECT course, year FROM courseSales GROUP BY CUBE(course, year) HAVING grouping__id > 0
-- !query analysis
Project [course#x, year#x]
+- Filter (spark_grouping_id#xL > cast(0 as bigint))
   +- Aggregate [course#x, year#x, spark_grouping_id#xL], [course#x, year#x, spark_grouping_id#xL]
      +- Expand [[course#x, year#x, earnings#x, course#x, year#x, 0], [course#x, year#x, earnings#x, course#x, null, 1], [course#x, year#x, earnings#x, null, year#x, 2], [course#x, year#x, earnings#x, null, null, 3]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL]
         +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
            +- SubqueryAlias coursesales
               +- View (`courseSales`, [course#x, year#x, earnings#x])
                  +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                     +- Project [course#x, year#x, earnings#x]
                        +- SubqueryAlias courseSales
                           +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, GROUPING(course), GROUPING(year) FROM courseSales GROUP BY CUBE(course, year)
ORDER BY GROUPING(course), GROUPING(year), course, year
-- !query analysis
Project [course#x, year#x, grouping(course)#x, grouping(year)#x]
+- Sort [cast((shiftright(spark_grouping_id#xL, 1) & 1) as tinyint) ASC NULLS FIRST, cast((shiftright(spark_grouping_id#xL, 0) & 1) as tinyint) ASC NULLS FIRST, course#x ASC NULLS FIRST, year#x ASC NULLS FIRST], true
   +- Aggregate [course#x, year#x, spark_grouping_id#xL], [course#x, year#x, cast((shiftright(spark_grouping_id#xL, 1) & 1) as tinyint) AS grouping(course)#x, cast((shiftright(spark_grouping_id#xL, 0) & 1) as tinyint) AS grouping(year)#x, spark_grouping_id#xL, spark_grouping_id#xL]
      +- Expand [[course#x, year#x, earnings#x, course#x, year#x, 0], [course#x, year#x, earnings#x, course#x, null, 1], [course#x, year#x, earnings#x, null, year#x, 2], [course#x, year#x, earnings#x, null, null, 3]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL]
         +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
            +- SubqueryAlias coursesales
               +- View (`courseSales`, [course#x, year#x, earnings#x])
                  +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                     +- Project [course#x, year#x, earnings#x]
                        +- SubqueryAlias courseSales
                           +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year, GROUPING_ID(course, year) FROM courseSales GROUP BY CUBE(course, year)
ORDER BY GROUPING(course), GROUPING(year), course, year
-- !query analysis
Project [course#x, year#x, grouping_id(course, year)#xL]
+- Sort [cast((shiftright(spark_grouping_id#xL, 1) & 1) as tinyint) ASC NULLS FIRST, cast((shiftright(spark_grouping_id#xL, 0) & 1) as tinyint) ASC NULLS FIRST, course#x ASC NULLS FIRST, year#x ASC NULLS FIRST], true
   +- Aggregate [course#x, year#x, spark_grouping_id#xL], [course#x, year#x, spark_grouping_id#xL AS grouping_id(course, year)#xL, spark_grouping_id#xL, spark_grouping_id#xL]
      +- Expand [[course#x, year#x, earnings#x, course#x, year#x, 0], [course#x, year#x, earnings#x, course#x, null, 1], [course#x, year#x, earnings#x, null, year#x, 2], [course#x, year#x, earnings#x, null, null, 3]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL]
         +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
            +- SubqueryAlias coursesales
               +- View (`courseSales`, [course#x, year#x, earnings#x])
                  +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                     +- Project [course#x, year#x, earnings#x]
                        +- SubqueryAlias courseSales
                           +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT course, year FROM courseSales GROUP BY course, year ORDER BY GROUPING(course)
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_GROUPING_EXPRESSION",
  "sqlState" : "42K0E"
}


-- !query
SELECT course, year FROM courseSales GROUP BY course, year ORDER BY GROUPING_ID(course)
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_GROUPING_EXPRESSION",
  "sqlState" : "42K0E"
}


-- !query
SELECT course, year FROM courseSales GROUP BY CUBE(course, year) ORDER BY grouping__id, course, year
-- !query analysis
Project [course#x, year#x]
+- Sort [spark_grouping_id#xL ASC NULLS FIRST, course#x ASC NULLS FIRST, year#x ASC NULLS FIRST], true
   +- Aggregate [course#x, year#x, spark_grouping_id#xL], [course#x, year#x, spark_grouping_id#xL]
      +- Expand [[course#x, year#x, earnings#x, course#x, year#x, 0], [course#x, year#x, earnings#x, course#x, null, 1], [course#x, year#x, earnings#x, null, year#x, 2], [course#x, year#x, earnings#x, null, null, 3]], [course#x, year#x, earnings#x, course#x, year#x, spark_grouping_id#xL]
         +- Project [course#x, year#x, earnings#x, course#x AS course#x, year#x AS year#x]
            +- SubqueryAlias coursesales
               +- View (`courseSales`, [course#x, year#x, earnings#x])
                  +- Project [cast(course#x as string) AS course#x, cast(year#x as int) AS year#x, cast(earnings#x as int) AS earnings#x]
                     +- Project [course#x, year#x, earnings#x]
                        +- SubqueryAlias courseSales
                           +- LocalRelation [course#x, year#x, earnings#x]


-- !query
SELECT a + b AS k1, b AS k2, SUM(a - b) FROM testData GROUP BY CUBE(k1, k2)
-- !query analysis
Aggregate [k1#x, k2#x, spark_grouping_id#xL], [k1#x, k2#x, sum((a#x - b#x)) AS sum((a - b))#xL]
+- Expand [[a#x, b#x, k1#x, k2#x, 0], [a#x, b#x, k1#x, null, 1], [a#x, b#x, null, k2#x, 2], [a#x, b#x, null, null, 3]], [a#x, b#x, k1#x, k2#x, spark_grouping_id#xL]
   +- Project [a#x, b#x, (a#x + b#x) AS k1#x, b#x AS k2#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a + b AS k, b, SUM(a - b) FROM testData GROUP BY ROLLUP(k, b)
-- !query analysis
Aggregate [k#x, b#x, spark_grouping_id#xL], [k#x, b#x, sum((a#x - b#x)) AS sum((a - b))#xL]
+- Expand [[a#x, b#x, k#x, b#x, 0], [a#x, b#x, k#x, null, 1], [a#x, b#x, null, null, 3]], [a#x, b#x, k#x, b#x, spark_grouping_id#xL]
   +- Project [a#x, b#x, (a#x + b#x) AS k#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a + b, b AS k, SUM(a - b) FROM testData GROUP BY a + b, k GROUPING SETS(k)
-- !query analysis
Aggregate [(a#x + b#x)#x, k#x, spark_grouping_id#xL], [(a#x + b#x)#x AS (a + b)#x, k#x, sum((a#x - b#x)) AS sum((a - b))#xL]
+- Expand [[a#x, b#x, null, k#x, 2]], [a#x, b#x, (a#x + b#x)#x, k#x, spark_grouping_id#xL]
   +- Project [a#x, b#x, (a#x + b#x) AS (a#x + b#x)#x, b#x AS k#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, b, CUBE(a, b)
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, b#x, 0, 1], [a#x, b#x, a#x, b#x, 0, 2], [a#x, b#x, a#x, b#x, 0, 3]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, b, ROLLUP(a, b)
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, b#x, 0, 1], [a#x, b#x, a#x, b#x, 0, 2]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY CUBE(a, b), ROLLUP(a, b)
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, b#x, 0, 1], [a#x, b#x, a#x, b#x, 0, 2], [a#x, b#x, a#x, b#x, 0, 3], [a#x, b#x, a#x, null, 1, 4], [a#x, b#x, a#x, null, 1, 5], [a#x, b#x, a#x, b#x, 0, 6], [a#x, b#x, a#x, b#x, 0, 7], [a#x, b#x, null, b#x, 2, 8], [a#x, b#x, a#x, b#x, 0, 9], [a#x, b#x, a#x, null, 1, 10], [a#x, b#x, null, null, 3, 11]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, CUBE(a, b), ROLLUP(b)
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, b#x, 0, 1], [a#x, b#x, a#x, b#x, 0, 2], [a#x, b#x, a#x, null, 1, 3], [a#x, b#x, a#x, b#x, 0, 4], [a#x, b#x, a#x, b#x, 0, 5], [a#x, b#x, a#x, b#x, 0, 6], [a#x, b#x, a#x, null, 1, 7]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS((a, b), (a), ())
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, null, 1, 1], [a#x, b#x, a#x, null, 1, 2]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, CUBE(a, b), GROUPING SETS((a, b), (a), ())
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, b#x, 0, 1], [a#x, b#x, a#x, b#x, 0, 2], [a#x, b#x, a#x, b#x, 0, 3], [a#x, b#x, a#x, null, 1, 4], [a#x, b#x, a#x, null, 1, 5], [a#x, b#x, a#x, b#x, 0, 6], [a#x, b#x, a#x, b#x, 0, 7], [a#x, b#x, a#x, b#x, 0, 8], [a#x, b#x, a#x, b#x, 0, 9], [a#x, b#x, a#x, null, 1, 10], [a#x, b#x, a#x, null, 1, 11]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, CUBE(a, b), ROLLUP(a, b), GROUPING SETS((a, b), (a), ())
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, b#x, 0, 1], [a#x, b#x, a#x, b#x, 0, 2], [a#x, b#x, a#x, b#x, 0, 3], [a#x, b#x, a#x, b#x, 0, 4], [a#x, b#x, a#x, b#x, 0, 5], [a#x, b#x, a#x, b#x, 0, 6], [a#x, b#x, a#x, b#x, 0, 7], [a#x, b#x, a#x, b#x, 0, 8], [a#x, b#x, a#x, b#x, 0, 9], [a#x, b#x, a#x, b#x, 0, 10], [a#x, b#x, a#x, b#x, 0, 11], [a#x, b#x, a#x, b#x, 0, 12], [a#x, b#x, a#x, null, 1, 13], [a#x, b#x, a#x, null, 1, 14], [a#x, b#x, a#x, b#x, 0, 15], [a#x, b#x, a#x, null, 1, 16], [a#x, b#x, a#x, null, 1, 17], [a#x, b#x, a#x, b#x, 0, 18], [a#x, b#x, a#x, b#x, 0, 19], [a#x, b#x, a#x, b#x, 0, 20], [a#x, b#x, a#x, b#x, 0, 21], [a#x, b#x, a#x, b#x, 0, 22], [a#x, b#x, a#x, b#x, 0, 23], [a#x, b#x, a#x, b#x, 0, 24], ... 11 more fields], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS(ROLLUP(a, b))
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, null, 1, 1], [a#x, b#x, a#x, null, 1, 2]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS(GROUPING SETS((a, b), (a), ()))
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, null, 1, 1], [a#x, b#x, a#x, null, 1, 2]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS((a, b), GROUPING SETS(ROLLUP(a, b)))
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, b#x, 0, 1], [a#x, b#x, a#x, null, 1, 2], [a#x, b#x, a#x, null, 1, 3]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS((a, b, a, b), (a, b, a), (a, b))
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, b#x, 0, 1], [a#x, b#x, a#x, b#x, 0, 2]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS(GROUPING SETS((a, b, a, b), (a, b, a), (a, b)))
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, b#x, 0, 1], [a#x, b#x, a#x, b#x, 0, 2]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS(ROLLUP(a, b), CUBE(a, b))
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, null, 1, 1], [a#x, b#x, a#x, null, 1, 2], [a#x, b#x, a#x, b#x, 0, 3], [a#x, b#x, a#x, null, 1, 4], [a#x, b#x, a#x, b#x, 0, 5], [a#x, b#x, a#x, null, 1, 6]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS(GROUPING SETS((a, b), (a), ()), GROUPING SETS((a, b), (a), (b), ()))
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, null, 1, 1], [a#x, b#x, a#x, null, 1, 2], [a#x, b#x, a#x, b#x, 0, 3], [a#x, b#x, a#x, null, 1, 4], [a#x, b#x, a#x, b#x, 0, 5], [a#x, b#x, a#x, null, 1, 6]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS((a, b), (a), (), (a, b), (a), (b), ())
-- !query analysis
Aggregate [a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x], [a#x, b#x, count(1) AS count(1)#xL]
+- Expand [[a#x, b#x, a#x, b#x, 0, 0], [a#x, b#x, a#x, null, 1, 1], [a#x, b#x, a#x, null, 1, 2], [a#x, b#x, a#x, b#x, 0, 3], [a#x, b#x, a#x, null, 1, 4], [a#x, b#x, a#x, b#x, 0, 5], [a#x, b#x, a#x, null, 1, 6]], [a#x, b#x, a#x, b#x, spark_grouping_id#xL, _gen_grouping_pos#x]
   +- Project [a#x, b#x, a#x AS a#x, b#x AS b#x]
      +- SubqueryAlias testdata
         +- View (`testData`, [a#x, b#x])
            +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]
               +- Project [a#x, b#x]
                  +- SubqueryAlias testData
                     +- LocalRelation [a#x, b#x]
