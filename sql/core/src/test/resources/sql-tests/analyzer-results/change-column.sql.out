-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TABLE test_change(a INT, b STRING, c INT) using parquet
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`test_change`, false


-- !query
DESC test_change
-- !query analysis
DescribeTableCommand `spark_catalog`.`default`.`test_change`, false, [col_name#x, data_type#x, comment#x]


-- !query
ALTER TABLE test_change CHANGE a
-- !query analysis
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_0035",
  "messageParameters" : {
    "message" : "ALTER TABLE table CHANGE COLUMN requires a TYPE, a SET/DROP, a COMMENT, or a FIRST/AFTER"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 32,
    "fragment" : "ALTER TABLE test_change CHANGE a"
  } ]
}


-- !query
DESC test_change
-- !query analysis
DescribeTableCommand `spark_catalog`.`default`.`test_change`, false, [col_name#x, data_type#x, comment#x]


-- !query
ALTER TABLE test_change RENAME COLUMN a TO a1
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.TABLE_OPERATION",
  "sqlState" : "0A000",
  "messageParameters" : {
    "operation" : "RENAME COLUMN",
    "tableName" : "`spark_catalog`.`default`.`test_change`"
  }
}


-- !query
DESC test_change
-- !query analysis
DescribeTableCommand `spark_catalog`.`default`.`test_change`, false, [col_name#x, data_type#x, comment#x]


-- !query
ALTER TABLE test_change CHANGE a TYPE STRING
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "NOT_SUPPORTED_CHANGE_COLUMN",
  "sqlState" : "0A000",
  "messageParameters" : {
    "newName" : "`a`",
    "newType" : "\"STRING\"",
    "originName" : "`a`",
    "originType" : "\"INT\"",
    "table" : "`spark_catalog`.`default`.`test_change`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 44,
    "fragment" : "ALTER TABLE test_change CHANGE a TYPE STRING"
  } ]
}


-- !query
DESC test_change
-- !query analysis
DescribeTableCommand `spark_catalog`.`default`.`test_change`, false, [col_name#x, data_type#x, comment#x]


-- !query
ALTER TABLE test_change CHANGE a AFTER b
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.TABLE_OPERATION",
  "sqlState" : "0A000",
  "messageParameters" : {
    "operation" : "ALTER COLUMN ... FIRST | AFTER",
    "tableName" : "`spark_catalog`.`default`.`test_change`"
  }
}


-- !query
ALTER TABLE test_change CHANGE b FIRST
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.TABLE_OPERATION",
  "sqlState" : "0A000",
  "messageParameters" : {
    "operation" : "ALTER COLUMN ... FIRST | AFTER",
    "tableName" : "`spark_catalog`.`default`.`test_change`"
  }
}


-- !query
DESC test_change
-- !query analysis
DescribeTableCommand `spark_catalog`.`default`.`test_change`, false, [col_name#x, data_type#x, comment#x]


-- !query
ALTER TABLE test_change CHANGE a COMMENT 'this is column a'
-- !query analysis
AlterTableChangeColumnCommand `spark_catalog`.`default`.`test_change`, a, StructField(a,IntegerType,true)


-- !query
ALTER TABLE test_change CHANGE b COMMENT '#*02?`'
-- !query analysis
AlterTableChangeColumnCommand `spark_catalog`.`default`.`test_change`, b, StructField(b,StringType,true)


-- !query
ALTER TABLE test_change CHANGE c COMMENT ''
-- !query analysis
AlterTableChangeColumnCommand `spark_catalog`.`default`.`test_change`, c, StructField(c,IntegerType,true)


-- !query
DESC test_change
-- !query analysis
DescribeTableCommand `spark_catalog`.`default`.`test_change`, false, [col_name#x, data_type#x, comment#x]


-- !query
ALTER TABLE test_change CHANGE a TYPE INT
-- !query analysis
AlterTableChangeColumnCommand `spark_catalog`.`default`.`test_change`, a, StructField(a,IntegerType,true)


-- !query
ALTER TABLE test_change CHANGE a COMMENT 'this is column a'
-- !query analysis
AlterTableChangeColumnCommand `spark_catalog`.`default`.`test_change`, a, StructField(a,IntegerType,true)


-- !query
DESC test_change
-- !query analysis
DescribeTableCommand `spark_catalog`.`default`.`test_change`, false, [col_name#x, data_type#x, comment#x]


-- !query
ALTER TABLE test_change CHANGE invalid_col TYPE INT
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`invalid_col`",
    "proposal" : "`a`, `b`, `c`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 51,
    "fragment" : "ALTER TABLE test_change CHANGE invalid_col TYPE INT"
  } ]
}


-- !query
DESC test_change
-- !query analysis
DescribeTableCommand `spark_catalog`.`default`.`test_change`, false, [col_name#x, data_type#x, comment#x]


-- !query
ALTER TABLE test_change CHANGE A COMMENT 'case insensitivity'
-- !query analysis
AlterTableChangeColumnCommand `spark_catalog`.`default`.`test_change`, a, StructField(a,IntegerType,true)


-- !query
DESC test_change
-- !query analysis
DescribeTableCommand `spark_catalog`.`default`.`test_change`, false, [col_name#x, data_type#x, comment#x]


-- !query
CREATE TEMPORARY VIEW temp_view(a, b) AS SELECT 1, "one"
-- !query analysis
CreateViewCommand `temp_view`, [(a,None), (b,None)], SELECT 1, "one", false, false, LocalTempView, UNSUPPORTED, true
   +- Project [1 AS 1#x, one AS one#x]
      +- OneRowRelation


-- !query
ALTER TABLE temp_view CHANGE a TYPE INT
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "EXPECT_TABLE_NOT_VIEW.NO_ALTERNATIVE",
  "sqlState" : "42809",
  "messageParameters" : {
    "operation" : "ALTER TABLE ... CHANGE COLUMN",
    "viewName" : "`temp_view`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 13,
    "stopIndex" : 21,
    "fragment" : "temp_view"
  } ]
}


-- !query
CREATE GLOBAL TEMPORARY VIEW global_temp_view(a, b) AS SELECT 1, "one"
-- !query analysis
CreateViewCommand `global_temp_view`, [(a,None), (b,None)], SELECT 1, "one", false, false, GlobalTempView, UNSUPPORTED, true
   +- Project [1 AS 1#x, one AS one#x]
      +- OneRowRelation


-- !query
ALTER TABLE global_temp.global_temp_view CHANGE a TYPE INT
-- !query analysis
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "EXPECT_TABLE_NOT_VIEW.NO_ALTERNATIVE",
  "sqlState" : "42809",
  "messageParameters" : {
    "operation" : "ALTER TABLE ... CHANGE COLUMN",
    "viewName" : "`global_temp`.`global_temp_view`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 13,
    "stopIndex" : 40,
    "fragment" : "global_temp.global_temp_view"
  } ]
}


-- !query
DROP TABLE test_change
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.test_change


-- !query
DROP VIEW global_temp.global_temp_view
-- !query analysis
DropTempViewCommand global_temp.global_temp_view
