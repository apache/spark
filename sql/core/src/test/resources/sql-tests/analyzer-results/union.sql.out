-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW t1 AS VALUES (1, 'a'), (2, 'b') tbl(c1, c2)
-- !query analysis
CreateViewCommand `t1`, VALUES (1, 'a'), (2, 'b') tbl(c1, c2), false, true, LocalTempView, UNSUPPORTED, true
   +- SubqueryAlias tbl
      +- LocalRelation [c1#x, c2#x]


-- !query
CREATE OR REPLACE TEMPORARY VIEW t2 AS VALUES (1.0, 1), (2.0, 4) tbl(c1, c2)
-- !query analysis
CreateViewCommand `t2`, VALUES (1.0, 1), (2.0, 4) tbl(c1, c2), false, true, LocalTempView, UNSUPPORTED, true
   +- SubqueryAlias tbl
      +- LocalRelation [c1#x, c2#x]


-- !query
SELECT *
FROM   (SELECT * FROM t1
        UNION ALL
        SELECT * FROM t1)
-- !query analysis
Project [c1#x, c2#x]
+- SubqueryAlias __auto_generated_subquery_name
   +- Union false, false
      :- Project [c1#x, c2#x]
      :  +- SubqueryAlias t1
      :     +- View (`t1`, [c1#x, c2#x])
      :        +- Project [cast(c1#x as int) AS c1#x, cast(c2#x as string) AS c2#x]
      :           +- SubqueryAlias tbl
      :              +- LocalRelation [c1#x, c2#x]
      +- Project [c1#x, c2#x]
         +- SubqueryAlias t1
            +- View (`t1`, [c1#x, c2#x])
               +- Project [cast(c1#x as int) AS c1#x, cast(c2#x as string) AS c2#x]
                  +- SubqueryAlias tbl
                     +- LocalRelation [c1#x, c2#x]


-- !query
SELECT *
FROM   (SELECT * FROM t1 where c1 = 1
        UNION ALL
        SELECT * FROM t2
        UNION ALL
        SELECT * FROM t2)
-- !query analysis
Project [c1#x, c2#xL]
+- SubqueryAlias __auto_generated_subquery_name
   +- Union false, false
      :- Union false, false
      :  :- Project [cast(c1#x as decimal(11,1)) AS c1#x, cast(c2#x as bigint) AS c2#xL]
      :  :  +- Project [c1#x, c2#x]
      :  :     +- Filter (c1#x = 1)
      :  :        +- SubqueryAlias t1
      :  :           +- View (`t1`, [c1#x, c2#x])
      :  :              +- Project [cast(c1#x as int) AS c1#x, cast(c2#x as string) AS c2#x]
      :  :                 +- SubqueryAlias tbl
      :  :                    +- LocalRelation [c1#x, c2#x]
      :  +- Project [cast(c1#x as decimal(11,1)) AS c1#x, cast(c2#x as bigint) AS c2#xL]
      :     +- Project [c1#x, c2#x]
      :        +- SubqueryAlias t2
      :           +- View (`t2`, [c1#x, c2#x])
      :              +- Project [cast(c1#x as decimal(2,1)) AS c1#x, cast(c2#x as int) AS c2#x]
      :                 +- SubqueryAlias tbl
      :                    +- LocalRelation [c1#x, c2#x]
      +- Project [cast(c1#x as decimal(11,1)) AS c1#x, cast(c2#x as bigint) AS c2#xL]
         +- Project [c1#x, c2#x]
            +- SubqueryAlias t2
               +- View (`t2`, [c1#x, c2#x])
                  +- Project [cast(c1#x as decimal(2,1)) AS c1#x, cast(c2#x as int) AS c2#x]
                     +- SubqueryAlias tbl
                        +- LocalRelation [c1#x, c2#x]


-- !query
SELECT a
FROM (SELECT 0 a, 0 b
      UNION ALL
      SELECT SUM(1) a, CAST(0 AS BIGINT) b
      UNION ALL SELECT 0 a, 0 b) T
-- !query analysis
Project [a#xL]
+- SubqueryAlias T
   +- Union false, false
      :- Union false, false
      :  :- Project [cast(a#x as bigint) AS a#xL, cast(b#x as bigint) AS b#xL]
      :  :  +- Project [0 AS a#x, 0 AS b#x]
      :  :     +- OneRowRelation
      :  +- Aggregate [sum(1) AS a#xL, cast(0 as bigint) AS b#xL]
      :     +- OneRowRelation
      +- Project [cast(a#x as bigint) AS a#xL, cast(b#x as bigint) AS b#xL]
         +- Project [0 AS a#x, 0 AS b#x]
            +- OneRowRelation


-- !query
CREATE OR REPLACE TEMPORARY VIEW p1 AS VALUES 1 T(col)
-- !query analysis
CreateViewCommand `p1`, VALUES 1 T(col), false, true, LocalTempView, UNSUPPORTED, true
   +- SubqueryAlias T
      +- LocalRelation [col#x]


-- !query
CREATE OR REPLACE TEMPORARY VIEW p2 AS VALUES 1 T(col)
-- !query analysis
CreateViewCommand `p2`, VALUES 1 T(col), false, true, LocalTempView, UNSUPPORTED, true
   +- SubqueryAlias T
      +- LocalRelation [col#x]


-- !query
CREATE OR REPLACE TEMPORARY VIEW p3 AS VALUES 1 T(col)
-- !query analysis
CreateViewCommand `p3`, VALUES 1 T(col), false, true, LocalTempView, UNSUPPORTED, true
   +- SubqueryAlias T
      +- LocalRelation [col#x]


-- !query
SELECT 1 AS x,
       col
FROM   (SELECT col AS col
        FROM (SELECT p1.col AS col
              FROM   p1 CROSS JOIN p2
              UNION ALL
              SELECT col
              FROM p3) T1) T2
-- !query analysis
Project [1 AS x#x, col#x]
+- SubqueryAlias T2
   +- Project [col#x AS col#x]
      +- SubqueryAlias T1
         +- Union false, false
            :- Project [col#x AS col#x]
            :  +- Join Cross
            :     :- SubqueryAlias p1
            :     :  +- View (`p1`, [col#x])
            :     :     +- Project [cast(col#x as int) AS col#x]
            :     :        +- SubqueryAlias T
            :     :           +- LocalRelation [col#x]
            :     +- SubqueryAlias p2
            :        +- View (`p2`, [col#x])
            :           +- Project [cast(col#x as int) AS col#x]
            :              +- SubqueryAlias T
            :                 +- LocalRelation [col#x]
            +- Project [col#x]
               +- SubqueryAlias p3
                  +- View (`p3`, [col#x])
                     +- Project [cast(col#x as int) AS col#x]
                        +- SubqueryAlias T
                           +- LocalRelation [col#x]


-- !query
SELECT map(1, 2), 'str'
UNION ALL
SELECT map(1, 2, 3, NULL), 1
-- !query analysis
Union false, false
:- Project [cast(map(1, 2)#x as map<int,int>) AS map(1, 2)#x, cast(str#x as bigint) AS str#xL]
:  +- Project [map(1, 2) AS map(1, 2)#x, str AS str#x]
:     +- OneRowRelation
+- Project [map(1, 2, 3, NULL)#x, cast(1#x as bigint) AS 1#xL]
   +- Project [map(1, 2, 3, cast(null as int)) AS map(1, 2, 3, NULL)#x, 1 AS 1#x]
      +- OneRowRelation


-- !query
SELECT array(1, 2), 'str'
UNION ALL
SELECT array(1, 2, 3, NULL), 1
-- !query analysis
Union false, false
:- Project [cast(array(1, 2)#x as array<int>) AS array(1, 2)#x, cast(str#x as bigint) AS str#xL]
:  +- Project [array(1, 2) AS array(1, 2)#x, str AS str#x]
:     +- OneRowRelation
+- Project [array(1, 2, 3, NULL)#x, cast(1#x as bigint) AS 1#xL]
   +- Project [array(1, 2, 3, cast(null as int)) AS array(1, 2, 3, NULL)#x, 1 AS 1#x]
      +- OneRowRelation


-- !query
CREATE OR REPLACE TEMPORARY VIEW t3 AS VALUES (decimal(1)) tbl(v)
-- !query analysis
CreateViewCommand `t3`, VALUES (decimal(1)) tbl(v), false, true, LocalTempView, UNSUPPORTED, true
   +- SubqueryAlias tbl
      +- LocalRelation [v#x]


-- !query
SELECT t.v FROM (
  SELECT v FROM t3
  UNION ALL
  SELECT v + v AS v FROM t3
) t
-- !query analysis
Project [v#x]
+- SubqueryAlias t
   +- Union false, false
      :- Project [cast(v#x as decimal(11,0)) AS v#x]
      :  +- Project [v#x]
      :     +- SubqueryAlias t3
      :        +- View (`t3`, [v#x])
      :           +- Project [cast(v#x as decimal(10,0)) AS v#x]
      :              +- SubqueryAlias tbl
      :                 +- LocalRelation [v#x]
      +- Project [(v#x + v#x) AS v#x]
         +- SubqueryAlias t3
            +- View (`t3`, [v#x])
               +- Project [cast(v#x as decimal(10,0)) AS v#x]
                  +- SubqueryAlias tbl
                     +- LocalRelation [v#x]


-- !query
SELECT SUM(t.v) FROM (
  SELECT v FROM t3
  UNION
  SELECT v + v AS v FROM t3
) t
-- !query analysis
Aggregate [sum(v#x) AS sum(v)#x]
+- SubqueryAlias t
   +- Distinct
      +- Union false, false
         :- Project [cast(v#x as decimal(11,0)) AS v#x]
         :  +- Project [v#x]
         :     +- SubqueryAlias t3
         :        +- View (`t3`, [v#x])
         :           +- Project [cast(v#x as decimal(10,0)) AS v#x]
         :              +- SubqueryAlias tbl
         :                 +- LocalRelation [v#x]
         +- Project [(v#x + v#x) AS v#x]
            +- SubqueryAlias t3
               +- View (`t3`, [v#x])
                  +- Project [cast(v#x as decimal(10,0)) AS v#x]
                     +- SubqueryAlias tbl
                        +- LocalRelation [v#x]


-- !query
DROP VIEW IF EXISTS t1
-- !query analysis
DropTempViewCommand t1


-- !query
DROP VIEW IF EXISTS t2
-- !query analysis
DropTempViewCommand t2


-- !query
DROP VIEW IF EXISTS t3
-- !query analysis
DropTempViewCommand t3


-- !query
DROP VIEW IF EXISTS p1
-- !query analysis
DropTempViewCommand p1


-- !query
DROP VIEW IF EXISTS p2
-- !query analysis
DropTempViewCommand p2


-- !query
DROP VIEW IF EXISTS p3
-- !query analysis
DropTempViewCommand p3
