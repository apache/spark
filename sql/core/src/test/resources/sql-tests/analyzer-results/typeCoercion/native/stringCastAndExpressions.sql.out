-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW t AS SELECT 'aa' as a
-- !query analysis
CreateViewCommand `t`, SELECT 'aa' as a, false, false, LocalTempView, UNSUPPORTED, true
   +- Project [aa AS a#x]
      +- OneRowRelation


-- !query
select cast(a as byte) from t
-- !query analysis
Project [cast(a#x as tinyint) AS a#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select cast(a as short) from t
-- !query analysis
Project [cast(a#x as smallint) AS a#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select cast(a as int) from t
-- !query analysis
Project [cast(a#x as int) AS a#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select cast(a as long) from t
-- !query analysis
Project [cast(a#x as bigint) AS a#xL]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select cast(a as float) from t
-- !query analysis
Project [cast(a#x as float) AS a#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select cast(a as double) from t
-- !query analysis
Project [cast(a#x as double) AS a#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select cast(a as decimal) from t
-- !query analysis
Project [cast(a#x as decimal(10,0)) AS a#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select cast(a as boolean) from t
-- !query analysis
Project [cast(a#x as boolean) AS a#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select cast(a as timestamp) from t
-- !query analysis
Project [cast(a#x as timestamp) AS a#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select cast(a as date) from t
-- !query analysis
Project [cast(a#x as date) AS a#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select cast(a as binary) from t
-- !query analysis
Project [cast(a#x as binary) AS a#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select cast(a as array<string>) from t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.CAST_WITHOUT_SUGGESTION",
  "sqlState" : "42K09",
  "messageParameters" : {
    "sqlExpr" : "\"a\"",
    "srcType" : "\"STRING\"",
    "targetType" : "\"ARRAY<STRING>\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 31,
    "fragment" : "cast(a as array<string>)"
  } ]
}


-- !query
select cast(a as struct<s:string>) from t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.CAST_WITHOUT_SUGGESTION",
  "sqlState" : "42K09",
  "messageParameters" : {
    "sqlExpr" : "\"a\"",
    "srcType" : "\"STRING\"",
    "targetType" : "\"STRUCT<s: STRING>\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 34,
    "fragment" : "cast(a as struct<s:string>)"
  } ]
}


-- !query
select cast(a as map<string, string>) from t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.CAST_WITHOUT_SUGGESTION",
  "sqlState" : "42K09",
  "messageParameters" : {
    "sqlExpr" : "\"a\"",
    "srcType" : "\"STRING\"",
    "targetType" : "\"MAP<STRING, STRING>\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 37,
    "fragment" : "cast(a as map<string, string>)"
  } ]
}


-- !query
select to_timestamp(a) from t
-- !query analysis
Project [to_timestamp(a#x, None, TimestampType, Some(America/Los_Angeles), true) AS to_timestamp(a)#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select to_timestamp('2018-01-01', a) from t
-- !query analysis
Project [to_timestamp(2018-01-01, Some(a#x), TimestampType, Some(America/Los_Angeles), true) AS to_timestamp(2018-01-01, a)#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select to_unix_timestamp(a) from t
-- !query analysis
Project [to_unix_timestamp(a#x, yyyy-MM-dd HH:mm:ss, Some(America/Los_Angeles), true) AS to_unix_timestamp(a, yyyy-MM-dd HH:mm:ss)#xL]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select to_unix_timestamp('2018-01-01', a) from t
-- !query analysis
Project [to_unix_timestamp(2018-01-01, a#x, Some(America/Los_Angeles), true) AS to_unix_timestamp(2018-01-01, a)#xL]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select unix_timestamp(a) from t
-- !query analysis
Project [unix_timestamp(a#x, yyyy-MM-dd HH:mm:ss, Some(America/Los_Angeles), true) AS unix_timestamp(a, yyyy-MM-dd HH:mm:ss)#xL]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select unix_timestamp('2018-01-01', a) from t
-- !query analysis
Project [unix_timestamp(2018-01-01, a#x, Some(America/Los_Angeles), true) AS unix_timestamp(2018-01-01, a)#xL]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select from_unixtime(a) from t
-- !query analysis
Project [from_unixtime(cast(a#x as bigint), yyyy-MM-dd HH:mm:ss, Some(America/Los_Angeles)) AS from_unixtime(a, yyyy-MM-dd HH:mm:ss)#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select from_unixtime('2018-01-01', a) from t
-- !query analysis
Project [from_unixtime(cast(2018-01-01 as bigint), a#x, Some(America/Los_Angeles)) AS from_unixtime(2018-01-01, a)#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select next_day(a, 'MO') from t
-- !query analysis
Project [next_day(cast(a#x as date), MO, true) AS next_day(a, MO)#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select next_day('2018-01-01', a) from t
-- !query analysis
Project [next_day(cast(2018-01-01 as date), a#x, true) AS next_day(2018-01-01, a)#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select trunc(a, 'MM') from t
-- !query analysis
Project [trunc(cast(a#x as date), MM) AS trunc(a, MM)#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select trunc('2018-01-01', a) from t
-- !query analysis
Project [trunc(cast(2018-01-01 as date), a#x) AS trunc(2018-01-01, a)#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select unhex('-123')
-- !query analysis
Project [unhex(-123, false) AS unhex(-123)#x]
+- OneRowRelation


-- !query
select sha2(a, a) from t
-- !query analysis
Project [sha2(cast(a#x as binary), cast(a#x as int)) AS sha2(a, a)#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select get_json_object(a, a) from t
-- !query analysis
Project [get_json_object(a#x, a#x) AS get_json_object(a, a)#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation


-- !query
select json_tuple(a, a) from t
-- !query analysis
Project [c0#x]
+- Generate json_tuple(a#x, a#x), false, [c0#x]
   +- SubqueryAlias t
      +- View (`t`, [a#x])
         +- Project [cast(a#x as string) AS a#x]
            +- Project [aa AS a#x]
               +- OneRowRelation


-- !query
select from_json(a, 'a INT') from t
-- !query analysis
Project [from_json(StructField(a,IntegerType,true), a#x, Some(America/Los_Angeles), false) AS from_json(a)#x]
+- SubqueryAlias t
   +- View (`t`, [a#x])
      +- Project [cast(a#x as string) AS a#x]
         +- Project [aa AS a#x]
            +- OneRowRelation
