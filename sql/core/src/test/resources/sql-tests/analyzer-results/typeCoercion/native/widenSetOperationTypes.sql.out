-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW t AS SELECT 1
-- !query analysis
CreateViewCommand `t`, SELECT 1, false, false, LocalTempView, UNSUPPORTED, true
   +- Project [1 AS 1#x]
      +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as tinyint) AS CAST(1 AS TINYINT)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(2 as tinyint) AS CAST(2 AS TINYINT)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS TINYINT)#x as smallint) AS CAST(1 AS TINYINT)#x]
   :  +- Project [cast(1 as tinyint) AS CAST(1 AS TINYINT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as smallint) AS CAST(2 AS SMALLINT)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as int) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS TINYINT)#x as int) AS CAST(1 AS TINYINT)#x]
   :  +- Project [cast(1 as tinyint) AS CAST(1 AS TINYINT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as int) AS CAST(2 AS INT)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS TINYINT)#x as bigint) AS CAST(1 AS TINYINT)#xL]
   :  +- Project [cast(1 as tinyint) AS CAST(1 AS TINYINT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as bigint) AS CAST(2 AS BIGINT)#xL]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as float) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS TINYINT)#x as double) AS CAST(1 AS TINYINT)#x]
   :  +- Project [cast(1 as tinyint) AS CAST(1 AS TINYINT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS FLOAT)#x as double) AS CAST(2 AS FLOAT)#x]
      +- Project [cast(2 as float) AS CAST(2 AS FLOAT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as double) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS TINYINT)#x as double) AS CAST(1 AS TINYINT)#x]
   :  +- Project [cast(1 as tinyint) AS CAST(1 AS TINYINT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as double) AS CAST(2 AS DOUBLE)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS TINYINT)#x as decimal(10,0)) AS CAST(1 AS TINYINT)#x]
   :  +- Project [cast(1 as tinyint) AS CAST(1 AS TINYINT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as decimal(10,0)) AS CAST(2 AS DECIMAL(10,0))#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as string) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS TINYINT)#x as bigint) AS CAST(1 AS TINYINT)#xL]
   :  +- Project [cast(1 as tinyint) AS CAST(1 AS TINYINT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS STRING)#x as bigint) AS CAST(2 AS STRING)#xL]
      +- Project [cast(2 as string) AS CAST(2 AS STRING)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BINARY\"",
    "dataType2" : "\"TINYINT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 72,
    "fragment" : "SELECT cast(1 as tinyint) FROM t UNION SELECT cast('2' as binary) FROM t"
  } ]
}


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BOOLEAN\"",
    "dataType2" : "\"TINYINT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 71,
    "fragment" : "SELECT cast(1 as tinyint) FROM t UNION SELECT cast(2 as boolean) FROM t"
  } ]
}


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"TIMESTAMP\"",
    "dataType2" : "\"TINYINT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 95,
    "fragment" : "SELECT cast(1 as tinyint) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t"
  } ]
}


-- !query
SELECT cast(1 as tinyint) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DATE\"",
    "dataType2" : "\"TINYINT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 88,
    "fragment" : "SELECT cast(1 as tinyint) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t"
  } ]
}


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as smallint) AS CAST(1 AS SMALLINT)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS TINYINT)#x as smallint) AS CAST(2 AS TINYINT)#x]
      +- Project [cast(2 as tinyint) AS CAST(2 AS TINYINT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as smallint) AS CAST(1 AS SMALLINT)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(2 as smallint) AS CAST(2 AS SMALLINT)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as int) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS SMALLINT)#x as int) AS CAST(1 AS SMALLINT)#x]
   :  +- Project [cast(1 as smallint) AS CAST(1 AS SMALLINT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as int) AS CAST(2 AS INT)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS SMALLINT)#x as bigint) AS CAST(1 AS SMALLINT)#xL]
   :  +- Project [cast(1 as smallint) AS CAST(1 AS SMALLINT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as bigint) AS CAST(2 AS BIGINT)#xL]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as float) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS SMALLINT)#x as double) AS CAST(1 AS SMALLINT)#x]
   :  +- Project [cast(1 as smallint) AS CAST(1 AS SMALLINT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS FLOAT)#x as double) AS CAST(2 AS FLOAT)#x]
      +- Project [cast(2 as float) AS CAST(2 AS FLOAT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as double) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS SMALLINT)#x as double) AS CAST(1 AS SMALLINT)#x]
   :  +- Project [cast(1 as smallint) AS CAST(1 AS SMALLINT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as double) AS CAST(2 AS DOUBLE)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS SMALLINT)#x as decimal(10,0)) AS CAST(1 AS SMALLINT)#x]
   :  +- Project [cast(1 as smallint) AS CAST(1 AS SMALLINT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as decimal(10,0)) AS CAST(2 AS DECIMAL(10,0))#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as string) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS SMALLINT)#x as bigint) AS CAST(1 AS SMALLINT)#xL]
   :  +- Project [cast(1 as smallint) AS CAST(1 AS SMALLINT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS STRING)#x as bigint) AS CAST(2 AS STRING)#xL]
      +- Project [cast(2 as string) AS CAST(2 AS STRING)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BINARY\"",
    "dataType2" : "\"SMALLINT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 73,
    "fragment" : "SELECT cast(1 as smallint) FROM t UNION SELECT cast('2' as binary) FROM t"
  } ]
}


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BOOLEAN\"",
    "dataType2" : "\"SMALLINT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 72,
    "fragment" : "SELECT cast(1 as smallint) FROM t UNION SELECT cast(2 as boolean) FROM t"
  } ]
}


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"TIMESTAMP\"",
    "dataType2" : "\"SMALLINT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 96,
    "fragment" : "SELECT cast(1 as smallint) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t"
  } ]
}


-- !query
SELECT cast(1 as smallint) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DATE\"",
    "dataType2" : "\"SMALLINT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 89,
    "fragment" : "SELECT cast(1 as smallint) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t"
  } ]
}


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as int) AS CAST(1 AS INT)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS TINYINT)#x as int) AS CAST(2 AS TINYINT)#x]
      +- Project [cast(2 as tinyint) AS CAST(2 AS TINYINT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as int) AS CAST(1 AS INT)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS SMALLINT)#x as int) AS CAST(2 AS SMALLINT)#x]
      +- Project [cast(2 as smallint) AS CAST(2 AS SMALLINT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as int) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as int) AS CAST(1 AS INT)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(2 as int) AS CAST(2 AS INT)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS INT)#x as bigint) AS CAST(1 AS INT)#xL]
   :  +- Project [cast(1 as int) AS CAST(1 AS INT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as bigint) AS CAST(2 AS BIGINT)#xL]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as float) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS INT)#x as double) AS CAST(1 AS INT)#x]
   :  +- Project [cast(1 as int) AS CAST(1 AS INT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS FLOAT)#x as double) AS CAST(2 AS FLOAT)#x]
      +- Project [cast(2 as float) AS CAST(2 AS FLOAT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as double) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS INT)#x as double) AS CAST(1 AS INT)#x]
   :  +- Project [cast(1 as int) AS CAST(1 AS INT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as double) AS CAST(2 AS DOUBLE)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS INT)#x as decimal(10,0)) AS CAST(1 AS INT)#x]
   :  +- Project [cast(1 as int) AS CAST(1 AS INT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as decimal(10,0)) AS CAST(2 AS DECIMAL(10,0))#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as string) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS INT)#x as bigint) AS CAST(1 AS INT)#xL]
   :  +- Project [cast(1 as int) AS CAST(1 AS INT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS STRING)#x as bigint) AS CAST(2 AS STRING)#xL]
      +- Project [cast(2 as string) AS CAST(2 AS STRING)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BINARY\"",
    "dataType2" : "\"INT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 68,
    "fragment" : "SELECT cast(1 as int) FROM t UNION SELECT cast('2' as binary) FROM t"
  } ]
}


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BOOLEAN\"",
    "dataType2" : "\"INT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 67,
    "fragment" : "SELECT cast(1 as int) FROM t UNION SELECT cast(2 as boolean) FROM t"
  } ]
}


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"TIMESTAMP\"",
    "dataType2" : "\"INT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 91,
    "fragment" : "SELECT cast(1 as int) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t"
  } ]
}


-- !query
SELECT cast(1 as int) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DATE\"",
    "dataType2" : "\"INT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 84,
    "fragment" : "SELECT cast(1 as int) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t"
  } ]
}


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as bigint) AS CAST(1 AS BIGINT)#xL]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS TINYINT)#x as bigint) AS CAST(2 AS TINYINT)#xL]
      +- Project [cast(2 as tinyint) AS CAST(2 AS TINYINT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as bigint) AS CAST(1 AS BIGINT)#xL]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS SMALLINT)#x as bigint) AS CAST(2 AS SMALLINT)#xL]
      +- Project [cast(2 as smallint) AS CAST(2 AS SMALLINT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as int) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as bigint) AS CAST(1 AS BIGINT)#xL]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS INT)#x as bigint) AS CAST(2 AS INT)#xL]
      +- Project [cast(2 as int) AS CAST(2 AS INT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as bigint) AS CAST(1 AS BIGINT)#xL]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(2 as bigint) AS CAST(2 AS BIGINT)#xL]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as float) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS BIGINT)#xL as double) AS CAST(1 AS BIGINT)#x]
   :  +- Project [cast(1 as bigint) AS CAST(1 AS BIGINT)#xL]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS FLOAT)#x as double) AS CAST(2 AS FLOAT)#x]
      +- Project [cast(2 as float) AS CAST(2 AS FLOAT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as double) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS BIGINT)#xL as double) AS CAST(1 AS BIGINT)#x]
   :  +- Project [cast(1 as bigint) AS CAST(1 AS BIGINT)#xL]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as double) AS CAST(2 AS DOUBLE)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS BIGINT)#xL as decimal(20,0)) AS CAST(1 AS BIGINT)#x]
   :  +- Project [cast(1 as bigint) AS CAST(1 AS BIGINT)#xL]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS DECIMAL(10,0))#x as decimal(20,0)) AS CAST(2 AS DECIMAL(10,0))#x]
      +- Project [cast(2 as decimal(10,0)) AS CAST(2 AS DECIMAL(10,0))#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as string) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as bigint) AS CAST(1 AS BIGINT)#xL]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS STRING)#x as bigint) AS CAST(2 AS STRING)#xL]
      +- Project [cast(2 as string) AS CAST(2 AS STRING)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BINARY\"",
    "dataType2" : "\"BIGINT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 71,
    "fragment" : "SELECT cast(1 as bigint) FROM t UNION SELECT cast('2' as binary) FROM t"
  } ]
}


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BOOLEAN\"",
    "dataType2" : "\"BIGINT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 70,
    "fragment" : "SELECT cast(1 as bigint) FROM t UNION SELECT cast(2 as boolean) FROM t"
  } ]
}


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"TIMESTAMP\"",
    "dataType2" : "\"BIGINT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 94,
    "fragment" : "SELECT cast(1 as bigint) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t"
  } ]
}


-- !query
SELECT cast(1 as bigint) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DATE\"",
    "dataType2" : "\"BIGINT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 87,
    "fragment" : "SELECT cast(1 as bigint) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t"
  } ]
}


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS FLOAT)#x as double) AS CAST(1 AS FLOAT)#x]
   :  +- Project [cast(1 as float) AS CAST(1 AS FLOAT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS TINYINT)#x as double) AS CAST(2 AS TINYINT)#x]
      +- Project [cast(2 as tinyint) AS CAST(2 AS TINYINT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS FLOAT)#x as double) AS CAST(1 AS FLOAT)#x]
   :  +- Project [cast(1 as float) AS CAST(1 AS FLOAT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS SMALLINT)#x as double) AS CAST(2 AS SMALLINT)#x]
      +- Project [cast(2 as smallint) AS CAST(2 AS SMALLINT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as int) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS FLOAT)#x as double) AS CAST(1 AS FLOAT)#x]
   :  +- Project [cast(1 as float) AS CAST(1 AS FLOAT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS INT)#x as double) AS CAST(2 AS INT)#x]
      +- Project [cast(2 as int) AS CAST(2 AS INT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS FLOAT)#x as double) AS CAST(1 AS FLOAT)#x]
   :  +- Project [cast(1 as float) AS CAST(1 AS FLOAT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS BIGINT)#xL as double) AS CAST(2 AS BIGINT)#x]
      +- Project [cast(2 as bigint) AS CAST(2 AS BIGINT)#xL]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as float) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as float) AS CAST(1 AS FLOAT)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(2 as float) AS CAST(2 AS FLOAT)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as double) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS FLOAT)#x as double) AS CAST(1 AS FLOAT)#x]
   :  +- Project [cast(1 as float) AS CAST(1 AS FLOAT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as double) AS CAST(2 AS DOUBLE)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS FLOAT)#x as double) AS CAST(1 AS FLOAT)#x]
   :  +- Project [cast(1 as float) AS CAST(1 AS FLOAT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS DECIMAL(10,0))#x as double) AS CAST(2 AS DECIMAL(10,0))#x]
      +- Project [cast(2 as decimal(10,0)) AS CAST(2 AS DECIMAL(10,0))#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as string) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS FLOAT)#x as double) AS CAST(1 AS FLOAT)#x]
   :  +- Project [cast(1 as float) AS CAST(1 AS FLOAT)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS STRING)#x as double) AS CAST(2 AS STRING)#x]
      +- Project [cast(2 as string) AS CAST(2 AS STRING)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BINARY\"",
    "dataType2" : "\"FLOAT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 70,
    "fragment" : "SELECT cast(1 as float) FROM t UNION SELECT cast('2' as binary) FROM t"
  } ]
}


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BOOLEAN\"",
    "dataType2" : "\"FLOAT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 69,
    "fragment" : "SELECT cast(1 as float) FROM t UNION SELECT cast(2 as boolean) FROM t"
  } ]
}


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"TIMESTAMP\"",
    "dataType2" : "\"FLOAT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 93,
    "fragment" : "SELECT cast(1 as float) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t"
  } ]
}


-- !query
SELECT cast(1 as float) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DATE\"",
    "dataType2" : "\"FLOAT\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 86,
    "fragment" : "SELECT cast(1 as float) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t"
  } ]
}


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as double) AS CAST(1 AS DOUBLE)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS TINYINT)#x as double) AS CAST(2 AS TINYINT)#x]
      +- Project [cast(2 as tinyint) AS CAST(2 AS TINYINT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as double) AS CAST(1 AS DOUBLE)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS SMALLINT)#x as double) AS CAST(2 AS SMALLINT)#x]
      +- Project [cast(2 as smallint) AS CAST(2 AS SMALLINT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as int) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as double) AS CAST(1 AS DOUBLE)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS INT)#x as double) AS CAST(2 AS INT)#x]
      +- Project [cast(2 as int) AS CAST(2 AS INT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as double) AS CAST(1 AS DOUBLE)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS BIGINT)#xL as double) AS CAST(2 AS BIGINT)#x]
      +- Project [cast(2 as bigint) AS CAST(2 AS BIGINT)#xL]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as float) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as double) AS CAST(1 AS DOUBLE)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS FLOAT)#x as double) AS CAST(2 AS FLOAT)#x]
      +- Project [cast(2 as float) AS CAST(2 AS FLOAT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as double) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as double) AS CAST(1 AS DOUBLE)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(2 as double) AS CAST(2 AS DOUBLE)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as double) AS CAST(1 AS DOUBLE)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS DECIMAL(10,0))#x as double) AS CAST(2 AS DECIMAL(10,0))#x]
      +- Project [cast(2 as decimal(10,0)) AS CAST(2 AS DECIMAL(10,0))#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as string) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as double) AS CAST(1 AS DOUBLE)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS STRING)#x as double) AS CAST(2 AS STRING)#x]
      +- Project [cast(2 as string) AS CAST(2 AS STRING)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BINARY\"",
    "dataType2" : "\"DOUBLE\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 71,
    "fragment" : "SELECT cast(1 as double) FROM t UNION SELECT cast('2' as binary) FROM t"
  } ]
}


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BOOLEAN\"",
    "dataType2" : "\"DOUBLE\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 70,
    "fragment" : "SELECT cast(1 as double) FROM t UNION SELECT cast(2 as boolean) FROM t"
  } ]
}


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"TIMESTAMP\"",
    "dataType2" : "\"DOUBLE\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 94,
    "fragment" : "SELECT cast(1 as double) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t"
  } ]
}


-- !query
SELECT cast(1 as double) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DATE\"",
    "dataType2" : "\"DOUBLE\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 87,
    "fragment" : "SELECT cast(1 as double) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t"
  } ]
}


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as decimal(10,0)) AS CAST(1 AS DECIMAL(10,0))#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS TINYINT)#x as decimal(10,0)) AS CAST(2 AS TINYINT)#x]
      +- Project [cast(2 as tinyint) AS CAST(2 AS TINYINT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as decimal(10,0)) AS CAST(1 AS DECIMAL(10,0))#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS SMALLINT)#x as decimal(10,0)) AS CAST(2 AS SMALLINT)#x]
      +- Project [cast(2 as smallint) AS CAST(2 AS SMALLINT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as int) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as decimal(10,0)) AS CAST(1 AS DECIMAL(10,0))#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS INT)#x as decimal(10,0)) AS CAST(2 AS INT)#x]
      +- Project [cast(2 as int) AS CAST(2 AS INT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS DECIMAL(10,0))#x as decimal(20,0)) AS CAST(1 AS DECIMAL(10,0))#x]
   :  +- Project [cast(1 as decimal(10,0)) AS CAST(1 AS DECIMAL(10,0))#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS BIGINT)#xL as decimal(20,0)) AS CAST(2 AS BIGINT)#x]
      +- Project [cast(2 as bigint) AS CAST(2 AS BIGINT)#xL]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as float) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS DECIMAL(10,0))#x as double) AS CAST(1 AS DECIMAL(10,0))#x]
   :  +- Project [cast(1 as decimal(10,0)) AS CAST(1 AS DECIMAL(10,0))#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS FLOAT)#x as double) AS CAST(2 AS FLOAT)#x]
      +- Project [cast(2 as float) AS CAST(2 AS FLOAT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as double) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS DECIMAL(10,0))#x as double) AS CAST(1 AS DECIMAL(10,0))#x]
   :  +- Project [cast(1 as decimal(10,0)) AS CAST(1 AS DECIMAL(10,0))#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as double) AS CAST(2 AS DOUBLE)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as decimal(10,0)) AS CAST(1 AS DECIMAL(10,0))#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(2 as decimal(10,0)) AS CAST(2 AS DECIMAL(10,0))#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as string) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS DECIMAL(10,0))#x as double) AS CAST(1 AS DECIMAL(10,0))#x]
   :  +- Project [cast(1 as decimal(10,0)) AS CAST(1 AS DECIMAL(10,0))#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS STRING)#x as double) AS CAST(2 AS STRING)#x]
      +- Project [cast(2 as string) AS CAST(2 AS STRING)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BINARY\"",
    "dataType2" : "\"DECIMAL(10,0)\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 79,
    "fragment" : "SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast('2' as binary) FROM t"
  } ]
}


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BOOLEAN\"",
    "dataType2" : "\"DECIMAL(10,0)\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 78,
    "fragment" : "SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast(2 as boolean) FROM t"
  } ]
}


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"TIMESTAMP\"",
    "dataType2" : "\"DECIMAL(10,0)\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 102,
    "fragment" : "SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t"
  } ]
}


-- !query
SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DATE\"",
    "dataType2" : "\"DECIMAL(10,0)\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 95,
    "fragment" : "SELECT cast(1 as decimal(10, 0)) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t"
  } ]
}


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS STRING)#x as bigint) AS CAST(1 AS STRING)#xL]
   :  +- Project [cast(1 as string) AS CAST(1 AS STRING)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS TINYINT)#x as bigint) AS CAST(2 AS TINYINT)#xL]
      +- Project [cast(2 as tinyint) AS CAST(2 AS TINYINT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS STRING)#x as bigint) AS CAST(1 AS STRING)#xL]
   :  +- Project [cast(1 as string) AS CAST(1 AS STRING)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS SMALLINT)#x as bigint) AS CAST(2 AS SMALLINT)#xL]
      +- Project [cast(2 as smallint) AS CAST(2 AS SMALLINT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as int) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS STRING)#x as bigint) AS CAST(1 AS STRING)#xL]
   :  +- Project [cast(1 as string) AS CAST(1 AS STRING)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS INT)#x as bigint) AS CAST(2 AS INT)#xL]
      +- Project [cast(2 as int) AS CAST(2 AS INT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS STRING)#x as bigint) AS CAST(1 AS STRING)#xL]
   :  +- Project [cast(1 as string) AS CAST(1 AS STRING)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as bigint) AS CAST(2 AS BIGINT)#xL]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as float) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS STRING)#x as double) AS CAST(1 AS STRING)#x]
   :  +- Project [cast(1 as string) AS CAST(1 AS STRING)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS FLOAT)#x as double) AS CAST(2 AS FLOAT)#x]
      +- Project [cast(2 as float) AS CAST(2 AS FLOAT)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as double) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS STRING)#x as double) AS CAST(1 AS STRING)#x]
   :  +- Project [cast(1 as string) AS CAST(1 AS STRING)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as double) AS CAST(2 AS DOUBLE)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS STRING)#x as double) AS CAST(1 AS STRING)#x]
   :  +- Project [cast(1 as string) AS CAST(1 AS STRING)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(CAST(2 AS DECIMAL(10,0))#x as double) AS CAST(2 AS DECIMAL(10,0))#x]
      +- Project [cast(2 as decimal(10,0)) AS CAST(2 AS DECIMAL(10,0))#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as string) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as string) AS CAST(1 AS STRING)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(2 as string) AS CAST(2 AS STRING)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS STRING)#x as binary) AS CAST(1 AS STRING)#x]
   :  +- Project [cast(1 as string) AS CAST(1 AS STRING)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as binary) AS CAST(2 AS BINARY)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS STRING)#x as boolean) AS CAST(1 AS STRING)#x]
   :  +- Project [cast(1 as string) AS CAST(1 AS STRING)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2 as boolean) AS CAST(2 AS BOOLEAN)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS STRING)#x as timestamp) AS CAST(1 AS STRING)#x]
   :  +- Project [cast(1 as string) AS CAST(1 AS STRING)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2017-12-11 09:30:00.0 as timestamp) AS CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as string) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(1 AS STRING)#x as date) AS CAST(1 AS STRING)#x]
   :  +- Project [cast(1 as string) AS CAST(1 AS STRING)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2017-12-11 09:30:00 as date) AS CAST(2017-12-11 09:30:00 AS DATE)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"TINYINT\"",
    "dataType2" : "\"BINARY\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 72,
    "fragment" : "SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as tinyint) FROM t"
  } ]
}


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"SMALLINT\"",
    "dataType2" : "\"BINARY\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 73,
    "fragment" : "SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as smallint) FROM t"
  } ]
}


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as int) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"INT\"",
    "dataType2" : "\"BINARY\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 68,
    "fragment" : "SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as int) FROM t"
  } ]
}


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BIGINT\"",
    "dataType2" : "\"BINARY\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 71,
    "fragment" : "SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as bigint) FROM t"
  } ]
}


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as float) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"FLOAT\"",
    "dataType2" : "\"BINARY\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 70,
    "fragment" : "SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as float) FROM t"
  } ]
}


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as double) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DOUBLE\"",
    "dataType2" : "\"BINARY\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 71,
    "fragment" : "SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as double) FROM t"
  } ]
}


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DECIMAL(10,0)\"",
    "dataType2" : "\"BINARY\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 79,
    "fragment" : "SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t"
  } ]
}


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as string) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as binary) AS CAST(1 AS BINARY)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS STRING)#x as binary) AS CAST(2 AS STRING)#x]
      +- Project [cast(2 as string) AS CAST(2 AS STRING)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as binary) AS CAST(1 AS BINARY)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(2 as binary) AS CAST(2 AS BINARY)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BOOLEAN\"",
    "dataType2" : "\"BINARY\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 72,
    "fragment" : "SELECT cast('1' as binary) FROM t UNION SELECT cast(2 as boolean) FROM t"
  } ]
}


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"TIMESTAMP\"",
    "dataType2" : "\"BINARY\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 96,
    "fragment" : "SELECT cast('1' as binary) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t"
  } ]
}


-- !query
SELECT cast('1' as binary) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DATE\"",
    "dataType2" : "\"BINARY\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 89,
    "fragment" : "SELECT cast('1' as binary) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t"
  } ]
}


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"TINYINT\"",
    "dataType2" : "\"BOOLEAN\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 71,
    "fragment" : "SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as tinyint) FROM t"
  } ]
}


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"SMALLINT\"",
    "dataType2" : "\"BOOLEAN\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 72,
    "fragment" : "SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as smallint) FROM t"
  } ]
}


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as int) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"INT\"",
    "dataType2" : "\"BOOLEAN\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 67,
    "fragment" : "SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as int) FROM t"
  } ]
}


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BIGINT\"",
    "dataType2" : "\"BOOLEAN\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 70,
    "fragment" : "SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as bigint) FROM t"
  } ]
}


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as float) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"FLOAT\"",
    "dataType2" : "\"BOOLEAN\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 69,
    "fragment" : "SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as float) FROM t"
  } ]
}


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as double) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DOUBLE\"",
    "dataType2" : "\"BOOLEAN\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 70,
    "fragment" : "SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as double) FROM t"
  } ]
}


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DECIMAL(10,0)\"",
    "dataType2" : "\"BOOLEAN\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 78,
    "fragment" : "SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t"
  } ]
}


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as string) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as boolean) AS CAST(1 AS BOOLEAN)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS STRING)#x as boolean) AS CAST(2 AS STRING)#x]
      +- Project [cast(2 as string) AS CAST(2 AS STRING)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BINARY\"",
    "dataType2" : "\"BOOLEAN\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 72,
    "fragment" : "SELECT cast(1 as boolean) FROM t UNION SELECT cast('2' as binary) FROM t"
  } ]
}


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(1 as boolean) AS CAST(1 AS BOOLEAN)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(2 as boolean) AS CAST(2 AS BOOLEAN)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"TIMESTAMP\"",
    "dataType2" : "\"BOOLEAN\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 95,
    "fragment" : "SELECT cast(1 as boolean) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t"
  } ]
}


-- !query
SELECT cast(1 as boolean) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DATE\"",
    "dataType2" : "\"BOOLEAN\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 88,
    "fragment" : "SELECT cast(1 as boolean) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"TINYINT\"",
    "dataType2" : "\"TIMESTAMP\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 95,
    "fragment" : "SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as tinyint) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"SMALLINT\"",
    "dataType2" : "\"TIMESTAMP\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 96,
    "fragment" : "SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as smallint) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as int) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"INT\"",
    "dataType2" : "\"TIMESTAMP\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 91,
    "fragment" : "SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as int) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BIGINT\"",
    "dataType2" : "\"TIMESTAMP\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 94,
    "fragment" : "SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as bigint) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as float) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"FLOAT\"",
    "dataType2" : "\"TIMESTAMP\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 93,
    "fragment" : "SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as float) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as double) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DOUBLE\"",
    "dataType2" : "\"TIMESTAMP\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 94,
    "fragment" : "SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as double) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DECIMAL(10,0)\"",
    "dataType2" : "\"TIMESTAMP\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 102,
    "fragment" : "SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as string) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(2017-12-12 09:30:00.0 as timestamp) AS CAST(2017-12-12 09:30:00.0 AS TIMESTAMP)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS STRING)#x as timestamp) AS CAST(2 AS STRING)#x]
      +- Project [cast(2 as string) AS CAST(2 AS STRING)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BINARY\"",
    "dataType2" : "\"TIMESTAMP\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 96,
    "fragment" : "SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast('2' as binary) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BOOLEAN\"",
    "dataType2" : "\"TIMESTAMP\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 95,
    "fragment" : "SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast(2 as boolean) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(2017-12-12 09:30:00.0 as timestamp) AS CAST(2017-12-12 09:30:00.0 AS TIMESTAMP)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(2017-12-11 09:30:00.0 as timestamp) AS CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast('2017-12-12 09:30:00.0' as timestamp) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(2017-12-12 09:30:00.0 as timestamp) AS CAST(2017-12-12 09:30:00.0 AS TIMESTAMP)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2017-12-11 09:30:00 AS DATE)#x as timestamp) AS CAST(2017-12-11 09:30:00 AS DATE)#x]
      +- Project [cast(2017-12-11 09:30:00 as date) AS CAST(2017-12-11 09:30:00 AS DATE)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as tinyint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"TINYINT\"",
    "dataType2" : "\"DATE\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 88,
    "fragment" : "SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as tinyint) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as smallint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"SMALLINT\"",
    "dataType2" : "\"DATE\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 89,
    "fragment" : "SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as smallint) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as int) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"INT\"",
    "dataType2" : "\"DATE\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 84,
    "fragment" : "SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as int) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as bigint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BIGINT\"",
    "dataType2" : "\"DATE\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 87,
    "fragment" : "SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as bigint) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as float) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"FLOAT\"",
    "dataType2" : "\"DATE\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 86,
    "fragment" : "SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as float) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as double) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DOUBLE\"",
    "dataType2" : "\"DATE\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 87,
    "fragment" : "SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as double) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"DECIMAL(10,0)\"",
    "dataType2" : "\"DATE\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 95,
    "fragment" : "SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as decimal(10, 0)) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as string) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(2017-12-12 09:30:00 as date) AS CAST(2017-12-12 09:30:00 AS DATE)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(CAST(2 AS STRING)#x as date) AS CAST(2 AS STRING)#x]
      +- Project [cast(2 as string) AS CAST(2 AS STRING)#x]
         +- SubqueryAlias t
            +- View (`t`, [1#x])
               +- Project [cast(1#x as int) AS 1#x]
                  +- Project [1 AS 1#x]
                     +- OneRowRelation


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast('2' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BINARY\"",
    "dataType2" : "\"DATE\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 89,
    "fragment" : "SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast('2' as binary) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INCOMPATIBLE_COLUMN_TYPE",
  "sqlState" : "42825",
  "messageParameters" : {
    "columnOrdinalNumber" : "first",
    "dataType1" : "\"BOOLEAN\"",
    "dataType2" : "\"DATE\"",
    "hint" : "",
    "operator" : "UNION",
    "tableOrdinalNumber" : "second"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 88,
    "fragment" : "SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast(2 as boolean) FROM t"
  } ]
}


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(CAST(2017-12-12 09:30:00 AS DATE)#x as timestamp) AS CAST(2017-12-12 09:30:00 AS DATE)#x]
   :  +- Project [cast(2017-12-12 09:30:00 as date) AS CAST(2017-12-12 09:30:00 AS DATE)#x]
   :     +- SubqueryAlias t
   :        +- View (`t`, [1#x])
   :           +- Project [cast(1#x as int) AS 1#x]
   :              +- Project [1 AS 1#x]
   :                 +- OneRowRelation
   +- Project [cast(2017-12-11 09:30:00.0 as timestamp) AS CAST(2017-12-11 09:30:00.0 AS TIMESTAMP)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation


-- !query
SELECT cast('2017-12-12 09:30:00' as date) FROM t UNION SELECT cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
Distinct
+- Union false, false
   :- Project [cast(2017-12-12 09:30:00 as date) AS CAST(2017-12-12 09:30:00 AS DATE)#x]
   :  +- SubqueryAlias t
   :     +- View (`t`, [1#x])
   :        +- Project [cast(1#x as int) AS 1#x]
   :           +- Project [1 AS 1#x]
   :              +- OneRowRelation
   +- Project [cast(2017-12-11 09:30:00 as date) AS CAST(2017-12-11 09:30:00 AS DATE)#x]
      +- SubqueryAlias t
         +- View (`t`, [1#x])
            +- Project [cast(1#x as int) AS 1#x]
               +- Project [1 AS 1#x]
                  +- OneRowRelation
