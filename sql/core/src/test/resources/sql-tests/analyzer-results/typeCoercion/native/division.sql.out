-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW t AS SELECT 1
-- !query analysis
CreateViewCommand `t`, SELECT 1, false, false, LocalTempView, UNSUPPORTED, true
   +- Project [1 AS 1#x]
      +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) / cast(1 as tinyint) FROM t
-- !query analysis
Project [(cast(cast(1 as tinyint) as double) / cast(cast(1 as tinyint) as double)) AS (CAST(1 AS TINYINT) / CAST(1 AS TINYINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) / cast(1 as smallint) FROM t
-- !query analysis
Project [(cast(cast(1 as tinyint) as double) / cast(cast(1 as smallint) as double)) AS (CAST(1 AS TINYINT) / CAST(1 AS SMALLINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) / cast(1 as int) FROM t
-- !query analysis
Project [(cast(cast(1 as tinyint) as double) / cast(cast(1 as int) as double)) AS (CAST(1 AS TINYINT) / CAST(1 AS INT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) / cast(1 as bigint) FROM t
-- !query analysis
Project [(cast(cast(1 as tinyint) as double) / cast(cast(1 as bigint) as double)) AS (CAST(1 AS TINYINT) / CAST(1 AS BIGINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) / cast(1 as float) FROM t
-- !query analysis
Project [(cast(cast(1 as tinyint) as double) / cast(cast(1 as float) as double)) AS (CAST(1 AS TINYINT) / CAST(1 AS FLOAT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) / cast(1 as double) FROM t
-- !query analysis
Project [(cast(cast(1 as tinyint) as double) / cast(cast(1 as double) as double)) AS (CAST(1 AS TINYINT) / CAST(1 AS DOUBLE))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) / cast(1 as decimal(10, 0)) FROM t
-- !query analysis
Project [(cast(cast(1 as tinyint) as decimal(3,0)) / cast(1 as decimal(10,0))) AS (CAST(1 AS TINYINT) / CAST(1 AS DECIMAL(10,0)))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) / cast(1 as string) FROM t
-- !query analysis
Project [(cast(cast(cast(1 as tinyint) as bigint) as double) / cast(cast(cast(1 as string) as bigint) as double)) AS (CAST(1 AS TINYINT) / CAST(1 AS STRING))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as tinyint) / cast('1' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"TINYINT\"",
    "right" : "\"BINARY\"",
    "sqlExpr" : "\"(CAST(1 AS TINYINT) / CAST(1 AS BINARY))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 47,
    "fragment" : "cast(1 as tinyint) / cast('1' as binary)"
  } ]
}


-- !query
SELECT cast(1 as tinyint) / cast(1 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"TINYINT\"",
    "right" : "\"BOOLEAN\"",
    "sqlExpr" : "\"(CAST(1 AS TINYINT) / CAST(1 AS BOOLEAN))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 46,
    "fragment" : "cast(1 as tinyint) / cast(1 as boolean)"
  } ]
}


-- !query
SELECT cast(1 as tinyint) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"TINYINT\"",
    "right" : "\"TIMESTAMP\"",
    "sqlExpr" : "\"(CAST(1 AS TINYINT) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 70,
    "fragment" : "cast(1 as tinyint) / cast('2017-12-11 09:30:00.0' as timestamp)"
  } ]
}


-- !query
SELECT cast(1 as tinyint) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"TINYINT\"",
    "right" : "\"DATE\"",
    "sqlExpr" : "\"(CAST(1 AS TINYINT) / CAST(2017-12-11 09:30:00 AS DATE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 63,
    "fragment" : "cast(1 as tinyint) / cast('2017-12-11 09:30:00' as date)"
  } ]
}


-- !query
SELECT cast(1 as smallint) / cast(1 as tinyint) FROM t
-- !query analysis
Project [(cast(cast(1 as smallint) as double) / cast(cast(1 as tinyint) as double)) AS (CAST(1 AS SMALLINT) / CAST(1 AS TINYINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as smallint) / cast(1 as smallint) FROM t
-- !query analysis
Project [(cast(cast(1 as smallint) as double) / cast(cast(1 as smallint) as double)) AS (CAST(1 AS SMALLINT) / CAST(1 AS SMALLINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as smallint) / cast(1 as int) FROM t
-- !query analysis
Project [(cast(cast(1 as smallint) as double) / cast(cast(1 as int) as double)) AS (CAST(1 AS SMALLINT) / CAST(1 AS INT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as smallint) / cast(1 as bigint) FROM t
-- !query analysis
Project [(cast(cast(1 as smallint) as double) / cast(cast(1 as bigint) as double)) AS (CAST(1 AS SMALLINT) / CAST(1 AS BIGINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as smallint) / cast(1 as float) FROM t
-- !query analysis
Project [(cast(cast(1 as smallint) as double) / cast(cast(1 as float) as double)) AS (CAST(1 AS SMALLINT) / CAST(1 AS FLOAT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as smallint) / cast(1 as double) FROM t
-- !query analysis
Project [(cast(cast(1 as smallint) as double) / cast(cast(1 as double) as double)) AS (CAST(1 AS SMALLINT) / CAST(1 AS DOUBLE))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as smallint) / cast(1 as decimal(10, 0)) FROM t
-- !query analysis
Project [(cast(cast(1 as smallint) as decimal(5,0)) / cast(1 as decimal(10,0))) AS (CAST(1 AS SMALLINT) / CAST(1 AS DECIMAL(10,0)))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as smallint) / cast(1 as string) FROM t
-- !query analysis
Project [(cast(cast(cast(1 as smallint) as bigint) as double) / cast(cast(cast(1 as string) as bigint) as double)) AS (CAST(1 AS SMALLINT) / CAST(1 AS STRING))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as smallint) / cast('1' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"SMALLINT\"",
    "right" : "\"BINARY\"",
    "sqlExpr" : "\"(CAST(1 AS SMALLINT) / CAST(1 AS BINARY))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 48,
    "fragment" : "cast(1 as smallint) / cast('1' as binary)"
  } ]
}


-- !query
SELECT cast(1 as smallint) / cast(1 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"SMALLINT\"",
    "right" : "\"BOOLEAN\"",
    "sqlExpr" : "\"(CAST(1 AS SMALLINT) / CAST(1 AS BOOLEAN))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 47,
    "fragment" : "cast(1 as smallint) / cast(1 as boolean)"
  } ]
}


-- !query
SELECT cast(1 as smallint) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"SMALLINT\"",
    "right" : "\"TIMESTAMP\"",
    "sqlExpr" : "\"(CAST(1 AS SMALLINT) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 71,
    "fragment" : "cast(1 as smallint) / cast('2017-12-11 09:30:00.0' as timestamp)"
  } ]
}


-- !query
SELECT cast(1 as smallint) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"SMALLINT\"",
    "right" : "\"DATE\"",
    "sqlExpr" : "\"(CAST(1 AS SMALLINT) / CAST(2017-12-11 09:30:00 AS DATE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 64,
    "fragment" : "cast(1 as smallint) / cast('2017-12-11 09:30:00' as date)"
  } ]
}


-- !query
SELECT cast(1 as int) / cast(1 as tinyint) FROM t
-- !query analysis
Project [(cast(cast(1 as int) as double) / cast(cast(1 as tinyint) as double)) AS (CAST(1 AS INT) / CAST(1 AS TINYINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as int) / cast(1 as smallint) FROM t
-- !query analysis
Project [(cast(cast(1 as int) as double) / cast(cast(1 as smallint) as double)) AS (CAST(1 AS INT) / CAST(1 AS SMALLINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as int) / cast(1 as int) FROM t
-- !query analysis
Project [(cast(cast(1 as int) as double) / cast(cast(1 as int) as double)) AS (CAST(1 AS INT) / CAST(1 AS INT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as int) / cast(1 as bigint) FROM t
-- !query analysis
Project [(cast(cast(1 as int) as double) / cast(cast(1 as bigint) as double)) AS (CAST(1 AS INT) / CAST(1 AS BIGINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as int) / cast(1 as float) FROM t
-- !query analysis
Project [(cast(cast(1 as int) as double) / cast(cast(1 as float) as double)) AS (CAST(1 AS INT) / CAST(1 AS FLOAT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as int) / cast(1 as double) FROM t
-- !query analysis
Project [(cast(cast(1 as int) as double) / cast(cast(1 as double) as double)) AS (CAST(1 AS INT) / CAST(1 AS DOUBLE))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as int) / cast(1 as decimal(10, 0)) FROM t
-- !query analysis
Project [(cast(cast(1 as int) as decimal(10,0)) / cast(1 as decimal(10,0))) AS (CAST(1 AS INT) / CAST(1 AS DECIMAL(10,0)))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as int) / cast(1 as string) FROM t
-- !query analysis
Project [(cast(cast(cast(1 as int) as bigint) as double) / cast(cast(cast(1 as string) as bigint) as double)) AS (CAST(1 AS INT) / CAST(1 AS STRING))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as int) / cast('1' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"INT\"",
    "right" : "\"BINARY\"",
    "sqlExpr" : "\"(CAST(1 AS INT) / CAST(1 AS BINARY))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 43,
    "fragment" : "cast(1 as int) / cast('1' as binary)"
  } ]
}


-- !query
SELECT cast(1 as int) / cast(1 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"INT\"",
    "right" : "\"BOOLEAN\"",
    "sqlExpr" : "\"(CAST(1 AS INT) / CAST(1 AS BOOLEAN))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 42,
    "fragment" : "cast(1 as int) / cast(1 as boolean)"
  } ]
}


-- !query
SELECT cast(1 as int) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"INT\"",
    "right" : "\"TIMESTAMP\"",
    "sqlExpr" : "\"(CAST(1 AS INT) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 66,
    "fragment" : "cast(1 as int) / cast('2017-12-11 09:30:00.0' as timestamp)"
  } ]
}


-- !query
SELECT cast(1 as int) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"INT\"",
    "right" : "\"DATE\"",
    "sqlExpr" : "\"(CAST(1 AS INT) / CAST(2017-12-11 09:30:00 AS DATE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 59,
    "fragment" : "cast(1 as int) / cast('2017-12-11 09:30:00' as date)"
  } ]
}


-- !query
SELECT cast(1 as bigint) / cast(1 as tinyint) FROM t
-- !query analysis
Project [(cast(cast(1 as bigint) as double) / cast(cast(1 as tinyint) as double)) AS (CAST(1 AS BIGINT) / CAST(1 AS TINYINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as bigint) / cast(1 as smallint) FROM t
-- !query analysis
Project [(cast(cast(1 as bigint) as double) / cast(cast(1 as smallint) as double)) AS (CAST(1 AS BIGINT) / CAST(1 AS SMALLINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as bigint) / cast(1 as int) FROM t
-- !query analysis
Project [(cast(cast(1 as bigint) as double) / cast(cast(1 as int) as double)) AS (CAST(1 AS BIGINT) / CAST(1 AS INT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as bigint) / cast(1 as bigint) FROM t
-- !query analysis
Project [(cast(cast(1 as bigint) as double) / cast(cast(1 as bigint) as double)) AS (CAST(1 AS BIGINT) / CAST(1 AS BIGINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as bigint) / cast(1 as float) FROM t
-- !query analysis
Project [(cast(cast(1 as bigint) as double) / cast(cast(1 as float) as double)) AS (CAST(1 AS BIGINT) / CAST(1 AS FLOAT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as bigint) / cast(1 as double) FROM t
-- !query analysis
Project [(cast(cast(1 as bigint) as double) / cast(cast(1 as double) as double)) AS (CAST(1 AS BIGINT) / CAST(1 AS DOUBLE))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as bigint) / cast(1 as decimal(10, 0)) FROM t
-- !query analysis
Project [(cast(cast(1 as bigint) as decimal(20,0)) / cast(1 as decimal(10,0))) AS (CAST(1 AS BIGINT) / CAST(1 AS DECIMAL(10,0)))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as bigint) / cast(1 as string) FROM t
-- !query analysis
Project [(cast(cast(1 as bigint) as double) / cast(cast(cast(1 as string) as bigint) as double)) AS (CAST(1 AS BIGINT) / CAST(1 AS STRING))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as bigint) / cast('1' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BIGINT\"",
    "right" : "\"BINARY\"",
    "sqlExpr" : "\"(CAST(1 AS BIGINT) / CAST(1 AS BINARY))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 46,
    "fragment" : "cast(1 as bigint) / cast('1' as binary)"
  } ]
}


-- !query
SELECT cast(1 as bigint) / cast(1 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BIGINT\"",
    "right" : "\"BOOLEAN\"",
    "sqlExpr" : "\"(CAST(1 AS BIGINT) / CAST(1 AS BOOLEAN))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 45,
    "fragment" : "cast(1 as bigint) / cast(1 as boolean)"
  } ]
}


-- !query
SELECT cast(1 as bigint) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BIGINT\"",
    "right" : "\"TIMESTAMP\"",
    "sqlExpr" : "\"(CAST(1 AS BIGINT) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 69,
    "fragment" : "cast(1 as bigint) / cast('2017-12-11 09:30:00.0' as timestamp)"
  } ]
}


-- !query
SELECT cast(1 as bigint) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BIGINT\"",
    "right" : "\"DATE\"",
    "sqlExpr" : "\"(CAST(1 AS BIGINT) / CAST(2017-12-11 09:30:00 AS DATE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 62,
    "fragment" : "cast(1 as bigint) / cast('2017-12-11 09:30:00' as date)"
  } ]
}


-- !query
SELECT cast(1 as float) / cast(1 as tinyint) FROM t
-- !query analysis
Project [(cast(cast(1 as float) as double) / cast(cast(1 as tinyint) as double)) AS (CAST(1 AS FLOAT) / CAST(1 AS TINYINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as float) / cast(1 as smallint) FROM t
-- !query analysis
Project [(cast(cast(1 as float) as double) / cast(cast(1 as smallint) as double)) AS (CAST(1 AS FLOAT) / CAST(1 AS SMALLINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as float) / cast(1 as int) FROM t
-- !query analysis
Project [(cast(cast(1 as float) as double) / cast(cast(1 as int) as double)) AS (CAST(1 AS FLOAT) / CAST(1 AS INT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as float) / cast(1 as bigint) FROM t
-- !query analysis
Project [(cast(cast(1 as float) as double) / cast(cast(1 as bigint) as double)) AS (CAST(1 AS FLOAT) / CAST(1 AS BIGINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as float) / cast(1 as float) FROM t
-- !query analysis
Project [(cast(cast(1 as float) as double) / cast(cast(1 as float) as double)) AS (CAST(1 AS FLOAT) / CAST(1 AS FLOAT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as float) / cast(1 as double) FROM t
-- !query analysis
Project [(cast(cast(1 as float) as double) / cast(cast(1 as double) as double)) AS (CAST(1 AS FLOAT) / CAST(1 AS DOUBLE))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as float) / cast(1 as decimal(10, 0)) FROM t
-- !query analysis
Project [(cast(cast(1 as float) as double) / cast(cast(cast(1 as decimal(10,0)) as double) as double)) AS (CAST(1 AS FLOAT) / CAST(1 AS DECIMAL(10,0)))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as float) / cast(1 as string) FROM t
-- !query analysis
Project [(cast(cast(1 as float) as double) / cast(cast(1 as string) as double)) AS (CAST(1 AS FLOAT) / CAST(1 AS STRING))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as float) / cast('1' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"FLOAT\"",
    "right" : "\"BINARY\"",
    "sqlExpr" : "\"(CAST(1 AS FLOAT) / CAST(1 AS BINARY))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 45,
    "fragment" : "cast(1 as float) / cast('1' as binary)"
  } ]
}


-- !query
SELECT cast(1 as float) / cast(1 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"FLOAT\"",
    "right" : "\"BOOLEAN\"",
    "sqlExpr" : "\"(CAST(1 AS FLOAT) / CAST(1 AS BOOLEAN))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 44,
    "fragment" : "cast(1 as float) / cast(1 as boolean)"
  } ]
}


-- !query
SELECT cast(1 as float) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"FLOAT\"",
    "right" : "\"TIMESTAMP\"",
    "sqlExpr" : "\"(CAST(1 AS FLOAT) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 68,
    "fragment" : "cast(1 as float) / cast('2017-12-11 09:30:00.0' as timestamp)"
  } ]
}


-- !query
SELECT cast(1 as float) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"FLOAT\"",
    "right" : "\"DATE\"",
    "sqlExpr" : "\"(CAST(1 AS FLOAT) / CAST(2017-12-11 09:30:00 AS DATE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 61,
    "fragment" : "cast(1 as float) / cast('2017-12-11 09:30:00' as date)"
  } ]
}


-- !query
SELECT cast(1 as double) / cast(1 as tinyint) FROM t
-- !query analysis
Project [(cast(1 as double) / cast(cast(1 as tinyint) as double)) AS (CAST(1 AS DOUBLE) / CAST(1 AS TINYINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as double) / cast(1 as smallint) FROM t
-- !query analysis
Project [(cast(1 as double) / cast(cast(1 as smallint) as double)) AS (CAST(1 AS DOUBLE) / CAST(1 AS SMALLINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as double) / cast(1 as int) FROM t
-- !query analysis
Project [(cast(1 as double) / cast(cast(1 as int) as double)) AS (CAST(1 AS DOUBLE) / CAST(1 AS INT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as double) / cast(1 as bigint) FROM t
-- !query analysis
Project [(cast(1 as double) / cast(cast(1 as bigint) as double)) AS (CAST(1 AS DOUBLE) / CAST(1 AS BIGINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as double) / cast(1 as float) FROM t
-- !query analysis
Project [(cast(1 as double) / cast(cast(1 as float) as double)) AS (CAST(1 AS DOUBLE) / CAST(1 AS FLOAT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as double) / cast(1 as double) FROM t
-- !query analysis
Project [(cast(1 as double) / cast(1 as double)) AS (CAST(1 AS DOUBLE) / CAST(1 AS DOUBLE))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as double) / cast(1 as decimal(10, 0)) FROM t
-- !query analysis
Project [(cast(1 as double) / cast(cast(1 as decimal(10,0)) as double)) AS (CAST(1 AS DOUBLE) / CAST(1 AS DECIMAL(10,0)))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as double) / cast(1 as string) FROM t
-- !query analysis
Project [(cast(1 as double) / cast(cast(1 as string) as double)) AS (CAST(1 AS DOUBLE) / CAST(1 AS STRING))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as double) / cast('1' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DOUBLE\"",
    "right" : "\"BINARY\"",
    "sqlExpr" : "\"(CAST(1 AS DOUBLE) / CAST(1 AS BINARY))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 46,
    "fragment" : "cast(1 as double) / cast('1' as binary)"
  } ]
}


-- !query
SELECT cast(1 as double) / cast(1 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DOUBLE\"",
    "right" : "\"BOOLEAN\"",
    "sqlExpr" : "\"(CAST(1 AS DOUBLE) / CAST(1 AS BOOLEAN))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 45,
    "fragment" : "cast(1 as double) / cast(1 as boolean)"
  } ]
}


-- !query
SELECT cast(1 as double) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DOUBLE\"",
    "right" : "\"TIMESTAMP\"",
    "sqlExpr" : "\"(CAST(1 AS DOUBLE) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 69,
    "fragment" : "cast(1 as double) / cast('2017-12-11 09:30:00.0' as timestamp)"
  } ]
}


-- !query
SELECT cast(1 as double) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DOUBLE\"",
    "right" : "\"DATE\"",
    "sqlExpr" : "\"(CAST(1 AS DOUBLE) / CAST(2017-12-11 09:30:00 AS DATE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 62,
    "fragment" : "cast(1 as double) / cast('2017-12-11 09:30:00' as date)"
  } ]
}


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as tinyint) FROM t
-- !query analysis
Project [(cast(1 as decimal(10,0)) / cast(cast(1 as tinyint) as decimal(3,0))) AS (CAST(1 AS DECIMAL(10,0)) / CAST(1 AS TINYINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as smallint) FROM t
-- !query analysis
Project [(cast(1 as decimal(10,0)) / cast(cast(1 as smallint) as decimal(5,0))) AS (CAST(1 AS DECIMAL(10,0)) / CAST(1 AS SMALLINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as int) FROM t
-- !query analysis
Project [(cast(1 as decimal(10,0)) / cast(cast(1 as int) as decimal(10,0))) AS (CAST(1 AS DECIMAL(10,0)) / CAST(1 AS INT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as bigint) FROM t
-- !query analysis
Project [(cast(1 as decimal(10,0)) / cast(cast(1 as bigint) as decimal(20,0))) AS (CAST(1 AS DECIMAL(10,0)) / CAST(1 AS BIGINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as float) FROM t
-- !query analysis
Project [(cast(cast(1 as decimal(10,0)) as double) / cast(cast(1 as float) as double)) AS (CAST(1 AS DECIMAL(10,0)) / CAST(1 AS FLOAT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as double) FROM t
-- !query analysis
Project [(cast(cast(1 as decimal(10,0)) as double) / cast(1 as double)) AS (CAST(1 AS DECIMAL(10,0)) / CAST(1 AS DOUBLE))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as decimal(10, 0)) FROM t
-- !query analysis
Project [(cast(1 as decimal(10,0)) / cast(1 as decimal(10,0))) AS (CAST(1 AS DECIMAL(10,0)) / CAST(1 AS DECIMAL(10,0)))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as string) FROM t
-- !query analysis
Project [(cast(cast(1 as decimal(10,0)) as double) / cast(cast(1 as string) as double)) AS (CAST(1 AS DECIMAL(10,0)) / CAST(1 AS STRING))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as decimal(10, 0)) / cast('1' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DECIMAL(10,0)\"",
    "right" : "\"BINARY\"",
    "sqlExpr" : "\"(CAST(1 AS DECIMAL(10,0)) / CAST(1 AS BINARY))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 54,
    "fragment" : "cast(1 as decimal(10, 0)) / cast('1' as binary)"
  } ]
}


-- !query
SELECT cast(1 as decimal(10, 0)) / cast(1 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DECIMAL(10,0)\"",
    "right" : "\"BOOLEAN\"",
    "sqlExpr" : "\"(CAST(1 AS DECIMAL(10,0)) / CAST(1 AS BOOLEAN))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 53,
    "fragment" : "cast(1 as decimal(10, 0)) / cast(1 as boolean)"
  } ]
}


-- !query
SELECT cast(1 as decimal(10, 0)) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DECIMAL(10,0)\"",
    "right" : "\"TIMESTAMP\"",
    "sqlExpr" : "\"(CAST(1 AS DECIMAL(10,0)) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 77,
    "fragment" : "cast(1 as decimal(10, 0)) / cast('2017-12-11 09:30:00.0' as timestamp)"
  } ]
}


-- !query
SELECT cast(1 as decimal(10, 0)) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DECIMAL(10,0)\"",
    "right" : "\"DATE\"",
    "sqlExpr" : "\"(CAST(1 AS DECIMAL(10,0)) / CAST(2017-12-11 09:30:00 AS DATE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 70,
    "fragment" : "cast(1 as decimal(10, 0)) / cast('2017-12-11 09:30:00' as date)"
  } ]
}


-- !query
SELECT cast(1 as string) / cast(1 as tinyint) FROM t
-- !query analysis
Project [(cast(cast(cast(1 as string) as bigint) as double) / cast(cast(cast(1 as tinyint) as bigint) as double)) AS (CAST(1 AS STRING) / CAST(1 AS TINYINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as string) / cast(1 as smallint) FROM t
-- !query analysis
Project [(cast(cast(cast(1 as string) as bigint) as double) / cast(cast(cast(1 as smallint) as bigint) as double)) AS (CAST(1 AS STRING) / CAST(1 AS SMALLINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as string) / cast(1 as int) FROM t
-- !query analysis
Project [(cast(cast(cast(1 as string) as bigint) as double) / cast(cast(cast(1 as int) as bigint) as double)) AS (CAST(1 AS STRING) / CAST(1 AS INT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as string) / cast(1 as bigint) FROM t
-- !query analysis
Project [(cast(cast(cast(1 as string) as bigint) as double) / cast(cast(1 as bigint) as double)) AS (CAST(1 AS STRING) / CAST(1 AS BIGINT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as string) / cast(1 as float) FROM t
-- !query analysis
Project [(cast(cast(1 as string) as double) / cast(cast(1 as float) as double)) AS (CAST(1 AS STRING) / CAST(1 AS FLOAT))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as string) / cast(1 as double) FROM t
-- !query analysis
Project [(cast(cast(1 as string) as double) / cast(1 as double)) AS (CAST(1 AS STRING) / CAST(1 AS DOUBLE))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as string) / cast(1 as decimal(10, 0)) FROM t
-- !query analysis
Project [(cast(cast(1 as string) as double) / cast(cast(1 as decimal(10,0)) as double)) AS (CAST(1 AS STRING) / CAST(1 AS DECIMAL(10,0)))#x]
+- SubqueryAlias t
   +- View (`t`, [1#x])
      +- Project [cast(1#x as int) AS 1#x]
         +- Project [1 AS 1#x]
            +- OneRowRelation


-- !query
SELECT cast(1 as string) / cast(1 as string) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_WRONG_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "actualDataType" : "\"STRING\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "sqlExpr" : "\"(CAST(1 AS STRING) / CAST(1 AS STRING))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 44,
    "fragment" : "cast(1 as string) / cast(1 as string)"
  } ]
}


-- !query
SELECT cast(1 as string) / cast('1' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_WRONG_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "actualDataType" : "\"BINARY\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "sqlExpr" : "\"(CAST(1 AS STRING) / CAST(1 AS BINARY))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 46,
    "fragment" : "cast(1 as string) / cast('1' as binary)"
  } ]
}


-- !query
SELECT cast(1 as string) / cast(1 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_WRONG_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "actualDataType" : "\"BOOLEAN\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "sqlExpr" : "\"(CAST(1 AS STRING) / CAST(1 AS BOOLEAN))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 45,
    "fragment" : "cast(1 as string) / cast(1 as boolean)"
  } ]
}


-- !query
SELECT cast(1 as string) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_WRONG_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "actualDataType" : "\"TIMESTAMP\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "sqlExpr" : "\"(CAST(1 AS STRING) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 69,
    "fragment" : "cast(1 as string) / cast('2017-12-11 09:30:00.0' as timestamp)"
  } ]
}


-- !query
SELECT cast(1 as string) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_WRONG_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "actualDataType" : "\"DATE\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "sqlExpr" : "\"(CAST(1 AS STRING) / CAST(2017-12-11 09:30:00 AS DATE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 62,
    "fragment" : "cast(1 as string) / cast('2017-12-11 09:30:00' as date)"
  } ]
}


-- !query
SELECT cast('1' as binary) / cast(1 as tinyint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BINARY\"",
    "right" : "\"TINYINT\"",
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS TINYINT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 47,
    "fragment" : "cast('1' as binary) / cast(1 as tinyint)"
  } ]
}


-- !query
SELECT cast('1' as binary) / cast(1 as smallint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BINARY\"",
    "right" : "\"SMALLINT\"",
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS SMALLINT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 48,
    "fragment" : "cast('1' as binary) / cast(1 as smallint)"
  } ]
}


-- !query
SELECT cast('1' as binary) / cast(1 as int) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BINARY\"",
    "right" : "\"INT\"",
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS INT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 43,
    "fragment" : "cast('1' as binary) / cast(1 as int)"
  } ]
}


-- !query
SELECT cast('1' as binary) / cast(1 as bigint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BINARY\"",
    "right" : "\"BIGINT\"",
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS BIGINT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 46,
    "fragment" : "cast('1' as binary) / cast(1 as bigint)"
  } ]
}


-- !query
SELECT cast('1' as binary) / cast(1 as float) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BINARY\"",
    "right" : "\"FLOAT\"",
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS FLOAT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 45,
    "fragment" : "cast('1' as binary) / cast(1 as float)"
  } ]
}


-- !query
SELECT cast('1' as binary) / cast(1 as double) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BINARY\"",
    "right" : "\"DOUBLE\"",
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS DOUBLE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 46,
    "fragment" : "cast('1' as binary) / cast(1 as double)"
  } ]
}


-- !query
SELECT cast('1' as binary) / cast(1 as decimal(10, 0)) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BINARY\"",
    "right" : "\"DECIMAL(10,0)\"",
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS DECIMAL(10,0)))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 54,
    "fragment" : "cast('1' as binary) / cast(1 as decimal(10, 0))"
  } ]
}


-- !query
SELECT cast('1' as binary) / cast(1 as string) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_WRONG_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "actualDataType" : "\"BINARY\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS STRING))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 46,
    "fragment" : "cast('1' as binary) / cast(1 as string)"
  } ]
}


-- !query
SELECT cast('1' as binary) / cast('1' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_WRONG_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "actualDataType" : "\"BINARY\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS BINARY))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 48,
    "fragment" : "cast('1' as binary) / cast('1' as binary)"
  } ]
}


-- !query
SELECT cast('1' as binary) / cast(1 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BINARY\"",
    "right" : "\"BOOLEAN\"",
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(1 AS BOOLEAN))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 47,
    "fragment" : "cast('1' as binary) / cast(1 as boolean)"
  } ]
}


-- !query
SELECT cast('1' as binary) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BINARY\"",
    "right" : "\"TIMESTAMP\"",
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 71,
    "fragment" : "cast('1' as binary) / cast('2017-12-11 09:30:00.0' as timestamp)"
  } ]
}


-- !query
SELECT cast('1' as binary) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BINARY\"",
    "right" : "\"DATE\"",
    "sqlExpr" : "\"(CAST(1 AS BINARY) / CAST(2017-12-11 09:30:00 AS DATE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 64,
    "fragment" : "cast('1' as binary) / cast('2017-12-11 09:30:00' as date)"
  } ]
}


-- !query
SELECT cast(1 as boolean) / cast(1 as tinyint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BOOLEAN\"",
    "right" : "\"TINYINT\"",
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS TINYINT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 46,
    "fragment" : "cast(1 as boolean) / cast(1 as tinyint)"
  } ]
}


-- !query
SELECT cast(1 as boolean) / cast(1 as smallint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BOOLEAN\"",
    "right" : "\"SMALLINT\"",
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS SMALLINT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 47,
    "fragment" : "cast(1 as boolean) / cast(1 as smallint)"
  } ]
}


-- !query
SELECT cast(1 as boolean) / cast(1 as int) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BOOLEAN\"",
    "right" : "\"INT\"",
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS INT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 42,
    "fragment" : "cast(1 as boolean) / cast(1 as int)"
  } ]
}


-- !query
SELECT cast(1 as boolean) / cast(1 as bigint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BOOLEAN\"",
    "right" : "\"BIGINT\"",
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS BIGINT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 45,
    "fragment" : "cast(1 as boolean) / cast(1 as bigint)"
  } ]
}


-- !query
SELECT cast(1 as boolean) / cast(1 as float) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BOOLEAN\"",
    "right" : "\"FLOAT\"",
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS FLOAT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 44,
    "fragment" : "cast(1 as boolean) / cast(1 as float)"
  } ]
}


-- !query
SELECT cast(1 as boolean) / cast(1 as double) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BOOLEAN\"",
    "right" : "\"DOUBLE\"",
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS DOUBLE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 45,
    "fragment" : "cast(1 as boolean) / cast(1 as double)"
  } ]
}


-- !query
SELECT cast(1 as boolean) / cast(1 as decimal(10, 0)) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BOOLEAN\"",
    "right" : "\"DECIMAL(10,0)\"",
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS DECIMAL(10,0)))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 53,
    "fragment" : "cast(1 as boolean) / cast(1 as decimal(10, 0))"
  } ]
}


-- !query
SELECT cast(1 as boolean) / cast(1 as string) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_WRONG_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "actualDataType" : "\"BOOLEAN\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS STRING))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 45,
    "fragment" : "cast(1 as boolean) / cast(1 as string)"
  } ]
}


-- !query
SELECT cast(1 as boolean) / cast('1' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BOOLEAN\"",
    "right" : "\"BINARY\"",
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS BINARY))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 47,
    "fragment" : "cast(1 as boolean) / cast('1' as binary)"
  } ]
}


-- !query
SELECT cast(1 as boolean) / cast(1 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_WRONG_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "actualDataType" : "\"BOOLEAN\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(1 AS BOOLEAN))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 46,
    "fragment" : "cast(1 as boolean) / cast(1 as boolean)"
  } ]
}


-- !query
SELECT cast(1 as boolean) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BOOLEAN\"",
    "right" : "\"TIMESTAMP\"",
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 70,
    "fragment" : "cast(1 as boolean) / cast('2017-12-11 09:30:00.0' as timestamp)"
  } ]
}


-- !query
SELECT cast(1 as boolean) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"BOOLEAN\"",
    "right" : "\"DATE\"",
    "sqlExpr" : "\"(CAST(1 AS BOOLEAN) / CAST(2017-12-11 09:30:00 AS DATE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 63,
    "fragment" : "cast(1 as boolean) / cast('2017-12-11 09:30:00' as date)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as tinyint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"TIMESTAMP\"",
    "right" : "\"TINYINT\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS TINYINT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 70,
    "fragment" : "cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as tinyint)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as smallint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"TIMESTAMP\"",
    "right" : "\"SMALLINT\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS SMALLINT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 71,
    "fragment" : "cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as smallint)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as int) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"TIMESTAMP\"",
    "right" : "\"INT\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS INT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 66,
    "fragment" : "cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as int)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as bigint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"TIMESTAMP\"",
    "right" : "\"BIGINT\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS BIGINT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 69,
    "fragment" : "cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as bigint)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as float) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"TIMESTAMP\"",
    "right" : "\"FLOAT\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS FLOAT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 68,
    "fragment" : "cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as float)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as double) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"TIMESTAMP\"",
    "right" : "\"DOUBLE\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS DOUBLE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 69,
    "fragment" : "cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as double)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as decimal(10, 0)) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"TIMESTAMP\"",
    "right" : "\"DECIMAL(10,0)\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS DECIMAL(10,0)))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 77,
    "fragment" : "cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as decimal(10, 0))"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as string) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_WRONG_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "actualDataType" : "\"TIMESTAMP\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS STRING))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 69,
    "fragment" : "cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as string)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast('1' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"TIMESTAMP\"",
    "right" : "\"BINARY\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS BINARY))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 71,
    "fragment" : "cast('2017-12-11 09:30:00.0' as timestamp) / cast('1' as binary)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"TIMESTAMP\"",
    "right" : "\"BOOLEAN\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(1 AS BOOLEAN))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 70,
    "fragment" : "cast('2017-12-11 09:30:00.0' as timestamp) / cast(1 as boolean)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_WRONG_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "actualDataType" : "\"TIMESTAMP\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 94,
    "fragment" : "cast('2017-12-11 09:30:00.0' as timestamp) / cast('2017-12-11 09:30:00.0' as timestamp)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00.0' as timestamp) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"TIMESTAMP\"",
    "right" : "\"DATE\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00.0 AS TIMESTAMP) / CAST(2017-12-11 09:30:00 AS DATE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 87,
    "fragment" : "cast('2017-12-11 09:30:00.0' as timestamp) / cast('2017-12-11 09:30:00' as date)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as tinyint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DATE\"",
    "right" : "\"TINYINT\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS TINYINT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 63,
    "fragment" : "cast('2017-12-11 09:30:00' as date) / cast(1 as tinyint)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as smallint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DATE\"",
    "right" : "\"SMALLINT\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS SMALLINT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 64,
    "fragment" : "cast('2017-12-11 09:30:00' as date) / cast(1 as smallint)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as int) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DATE\"",
    "right" : "\"INT\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS INT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 59,
    "fragment" : "cast('2017-12-11 09:30:00' as date) / cast(1 as int)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as bigint) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DATE\"",
    "right" : "\"BIGINT\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS BIGINT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 62,
    "fragment" : "cast('2017-12-11 09:30:00' as date) / cast(1 as bigint)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as float) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DATE\"",
    "right" : "\"FLOAT\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS FLOAT))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 61,
    "fragment" : "cast('2017-12-11 09:30:00' as date) / cast(1 as float)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as double) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DATE\"",
    "right" : "\"DOUBLE\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS DOUBLE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 62,
    "fragment" : "cast('2017-12-11 09:30:00' as date) / cast(1 as double)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as decimal(10, 0)) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DATE\"",
    "right" : "\"DECIMAL(10,0)\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS DECIMAL(10,0)))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 70,
    "fragment" : "cast('2017-12-11 09:30:00' as date) / cast(1 as decimal(10, 0))"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as string) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_WRONG_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "actualDataType" : "\"DATE\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS STRING))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 62,
    "fragment" : "cast('2017-12-11 09:30:00' as date) / cast(1 as string)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast('1' as binary) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DATE\"",
    "right" : "\"BINARY\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS BINARY))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 64,
    "fragment" : "cast('2017-12-11 09:30:00' as date) / cast('1' as binary)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast(1 as boolean) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DATE\"",
    "right" : "\"BOOLEAN\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(1 AS BOOLEAN))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 63,
    "fragment" : "cast('2017-12-11 09:30:00' as date) / cast(1 as boolean)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast('2017-12-11 09:30:00.0' as timestamp) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_DIFF_TYPES",
  "sqlState" : "42K09",
  "messageParameters" : {
    "left" : "\"DATE\"",
    "right" : "\"TIMESTAMP\"",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(2017-12-11 09:30:00.0 AS TIMESTAMP))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 87,
    "fragment" : "cast('2017-12-11 09:30:00' as date) / cast('2017-12-11 09:30:00.0' as timestamp)"
  } ]
}


-- !query
SELECT cast('2017-12-11 09:30:00' as date) / cast('2017-12-11 09:30:00' as date) FROM t
-- !query analysis
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.BINARY_OP_WRONG_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "actualDataType" : "\"DATE\"",
    "inputType" : "(\"DOUBLE\" or \"DECIMAL\")",
    "sqlExpr" : "\"(CAST(2017-12-11 09:30:00 AS DATE) / CAST(2017-12-11 09:30:00 AS DATE))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 80,
    "fragment" : "cast('2017-12-11 09:30:00' as date) / cast('2017-12-11 09:30:00' as date)"
  } ]
}
