-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE DATABASE mydb1
-- !query analysis
CreateNamespace false
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [mydb1]


-- !query
USE mydb1
-- !query analysis
SetCatalogAndNamespace
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [mydb1]


-- !query
CREATE TABLE t1 USING parquet AS SELECT 1 AS i1
-- !query analysis
CreateDataSourceTableAsSelectCommand `spark_catalog`.`mydb1`.`t1`, ErrorIfExists, [i1]
   +- Project [1 AS i1#x]
      +- OneRowRelation


-- !query
CREATE DATABASE mydb2
-- !query analysis
CreateNamespace false
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [mydb2]


-- !query
USE mydb2
-- !query analysis
SetCatalogAndNamespace
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [mydb2]


-- !query
CREATE TABLE t1 USING parquet AS SELECT 20 AS i1
-- !query analysis
CreateDataSourceTableAsSelectCommand `spark_catalog`.`mydb2`.`t1`, ErrorIfExists, [i1]
   +- Project [20 AS i1#x]
      +- OneRowRelation


-- !query
USE mydb1
-- !query analysis
SetCatalogAndNamespace
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [mydb1]


-- !query
SELECT i1 FROM t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t1
   +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
SELECT i1 FROM mydb1.t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t1
   +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
SELECT t1.i1 FROM t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t1
   +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
SELECT t1.i1 FROM mydb1.t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t1
   +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
SELECT mydb1.t1.i1 FROM t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t1
   +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
SELECT mydb1.t1.i1 FROM mydb1.t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t1
   +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
USE mydb2
-- !query analysis
SetCatalogAndNamespace
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [mydb2]


-- !query
SELECT i1 FROM t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb2.t1
   +- Relation spark_catalog.mydb2.t1[i1#x] parquet


-- !query
SELECT i1 FROM mydb1.t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t1
   +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
SELECT t1.i1 FROM t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb2.t1
   +- Relation spark_catalog.mydb2.t1[i1#x] parquet


-- !query
SELECT t1.i1 FROM mydb1.t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t1
   +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
SELECT mydb1.t1.i1 FROM mydb1.t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t1
   +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
USE mydb1
-- !query analysis
SetCatalogAndNamespace
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [mydb1]


-- !query
SELECT t1.* FROM t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t1
   +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
SELECT mydb1.t1.* FROM mydb1.t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t1
   +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
SELECT t1.* FROM mydb1.t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t1
   +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
USE mydb2
-- !query analysis
SetCatalogAndNamespace
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [mydb2]


-- !query
SELECT t1.* FROM t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb2.t1
   +- Relation spark_catalog.mydb2.t1[i1#x] parquet


-- !query
SELECT mydb1.t1.* FROM mydb1.t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t1
   +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
SELECT t1.* FROM mydb1.t1
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t1
   +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
SELECT a.* FROM mydb1.t1 AS a
-- !query analysis
Project [i1#x]
+- SubqueryAlias a
   +- SubqueryAlias spark_catalog.mydb1.t1
      +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
USE mydb1
-- !query analysis
SetCatalogAndNamespace
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [mydb1]


-- !query
CREATE TABLE t3 USING parquet AS SELECT * FROM VALUES (4,1), (3,1) AS t3(c1, c2)
-- !query analysis
CreateDataSourceTableAsSelectCommand `spark_catalog`.`mydb1`.`t3`, ErrorIfExists, [c1, c2]
   +- Project [c1#x, c2#x]
      +- SubqueryAlias t3
         +- LocalRelation [c1#x, c2#x]


-- !query
CREATE TABLE t4 USING parquet AS SELECT * FROM VALUES (4,1), (2,1) AS t4(c2, c3)
-- !query analysis
CreateDataSourceTableAsSelectCommand `spark_catalog`.`mydb1`.`t4`, ErrorIfExists, [c2, c3]
   +- Project [c2#x, c3#x]
      +- SubqueryAlias t4
         +- LocalRelation [c2#x, c3#x]


-- !query
SELECT * FROM t3 WHERE c1 IN (SELECT c2 FROM t4 WHERE t4.c3 = t3.c2)
-- !query analysis
Project [c1#x, c2#x]
+- Filter c1#x IN (list#x [c2#x])
   :  +- Project [c2#x]
   :     +- Filter (c3#x = outer(c2#x))
   :        +- SubqueryAlias spark_catalog.mydb1.t4
   :           +- Relation spark_catalog.mydb1.t4[c2#x,c3#x] parquet
   +- SubqueryAlias spark_catalog.mydb1.t3
      +- Relation spark_catalog.mydb1.t3[c1#x,c2#x] parquet


-- !query
SELECT * FROM mydb1.t3 WHERE c1 IN
  (SELECT mydb1.t4.c2 FROM mydb1.t4 WHERE mydb1.t4.c3 = mydb1.t3.c2)
-- !query analysis
Project [c1#x, c2#x]
+- Filter c1#x IN (list#x [c2#x])
   :  +- Project [c2#x]
   :     +- Filter (c3#x = outer(c2#x))
   :        +- SubqueryAlias spark_catalog.mydb1.t4
   :           +- Relation spark_catalog.mydb1.t4[c2#x,c3#x] parquet
   +- SubqueryAlias spark_catalog.mydb1.t3
      +- Relation spark_catalog.mydb1.t3[c1#x,c2#x] parquet


-- !query
SET spark.sql.crossJoin.enabled = true
-- !query analysis
SetCommand (spark.sql.crossJoin.enabled,Some(true))


-- !query
SELECT mydb1.t1.i1 FROM t1, mydb2.t1
-- !query analysis
Project [i1#x]
+- Join Inner
   :- SubqueryAlias spark_catalog.mydb1.t1
   :  +- Relation spark_catalog.mydb1.t1[i1#x] parquet
   +- SubqueryAlias spark_catalog.mydb2.t1
      +- Relation spark_catalog.mydb2.t1[i1#x] parquet


-- !query
SELECT mydb1.t1.i1 FROM mydb1.t1, mydb2.t1
-- !query analysis
Project [i1#x]
+- Join Inner
   :- SubqueryAlias spark_catalog.mydb1.t1
   :  +- Relation spark_catalog.mydb1.t1[i1#x] parquet
   +- SubqueryAlias spark_catalog.mydb2.t1
      +- Relation spark_catalog.mydb2.t1[i1#x] parquet


-- !query
USE mydb2
-- !query analysis
SetCatalogAndNamespace
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [mydb2]


-- !query
SELECT mydb1.t1.i1 FROM t1, mydb1.t1
-- !query analysis
Project [i1#x]
+- Join Inner
   :- SubqueryAlias spark_catalog.mydb2.t1
   :  +- Relation spark_catalog.mydb2.t1[i1#x] parquet
   +- SubqueryAlias spark_catalog.mydb1.t1
      +- Relation spark_catalog.mydb1.t1[i1#x] parquet


-- !query
SET spark.sql.crossJoin.enabled = false
-- !query analysis
SetCommand (spark.sql.crossJoin.enabled,Some(false))


-- !query
USE mydb1
-- !query analysis
SetCatalogAndNamespace
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [mydb1]


-- !query
CREATE TABLE t5(i1 INT, t5 STRUCT<i1:INT, i2:INT>) USING parquet
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`mydb1`.`t5`, false


-- !query
INSERT INTO t5 VALUES(1, (2, 3))
-- !query analysis
InsertIntoHadoopFsRelationCommand file:[not included in comparison]/{warehouse_dir}/mydb1.db/t5, false, Parquet, [path=file:[not included in comparison]/{warehouse_dir}/mydb1.db/t5], Append, `spark_catalog`.`mydb1`.`t5`, org.apache.spark.sql.execution.datasources.InMemoryFileIndex(file:[not included in comparison]/{warehouse_dir}/mydb1.db/t5), [i1, t5]
+- Project [cast(col1#x as int) AS i1#x, named_struct(i1, cast(col2#x.col1 as int), i2, cast(col2#x.col2 as int)) AS t5#x]
   +- LocalRelation [col1#x, col2#x]


-- !query
SELECT t5.i1 FROM t5
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t5
   +- Relation spark_catalog.mydb1.t5[i1#x,t5#x] parquet


-- !query
SELECT t5.t5.i1 FROM t5
-- !query analysis
Project [t5#x.i1 AS i1#x]
+- SubqueryAlias spark_catalog.mydb1.t5
   +- Relation spark_catalog.mydb1.t5[i1#x,t5#x] parquet


-- !query
SELECT t5.t5.i1 FROM mydb1.t5
-- !query analysis
Project [t5#x.i1 AS i1#x]
+- SubqueryAlias spark_catalog.mydb1.t5
   +- Relation spark_catalog.mydb1.t5[i1#x,t5#x] parquet


-- !query
SELECT t5.i1 FROM mydb1.t5
-- !query analysis
Project [i1#x]
+- SubqueryAlias spark_catalog.mydb1.t5
   +- Relation spark_catalog.mydb1.t5[i1#x,t5#x] parquet


-- !query
SELECT t5.* FROM mydb1.t5
-- !query analysis
Project [i1#x, t5#x]
+- SubqueryAlias spark_catalog.mydb1.t5
   +- Relation spark_catalog.mydb1.t5[i1#x,t5#x] parquet


-- !query
SELECT t5.t5.* FROM mydb1.t5
-- !query analysis
Project [t5#x.i1 AS i1#x, t5#x.i2 AS i2#x]
+- SubqueryAlias spark_catalog.mydb1.t5
   +- Relation spark_catalog.mydb1.t5[i1#x,t5#x] parquet


-- !query
SELECT mydb1.t5.t5.i1 FROM mydb1.t5
-- !query analysis
Project [t5#x.i1 AS i1#x]
+- SubqueryAlias spark_catalog.mydb1.t5
   +- Relation spark_catalog.mydb1.t5[i1#x,t5#x] parquet


-- !query
SELECT mydb1.t5.t5.i2 FROM mydb1.t5
-- !query analysis
Project [t5#x.i2 AS i2#x]
+- SubqueryAlias spark_catalog.mydb1.t5
   +- Relation spark_catalog.mydb1.t5[i1#x,t5#x] parquet


-- !query
SELECT mydb1.t5.* FROM mydb1.t5
-- !query analysis
Project [i1#x, t5#x]
+- SubqueryAlias spark_catalog.mydb1.t5
   +- Relation spark_catalog.mydb1.t5[i1#x,t5#x] parquet


-- !query
SELECT mydb1.t5.* FROM t5
-- !query analysis
Project [i1#x, t5#x]
+- SubqueryAlias spark_catalog.mydb1.t5
   +- Relation spark_catalog.mydb1.t5[i1#x,t5#x] parquet


-- !query
USE default
-- !query analysis
SetCatalogAndNamespace
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [default]


-- !query
DROP DATABASE mydb1 CASCADE
-- !query analysis
DropNamespace false, true
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [mydb1]


-- !query
DROP DATABASE mydb2 CASCADE
-- !query analysis
DropNamespace false, true
+- ResolvedNamespace V2SessionCatalog(spark_catalog), [mydb2]
