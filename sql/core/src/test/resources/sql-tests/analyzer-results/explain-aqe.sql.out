-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE table  explain_temp1 (key int, val int) USING PARQUET
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`explain_temp1`, false


-- !query
CREATE table  explain_temp2 (key int, val int) USING PARQUET
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`explain_temp2`, false


-- !query
CREATE table  explain_temp3 (key int, val int) USING PARQUET
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`explain_temp3`, false


-- !query
CREATE table  explain_temp4 (key int, val string) USING PARQUET
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`explain_temp4`, false


-- !query
CREATE table  explain_temp5 (key int) USING PARQUET PARTITIONED BY(val string)
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`explain_temp5`, false


-- !query
SET spark.sql.codegen.wholeStage = true
-- !query analysis
SetCommand (spark.sql.codegen.wholeStage,Some(true))


-- !query
EXPLAIN EXTENDED
  SELECT sum(distinct val)
  FROM explain_temp1
-- !query analysis
ExplainCommand 'Project [unresolvedalias('sum(distinct 'val))], ExtendedMode


-- !query
EXPLAIN FORMATTED
  SELECT key, max(val) 
  FROM   explain_temp1 
  WHERE  key > 0 
  GROUP  BY key 
  ORDER  BY key
-- !query analysis
ExplainCommand 'Sort ['key ASC NULLS FIRST], true, FormattedMode


-- !query
EXPLAIN FORMATTED
  SELECT key, max(val)
  FROM explain_temp1
  WHERE key > 0
  GROUP BY key
  HAVING max(val) > 0
-- !query analysis
ExplainCommand 'UnresolvedHaving ('max('val) > 0), FormattedMode


-- !query
EXPLAIN FORMATTED
  SELECT key, val FROM explain_temp1 WHERE key > 0
  UNION 
  SELECT key, val FROM explain_temp1 WHERE key > 1
-- !query analysis
ExplainCommand 'Distinct, FormattedMode


-- !query
EXPLAIN FORMATTED
  SELECT * 
  FROM   explain_temp1 a, 
         explain_temp2 b 
  WHERE  a.key = b.key
-- !query analysis
ExplainCommand 'Project [*], FormattedMode


-- !query
EXPLAIN FORMATTED
  SELECT * 
  FROM   explain_temp1 a 
         LEFT OUTER JOIN explain_temp2 b 
                      ON a.key = b.key
-- !query analysis
ExplainCommand 'Project [*], FormattedMode


-- !query
EXPLAIN FORMATTED
  SELECT * 
  FROM   explain_temp1 
  WHERE  key = (SELECT max(key) 
                FROM   explain_temp2 
                WHERE  key = (SELECT max(key) 
                              FROM   explain_temp3 
                              WHERE  val > 0) 
                       AND val = 2) 
         AND val > 3
-- !query analysis
ExplainCommand 'Project [*], FormattedMode


-- !query
EXPLAIN FORMATTED
  SELECT * 
  FROM   explain_temp1 
  WHERE  key = (SELECT max(key) 
                FROM   explain_temp2 
                WHERE  val > 0) 
         OR
         key = (SELECT avg(key)
                FROM   explain_temp3
                WHERE  val > 0)
-- !query analysis
ExplainCommand 'Project [*], FormattedMode


-- !query
EXPLAIN FORMATTED
  SELECT (SELECT Avg(key) FROM explain_temp1) + (SELECT Avg(key) FROM explain_temp1)
  FROM explain_temp1
-- !query analysis
ExplainCommand 'Project [unresolvedalias((scalar-subquery#x [] + scalar-subquery#x []))], FormattedMode


-- !query
EXPLAIN FORMATTED
  WITH cte1 AS (
    SELECT *
    FROM explain_temp1 
    WHERE key > 10
  )
  SELECT * FROM cte1 a, cte1 b WHERE a.key = b.key
-- !query analysis
ExplainCommand CTE [cte1], FormattedMode


-- !query
EXPLAIN FORMATTED
  WITH cte1 AS (
    SELECT key, max(val)
    FROM explain_temp1 
    WHERE key > 10
    GROUP BY key
  )
  SELECT * FROM cte1 a, cte1 b WHERE a.key = b.key
-- !query analysis
ExplainCommand CTE [cte1], FormattedMode


-- !query
EXPLAIN FORMATTED
  CREATE VIEW explain_view AS
    SELECT key, val FROM explain_temp1
-- !query analysis
ExplainCommand 'CreateView SELECT key, val FROM explain_temp1, false, false, COMPENSATION, FormattedMode


-- !query
EXPLAIN FORMATTED
  SELECT
    COUNT(val) + SUM(key) as TOTAL,
    COUNT(key) FILTER (WHERE val > 1)
  FROM explain_temp1
-- !query analysis
ExplainCommand 'Project [('COUNT('val) + 'SUM('key)) AS TOTAL#x, unresolvedalias('COUNT('key, ('val > 1)))], FormattedMode


-- !query
EXPLAIN FORMATTED
  SELECT key, sort_array(collect_set(val))[0]
  FROM explain_temp4
  GROUP BY key
-- !query analysis
ExplainCommand 'Aggregate ['key], ['key, unresolvedalias('sort_array('collect_set('val))[0])], FormattedMode


-- !query
EXPLAIN FORMATTED
  SELECT key, MIN(val)
  FROM explain_temp4
  GROUP BY key
-- !query analysis
ExplainCommand 'Aggregate ['key], ['key, unresolvedalias('MIN('val))], FormattedMode


-- !query
EXPLAIN EXTENDED INSERT INTO TABLE explain_temp5 SELECT * FROM explain_temp4
-- !query analysis
ExplainCommand 'InsertIntoStatement 'UnresolvedRelation [explain_temp5], [__required_write_privileges__=INSERT], false, false, false, false, ExtendedMode


-- !query
DROP TABLE explain_temp1
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.explain_temp1


-- !query
DROP TABLE explain_temp2
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.explain_temp2


-- !query
DROP TABLE explain_temp3
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.explain_temp3


-- !query
DROP TABLE explain_temp4
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.explain_temp4


-- !query
DROP TABLE explain_temp5
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.explain_temp5


-- !query
CREATE table  t(v array<string>) USING PARQUET
-- !query analysis
CreateDataSourceTableCommand `spark_catalog`.`default`.`t`, false


-- !query
EXPLAIN SELECT * FROM t  WHERE v IN (array('a'), null)
-- !query analysis
ExplainCommand 'Project [*], SimpleMode


-- !query
DROP TABLE t
-- !query analysis
DropTable false, false
+- ResolvedIdentifier V2SessionCatalog(spark_catalog), default.t
