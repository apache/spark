-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW INT2_TBL(f1) AS VALUES
  (smallint(trim('0   '))),
  (smallint(trim('  1234 '))),
  (smallint(trim('    -1234'))),
  (smallint('32767')),
  (smallint('-32767'))
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE TEMPORARY VIEW INT4_TBL AS SELECT * FROM
  (VALUES (0), (123456), (-123456), (2147483647), (-2147483647))
  AS v(f1)
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE TEMPORARY VIEW INT8_TBL AS SELECT * FROM
  (VALUES
    (123, 456),
    (123, 4567890123456789),
    (4567890123456789, 123),
    (4567890123456789, 4567890123456789),
    (4567890123456789, -4567890123456789))
  AS v(q1, q2)
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE TEMPORARY VIEW FLOAT8_TBL AS SELECT * FROM
  (VALUES (0.0), (1004.30), (-34.84),
    (cast('1.2345678901234e+200' as double)), (cast('1.2345678901234e-200' as double)))
  AS v(f1)
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE TEMPORARY VIEW TEXT_TBL AS SELECT * FROM
  (VALUES ('doh!'), ('hi de ho neighbor'))
  AS v(f1)
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE J1_TBL (
  i integer,
  j integer,
  t string
) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE J2_TBL (
  i integer,
  k integer
) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J1_TBL VALUES (1, 4, 'one')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J1_TBL VALUES (2, 3, 'two')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J1_TBL VALUES (3, 2, 'three')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J1_TBL VALUES (4, 1, 'four')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J1_TBL VALUES (5, 0, 'five')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J1_TBL VALUES (6, 6, 'six')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J1_TBL VALUES (7, 7, 'seven')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J1_TBL VALUES (8, 8, 'eight')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J1_TBL VALUES (0, NULL, 'zero')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J1_TBL VALUES (NULL, NULL, 'null')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J1_TBL VALUES (NULL, 0, 'zero')
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J2_TBL VALUES (1, -1)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J2_TBL VALUES (2, 2)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J2_TBL VALUES (3, -3)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J2_TBL VALUES (2, 4)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J2_TBL VALUES (5, -5)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J2_TBL VALUES (5, -5)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J2_TBL VALUES (0, NULL)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J2_TBL VALUES (NULL, NULL)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO J2_TBL VALUES (NULL, 0)
-- !query schema
struct<>
-- !query output



-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL AS tx
-- !query schema
struct<xxx:string,i:int,j:int,t:string>
-- !query output
	0	NULL	zero
	1	4	one
	2	3	two
	3	2	three
	4	1	four
	5	0	five
	6	6	six
	7	7	seven
	8	8	eight
	NULL	0	zero
	NULL	NULL	null


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL tx
-- !query schema
struct<xxx:string,i:int,j:int,t:string>
-- !query output
	0	NULL	zero
	1	4	one
	2	3	two
	3	2	three
	4	1	four
	5	0	five
	6	6	six
	7	7	seven
	8	8	eight
	NULL	0	zero
	NULL	NULL	null


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL AS t1 (a, b, c)
-- !query schema
struct<xxx:string,a:int,b:int,c:string>
-- !query output
	0	NULL	zero
	1	4	one
	2	3	two
	3	2	three
	4	1	four
	5	0	five
	6	6	six
	7	7	seven
	8	8	eight
	NULL	0	zero
	NULL	NULL	null


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL t1 (a, b, c)
-- !query schema
struct<xxx:string,a:int,b:int,c:string>
-- !query output
	0	NULL	zero
	1	4	one
	2	3	two
	3	2	three
	4	1	four
	5	0	five
	6	6	six
	7	7	seven
	8	8	eight
	NULL	0	zero
	NULL	NULL	null


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL t1 (a, b, c), J2_TBL t2 (d, e)
-- !query schema
struct<xxx:string,a:int,b:int,c:string,d:int,e:int>
-- !query output
	0	NULL	zero	0	NULL
	0	NULL	zero	1	-1
	0	NULL	zero	2	2
	0	NULL	zero	2	4
	0	NULL	zero	3	-3
	0	NULL	zero	5	-5
	0	NULL	zero	5	-5
	0	NULL	zero	NULL	0
	0	NULL	zero	NULL	NULL
	1	4	one	0	NULL
	1	4	one	1	-1
	1	4	one	2	2
	1	4	one	2	4
	1	4	one	3	-3
	1	4	one	5	-5
	1	4	one	5	-5
	1	4	one	NULL	0
	1	4	one	NULL	NULL
	2	3	two	0	NULL
	2	3	two	1	-1
	2	3	two	2	2
	2	3	two	2	4
	2	3	two	3	-3
	2	3	two	5	-5
	2	3	two	5	-5
	2	3	two	NULL	0
	2	3	two	NULL	NULL
	3	2	three	0	NULL
	3	2	three	1	-1
	3	2	three	2	2
	3	2	three	2	4
	3	2	three	3	-3
	3	2	three	5	-5
	3	2	three	5	-5
	3	2	three	NULL	0
	3	2	three	NULL	NULL
	4	1	four	0	NULL
	4	1	four	1	-1
	4	1	four	2	2
	4	1	four	2	4
	4	1	four	3	-3
	4	1	four	5	-5
	4	1	four	5	-5
	4	1	four	NULL	0
	4	1	four	NULL	NULL
	5	0	five	0	NULL
	5	0	five	1	-1
	5	0	five	2	2
	5	0	five	2	4
	5	0	five	3	-3
	5	0	five	5	-5
	5	0	five	5	-5
	5	0	five	NULL	0
	5	0	five	NULL	NULL
	6	6	six	0	NULL
	6	6	six	1	-1
	6	6	six	2	2
	6	6	six	2	4
	6	6	six	3	-3
	6	6	six	5	-5
	6	6	six	5	-5
	6	6	six	NULL	0
	6	6	six	NULL	NULL
	7	7	seven	0	NULL
	7	7	seven	1	-1
	7	7	seven	2	2
	7	7	seven	2	4
	7	7	seven	3	-3
	7	7	seven	5	-5
	7	7	seven	5	-5
	7	7	seven	NULL	0
	7	7	seven	NULL	NULL
	8	8	eight	0	NULL
	8	8	eight	1	-1
	8	8	eight	2	2
	8	8	eight	2	4
	8	8	eight	3	-3
	8	8	eight	5	-5
	8	8	eight	5	-5
	8	8	eight	NULL	0
	8	8	eight	NULL	NULL
	NULL	0	zero	0	NULL
	NULL	0	zero	1	-1
	NULL	0	zero	2	2
	NULL	0	zero	2	4
	NULL	0	zero	3	-3
	NULL	0	zero	5	-5
	NULL	0	zero	5	-5
	NULL	0	zero	NULL	0
	NULL	0	zero	NULL	NULL
	NULL	NULL	null	0	NULL
	NULL	NULL	null	1	-1
	NULL	NULL	null	2	2
	NULL	NULL	null	2	4
	NULL	NULL	null	3	-3
	NULL	NULL	null	5	-5
	NULL	NULL	null	5	-5
	NULL	NULL	null	NULL	0
	NULL	NULL	null	NULL	NULL


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL CROSS JOIN J2_TBL
-- !query schema
struct<xxx:string,i:int,j:int,t:string,i:int,k:int>
-- !query output
	0	NULL	zero	0	NULL
	0	NULL	zero	1	-1
	0	NULL	zero	2	2
	0	NULL	zero	2	4
	0	NULL	zero	3	-3
	0	NULL	zero	5	-5
	0	NULL	zero	5	-5
	0	NULL	zero	NULL	0
	0	NULL	zero	NULL	NULL
	1	4	one	0	NULL
	1	4	one	1	-1
	1	4	one	2	2
	1	4	one	2	4
	1	4	one	3	-3
	1	4	one	5	-5
	1	4	one	5	-5
	1	4	one	NULL	0
	1	4	one	NULL	NULL
	2	3	two	0	NULL
	2	3	two	1	-1
	2	3	two	2	2
	2	3	two	2	4
	2	3	two	3	-3
	2	3	two	5	-5
	2	3	two	5	-5
	2	3	two	NULL	0
	2	3	two	NULL	NULL
	3	2	three	0	NULL
	3	2	three	1	-1
	3	2	three	2	2
	3	2	three	2	4
	3	2	three	3	-3
	3	2	three	5	-5
	3	2	three	5	-5
	3	2	three	NULL	0
	3	2	three	NULL	NULL
	4	1	four	0	NULL
	4	1	four	1	-1
	4	1	four	2	2
	4	1	four	2	4
	4	1	four	3	-3
	4	1	four	5	-5
	4	1	four	5	-5
	4	1	four	NULL	0
	4	1	four	NULL	NULL
	5	0	five	0	NULL
	5	0	five	1	-1
	5	0	five	2	2
	5	0	five	2	4
	5	0	five	3	-3
	5	0	five	5	-5
	5	0	five	5	-5
	5	0	five	NULL	0
	5	0	five	NULL	NULL
	6	6	six	0	NULL
	6	6	six	1	-1
	6	6	six	2	2
	6	6	six	2	4
	6	6	six	3	-3
	6	6	six	5	-5
	6	6	six	5	-5
	6	6	six	NULL	0
	6	6	six	NULL	NULL
	7	7	seven	0	NULL
	7	7	seven	1	-1
	7	7	seven	2	2
	7	7	seven	2	4
	7	7	seven	3	-3
	7	7	seven	5	-5
	7	7	seven	5	-5
	7	7	seven	NULL	0
	7	7	seven	NULL	NULL
	8	8	eight	0	NULL
	8	8	eight	1	-1
	8	8	eight	2	2
	8	8	eight	2	4
	8	8	eight	3	-3
	8	8	eight	5	-5
	8	8	eight	5	-5
	8	8	eight	NULL	0
	8	8	eight	NULL	NULL
	NULL	0	zero	0	NULL
	NULL	0	zero	1	-1
	NULL	0	zero	2	2
	NULL	0	zero	2	4
	NULL	0	zero	3	-3
	NULL	0	zero	5	-5
	NULL	0	zero	5	-5
	NULL	0	zero	NULL	0
	NULL	0	zero	NULL	NULL
	NULL	NULL	null	0	NULL
	NULL	NULL	null	1	-1
	NULL	NULL	null	2	2
	NULL	NULL	null	2	4
	NULL	NULL	null	3	-3
	NULL	NULL	null	5	-5
	NULL	NULL	null	5	-5
	NULL	NULL	null	NULL	0
	NULL	NULL	null	NULL	NULL


-- !query
SELECT '' AS `xxx`, i, k, t
  FROM J1_TBL CROSS JOIN J2_TBL
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_REFERENCE",
  "sqlState" : "42704",
  "messageParameters" : {
    "name" : "`i`",
    "referenceNames" : "[`spark_catalog`.`default`.`j1_tbl`.`i`, `spark_catalog`.`default`.`j2_tbl`.`i`]"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 21,
    "stopIndex" : 21,
    "fragment" : "i"
  } ]
}


-- !query
SELECT '' AS `xxx`, t1.i, k, t
  FROM J1_TBL t1 CROSS JOIN J2_TBL t2
-- !query schema
struct<xxx:string,i:int,k:int,t:string>
-- !query output
	0	-1	zero
	0	-3	zero
	0	-5	zero
	0	-5	zero
	0	0	zero
	0	2	zero
	0	4	zero
	0	NULL	zero
	0	NULL	zero
	1	-1	one
	1	-3	one
	1	-5	one
	1	-5	one
	1	0	one
	1	2	one
	1	4	one
	1	NULL	one
	1	NULL	one
	2	-1	two
	2	-3	two
	2	-5	two
	2	-5	two
	2	0	two
	2	2	two
	2	4	two
	2	NULL	two
	2	NULL	two
	3	-1	three
	3	-3	three
	3	-5	three
	3	-5	three
	3	0	three
	3	2	three
	3	4	three
	3	NULL	three
	3	NULL	three
	4	-1	four
	4	-3	four
	4	-5	four
	4	-5	four
	4	0	four
	4	2	four
	4	4	four
	4	NULL	four
	4	NULL	four
	5	-1	five
	5	-3	five
	5	-5	five
	5	-5	five
	5	0	five
	5	2	five
	5	4	five
	5	NULL	five
	5	NULL	five
	6	-1	six
	6	-3	six
	6	-5	six
	6	-5	six
	6	0	six
	6	2	six
	6	4	six
	6	NULL	six
	6	NULL	six
	7	-1	seven
	7	-3	seven
	7	-5	seven
	7	-5	seven
	7	0	seven
	7	2	seven
	7	4	seven
	7	NULL	seven
	7	NULL	seven
	8	-1	eight
	8	-3	eight
	8	-5	eight
	8	-5	eight
	8	0	eight
	8	2	eight
	8	4	eight
	8	NULL	eight
	8	NULL	eight
	NULL	-1	null
	NULL	-1	zero
	NULL	-3	null
	NULL	-3	zero
	NULL	-5	null
	NULL	-5	null
	NULL	-5	zero
	NULL	-5	zero
	NULL	0	null
	NULL	0	zero
	NULL	2	null
	NULL	2	zero
	NULL	4	null
	NULL	4	zero
	NULL	NULL	null
	NULL	NULL	null
	NULL	NULL	zero
	NULL	NULL	zero


-- !query
SELECT '' AS `xxx`, ii, tt, kk
  FROM (J1_TBL CROSS JOIN J2_TBL)
    AS tx (ii, jj, tt, ii2, kk)
-- !query schema
struct<xxx:string,ii:int,tt:string,kk:int>
-- !query output
	0	zero	-1
	0	zero	-3
	0	zero	-5
	0	zero	-5
	0	zero	0
	0	zero	2
	0	zero	4
	0	zero	NULL
	0	zero	NULL
	1	one	-1
	1	one	-3
	1	one	-5
	1	one	-5
	1	one	0
	1	one	2
	1	one	4
	1	one	NULL
	1	one	NULL
	2	two	-1
	2	two	-3
	2	two	-5
	2	two	-5
	2	two	0
	2	two	2
	2	two	4
	2	two	NULL
	2	two	NULL
	3	three	-1
	3	three	-3
	3	three	-5
	3	three	-5
	3	three	0
	3	three	2
	3	three	4
	3	three	NULL
	3	three	NULL
	4	four	-1
	4	four	-3
	4	four	-5
	4	four	-5
	4	four	0
	4	four	2
	4	four	4
	4	four	NULL
	4	four	NULL
	5	five	-1
	5	five	-3
	5	five	-5
	5	five	-5
	5	five	0
	5	five	2
	5	five	4
	5	five	NULL
	5	five	NULL
	6	six	-1
	6	six	-3
	6	six	-5
	6	six	-5
	6	six	0
	6	six	2
	6	six	4
	6	six	NULL
	6	six	NULL
	7	seven	-1
	7	seven	-3
	7	seven	-5
	7	seven	-5
	7	seven	0
	7	seven	2
	7	seven	4
	7	seven	NULL
	7	seven	NULL
	8	eight	-1
	8	eight	-3
	8	eight	-5
	8	eight	-5
	8	eight	0
	8	eight	2
	8	eight	4
	8	eight	NULL
	8	eight	NULL
	NULL	null	-1
	NULL	null	-3
	NULL	null	-5
	NULL	null	-5
	NULL	null	0
	NULL	null	2
	NULL	null	4
	NULL	null	NULL
	NULL	null	NULL
	NULL	zero	-1
	NULL	zero	-3
	NULL	zero	-5
	NULL	zero	-5
	NULL	zero	0
	NULL	zero	2
	NULL	zero	4
	NULL	zero	NULL
	NULL	zero	NULL


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL CROSS JOIN J2_TBL a CROSS JOIN J2_TBL b
-- !query schema
struct<xxx:string,i:int,j:int,t:string,i:int,k:int,i:int,k:int>
-- !query output
	0	NULL	zero	0	NULL	0	NULL
	0	NULL	zero	0	NULL	1	-1
	0	NULL	zero	0	NULL	2	2
	0	NULL	zero	0	NULL	2	4
	0	NULL	zero	0	NULL	3	-3
	0	NULL	zero	0	NULL	5	-5
	0	NULL	zero	0	NULL	5	-5
	0	NULL	zero	0	NULL	NULL	0
	0	NULL	zero	0	NULL	NULL	NULL
	0	NULL	zero	1	-1	0	NULL
	0	NULL	zero	1	-1	1	-1
	0	NULL	zero	1	-1	2	2
	0	NULL	zero	1	-1	2	4
	0	NULL	zero	1	-1	3	-3
	0	NULL	zero	1	-1	5	-5
	0	NULL	zero	1	-1	5	-5
	0	NULL	zero	1	-1	NULL	0
	0	NULL	zero	1	-1	NULL	NULL
	0	NULL	zero	2	2	0	NULL
	0	NULL	zero	2	2	1	-1
	0	NULL	zero	2	2	2	2
	0	NULL	zero	2	2	2	4
	0	NULL	zero	2	2	3	-3
	0	NULL	zero	2	2	5	-5
	0	NULL	zero	2	2	5	-5
	0	NULL	zero	2	2	NULL	0
	0	NULL	zero	2	2	NULL	NULL
	0	NULL	zero	2	4	0	NULL
	0	NULL	zero	2	4	1	-1
	0	NULL	zero	2	4	2	2
	0	NULL	zero	2	4	2	4
	0	NULL	zero	2	4	3	-3
	0	NULL	zero	2	4	5	-5
	0	NULL	zero	2	4	5	-5
	0	NULL	zero	2	4	NULL	0
	0	NULL	zero	2	4	NULL	NULL
	0	NULL	zero	3	-3	0	NULL
	0	NULL	zero	3	-3	1	-1
	0	NULL	zero	3	-3	2	2
	0	NULL	zero	3	-3	2	4
	0	NULL	zero	3	-3	3	-3
	0	NULL	zero	3	-3	5	-5
	0	NULL	zero	3	-3	5	-5
	0	NULL	zero	3	-3	NULL	0
	0	NULL	zero	3	-3	NULL	NULL
	0	NULL	zero	5	-5	0	NULL
	0	NULL	zero	5	-5	0	NULL
	0	NULL	zero	5	-5	1	-1
	0	NULL	zero	5	-5	1	-1
	0	NULL	zero	5	-5	2	2
	0	NULL	zero	5	-5	2	2
	0	NULL	zero	5	-5	2	4
	0	NULL	zero	5	-5	2	4
	0	NULL	zero	5	-5	3	-3
	0	NULL	zero	5	-5	3	-3
	0	NULL	zero	5	-5	5	-5
	0	NULL	zero	5	-5	5	-5
	0	NULL	zero	5	-5	5	-5
	0	NULL	zero	5	-5	5	-5
	0	NULL	zero	5	-5	NULL	0
	0	NULL	zero	5	-5	NULL	0
	0	NULL	zero	5	-5	NULL	NULL
	0	NULL	zero	5	-5	NULL	NULL
	0	NULL	zero	NULL	0	0	NULL
	0	NULL	zero	NULL	0	1	-1
	0	NULL	zero	NULL	0	2	2
	0	NULL	zero	NULL	0	2	4
	0	NULL	zero	NULL	0	3	-3
	0	NULL	zero	NULL	0	5	-5
	0	NULL	zero	NULL	0	5	-5
	0	NULL	zero	NULL	0	NULL	0
	0	NULL	zero	NULL	0	NULL	NULL
	0	NULL	zero	NULL	NULL	0	NULL
	0	NULL	zero	NULL	NULL	1	-1
	0	NULL	zero	NULL	NULL	2	2
	0	NULL	zero	NULL	NULL	2	4
	0	NULL	zero	NULL	NULL	3	-3
	0	NULL	zero	NULL	NULL	5	-5
	0	NULL	zero	NULL	NULL	5	-5
	0	NULL	zero	NULL	NULL	NULL	0
	0	NULL	zero	NULL	NULL	NULL	NULL
	1	4	one	0	NULL	0	NULL
	1	4	one	0	NULL	1	-1
	1	4	one	0	NULL	2	2
	1	4	one	0	NULL	2	4
	1	4	one	0	NULL	3	-3
	1	4	one	0	NULL	5	-5
	1	4	one	0	NULL	5	-5
	1	4	one	0	NULL	NULL	0
	1	4	one	0	NULL	NULL	NULL
	1	4	one	1	-1	0	NULL
	1	4	one	1	-1	1	-1
	1	4	one	1	-1	2	2
	1	4	one	1	-1	2	4
	1	4	one	1	-1	3	-3
	1	4	one	1	-1	5	-5
	1	4	one	1	-1	5	-5
	1	4	one	1	-1	NULL	0
	1	4	one	1	-1	NULL	NULL
	1	4	one	2	2	0	NULL
	1	4	one	2	2	1	-1
	1	4	one	2	2	2	2
	1	4	one	2	2	2	4
	1	4	one	2	2	3	-3
	1	4	one	2	2	5	-5
	1	4	one	2	2	5	-5
	1	4	one	2	2	NULL	0
	1	4	one	2	2	NULL	NULL
	1	4	one	2	4	0	NULL
	1	4	one	2	4	1	-1
	1	4	one	2	4	2	2
	1	4	one	2	4	2	4
	1	4	one	2	4	3	-3
	1	4	one	2	4	5	-5
	1	4	one	2	4	5	-5
	1	4	one	2	4	NULL	0
	1	4	one	2	4	NULL	NULL
	1	4	one	3	-3	0	NULL
	1	4	one	3	-3	1	-1
	1	4	one	3	-3	2	2
	1	4	one	3	-3	2	4
	1	4	one	3	-3	3	-3
	1	4	one	3	-3	5	-5
	1	4	one	3	-3	5	-5
	1	4	one	3	-3	NULL	0
	1	4	one	3	-3	NULL	NULL
	1	4	one	5	-5	0	NULL
	1	4	one	5	-5	0	NULL
	1	4	one	5	-5	1	-1
	1	4	one	5	-5	1	-1
	1	4	one	5	-5	2	2
	1	4	one	5	-5	2	2
	1	4	one	5	-5	2	4
	1	4	one	5	-5	2	4
	1	4	one	5	-5	3	-3
	1	4	one	5	-5	3	-3
	1	4	one	5	-5	5	-5
	1	4	one	5	-5	5	-5
	1	4	one	5	-5	5	-5
	1	4	one	5	-5	5	-5
	1	4	one	5	-5	NULL	0
	1	4	one	5	-5	NULL	0
	1	4	one	5	-5	NULL	NULL
	1	4	one	5	-5	NULL	NULL
	1	4	one	NULL	0	0	NULL
	1	4	one	NULL	0	1	-1
	1	4	one	NULL	0	2	2
	1	4	one	NULL	0	2	4
	1	4	one	NULL	0	3	-3
	1	4	one	NULL	0	5	-5
	1	4	one	NULL	0	5	-5
	1	4	one	NULL	0	NULL	0
	1	4	one	NULL	0	NULL	NULL
	1	4	one	NULL	NULL	0	NULL
	1	4	one	NULL	NULL	1	-1
	1	4	one	NULL	NULL	2	2
	1	4	one	NULL	NULL	2	4
	1	4	one	NULL	NULL	3	-3
	1	4	one	NULL	NULL	5	-5
	1	4	one	NULL	NULL	5	-5
	1	4	one	NULL	NULL	NULL	0
	1	4	one	NULL	NULL	NULL	NULL
	2	3	two	0	NULL	0	NULL
	2	3	two	0	NULL	1	-1
	2	3	two	0	NULL	2	2
	2	3	two	0	NULL	2	4
	2	3	two	0	NULL	3	-3
	2	3	two	0	NULL	5	-5
	2	3	two	0	NULL	5	-5
	2	3	two	0	NULL	NULL	0
	2	3	two	0	NULL	NULL	NULL
	2	3	two	1	-1	0	NULL
	2	3	two	1	-1	1	-1
	2	3	two	1	-1	2	2
	2	3	two	1	-1	2	4
	2	3	two	1	-1	3	-3
	2	3	two	1	-1	5	-5
	2	3	two	1	-1	5	-5
	2	3	two	1	-1	NULL	0
	2	3	two	1	-1	NULL	NULL
	2	3	two	2	2	0	NULL
	2	3	two	2	2	1	-1
	2	3	two	2	2	2	2
	2	3	two	2	2	2	4
	2	3	two	2	2	3	-3
	2	3	two	2	2	5	-5
	2	3	two	2	2	5	-5
	2	3	two	2	2	NULL	0
	2	3	two	2	2	NULL	NULL
	2	3	two	2	4	0	NULL
	2	3	two	2	4	1	-1
	2	3	two	2	4	2	2
	2	3	two	2	4	2	4
	2	3	two	2	4	3	-3
	2	3	two	2	4	5	-5
	2	3	two	2	4	5	-5
	2	3	two	2	4	NULL	0
	2	3	two	2	4	NULL	NULL
	2	3	two	3	-3	0	NULL
	2	3	two	3	-3	1	-1
	2	3	two	3	-3	2	2
	2	3	two	3	-3	2	4
	2	3	two	3	-3	3	-3
	2	3	two	3	-3	5	-5
	2	3	two	3	-3	5	-5
	2	3	two	3	-3	NULL	0
	2	3	two	3	-3	NULL	NULL
	2	3	two	5	-5	0	NULL
	2	3	two	5	-5	0	NULL
	2	3	two	5	-5	1	-1
	2	3	two	5	-5	1	-1
	2	3	two	5	-5	2	2
	2	3	two	5	-5	2	2
	2	3	two	5	-5	2	4
	2	3	two	5	-5	2	4
	2	3	two	5	-5	3	-3
	2	3	two	5	-5	3	-3
	2	3	two	5	-5	5	-5
	2	3	two	5	-5	5	-5
	2	3	two	5	-5	5	-5
	2	3	two	5	-5	5	-5
	2	3	two	5	-5	NULL	0
	2	3	two	5	-5	NULL	0
	2	3	two	5	-5	NULL	NULL
	2	3	two	5	-5	NULL	NULL
	2	3	two	NULL	0	0	NULL
	2	3	two	NULL	0	1	-1
	2	3	two	NULL	0	2	2
	2	3	two	NULL	0	2	4
	2	3	two	NULL	0	3	-3
	2	3	two	NULL	0	5	-5
	2	3	two	NULL	0	5	-5
	2	3	two	NULL	0	NULL	0
	2	3	two	NULL	0	NULL	NULL
	2	3	two	NULL	NULL	0	NULL
	2	3	two	NULL	NULL	1	-1
	2	3	two	NULL	NULL	2	2
	2	3	two	NULL	NULL	2	4
	2	3	two	NULL	NULL	3	-3
	2	3	two	NULL	NULL	5	-5
	2	3	two	NULL	NULL	5	-5
	2	3	two	NULL	NULL	NULL	0
	2	3	two	NULL	NULL	NULL	NULL
	3	2	three	0	NULL	0	NULL
	3	2	three	0	NULL	1	-1
	3	2	three	0	NULL	2	2
	3	2	three	0	NULL	2	4
	3	2	three	0	NULL	3	-3
	3	2	three	0	NULL	5	-5
	3	2	three	0	NULL	5	-5
	3	2	three	0	NULL	NULL	0
	3	2	three	0	NULL	NULL	NULL
	3	2	three	1	-1	0	NULL
	3	2	three	1	-1	1	-1
	3	2	three	1	-1	2	2
	3	2	three	1	-1	2	4
	3	2	three	1	-1	3	-3
	3	2	three	1	-1	5	-5
	3	2	three	1	-1	5	-5
	3	2	three	1	-1	NULL	0
	3	2	three	1	-1	NULL	NULL
	3	2	three	2	2	0	NULL
	3	2	three	2	2	1	-1
	3	2	three	2	2	2	2
	3	2	three	2	2	2	4
	3	2	three	2	2	3	-3
	3	2	three	2	2	5	-5
	3	2	three	2	2	5	-5
	3	2	three	2	2	NULL	0
	3	2	three	2	2	NULL	NULL
	3	2	three	2	4	0	NULL
	3	2	three	2	4	1	-1
	3	2	three	2	4	2	2
	3	2	three	2	4	2	4
	3	2	three	2	4	3	-3
	3	2	three	2	4	5	-5
	3	2	three	2	4	5	-5
	3	2	three	2	4	NULL	0
	3	2	three	2	4	NULL	NULL
	3	2	three	3	-3	0	NULL
	3	2	three	3	-3	1	-1
	3	2	three	3	-3	2	2
	3	2	three	3	-3	2	4
	3	2	three	3	-3	3	-3
	3	2	three	3	-3	5	-5
	3	2	three	3	-3	5	-5
	3	2	three	3	-3	NULL	0
	3	2	three	3	-3	NULL	NULL
	3	2	three	5	-5	0	NULL
	3	2	three	5	-5	0	NULL
	3	2	three	5	-5	1	-1
	3	2	three	5	-5	1	-1
	3	2	three	5	-5	2	2
	3	2	three	5	-5	2	2
	3	2	three	5	-5	2	4
	3	2	three	5	-5	2	4
	3	2	three	5	-5	3	-3
	3	2	three	5	-5	3	-3
	3	2	three	5	-5	5	-5
	3	2	three	5	-5	5	-5
	3	2	three	5	-5	5	-5
	3	2	three	5	-5	5	-5
	3	2	three	5	-5	NULL	0
	3	2	three	5	-5	NULL	0
	3	2	three	5	-5	NULL	NULL
	3	2	three	5	-5	NULL	NULL
	3	2	three	NULL	0	0	NULL
	3	2	three	NULL	0	1	-1
	3	2	three	NULL	0	2	2
	3	2	three	NULL	0	2	4
	3	2	three	NULL	0	3	-3
	3	2	three	NULL	0	5	-5
	3	2	three	NULL	0	5	-5
	3	2	three	NULL	0	NULL	0
	3	2	three	NULL	0	NULL	NULL
	3	2	three	NULL	NULL	0	NULL
	3	2	three	NULL	NULL	1	-1
	3	2	three	NULL	NULL	2	2
	3	2	three	NULL	NULL	2	4
	3	2	three	NULL	NULL	3	-3
	3	2	three	NULL	NULL	5	-5
	3	2	three	NULL	NULL	5	-5
	3	2	three	NULL	NULL	NULL	0
	3	2	three	NULL	NULL	NULL	NULL
	4	1	four	0	NULL	0	NULL
	4	1	four	0	NULL	1	-1
	4	1	four	0	NULL	2	2
	4	1	four	0	NULL	2	4
	4	1	four	0	NULL	3	-3
	4	1	four	0	NULL	5	-5
	4	1	four	0	NULL	5	-5
	4	1	four	0	NULL	NULL	0
	4	1	four	0	NULL	NULL	NULL
	4	1	four	1	-1	0	NULL
	4	1	four	1	-1	1	-1
	4	1	four	1	-1	2	2
	4	1	four	1	-1	2	4
	4	1	four	1	-1	3	-3
	4	1	four	1	-1	5	-5
	4	1	four	1	-1	5	-5
	4	1	four	1	-1	NULL	0
	4	1	four	1	-1	NULL	NULL
	4	1	four	2	2	0	NULL
	4	1	four	2	2	1	-1
	4	1	four	2	2	2	2
	4	1	four	2	2	2	4
	4	1	four	2	2	3	-3
	4	1	four	2	2	5	-5
	4	1	four	2	2	5	-5
	4	1	four	2	2	NULL	0
	4	1	four	2	2	NULL	NULL
	4	1	four	2	4	0	NULL
	4	1	four	2	4	1	-1
	4	1	four	2	4	2	2
	4	1	four	2	4	2	4
	4	1	four	2	4	3	-3
	4	1	four	2	4	5	-5
	4	1	four	2	4	5	-5
	4	1	four	2	4	NULL	0
	4	1	four	2	4	NULL	NULL
	4	1	four	3	-3	0	NULL
	4	1	four	3	-3	1	-1
	4	1	four	3	-3	2	2
	4	1	four	3	-3	2	4
	4	1	four	3	-3	3	-3
	4	1	four	3	-3	5	-5
	4	1	four	3	-3	5	-5
	4	1	four	3	-3	NULL	0
	4	1	four	3	-3	NULL	NULL
	4	1	four	5	-5	0	NULL
	4	1	four	5	-5	0	NULL
	4	1	four	5	-5	1	-1
	4	1	four	5	-5	1	-1
	4	1	four	5	-5	2	2
	4	1	four	5	-5	2	2
	4	1	four	5	-5	2	4
	4	1	four	5	-5	2	4
	4	1	four	5	-5	3	-3
	4	1	four	5	-5	3	-3
	4	1	four	5	-5	5	-5
	4	1	four	5	-5	5	-5
	4	1	four	5	-5	5	-5
	4	1	four	5	-5	5	-5
	4	1	four	5	-5	NULL	0
	4	1	four	5	-5	NULL	0
	4	1	four	5	-5	NULL	NULL
	4	1	four	5	-5	NULL	NULL
	4	1	four	NULL	0	0	NULL
	4	1	four	NULL	0	1	-1
	4	1	four	NULL	0	2	2
	4	1	four	NULL	0	2	4
	4	1	four	NULL	0	3	-3
	4	1	four	NULL	0	5	-5
	4	1	four	NULL	0	5	-5
	4	1	four	NULL	0	NULL	0
	4	1	four	NULL	0	NULL	NULL
	4	1	four	NULL	NULL	0	NULL
	4	1	four	NULL	NULL	1	-1
	4	1	four	NULL	NULL	2	2
	4	1	four	NULL	NULL	2	4
	4	1	four	NULL	NULL	3	-3
	4	1	four	NULL	NULL	5	-5
	4	1	four	NULL	NULL	5	-5
	4	1	four	NULL	NULL	NULL	0
	4	1	four	NULL	NULL	NULL	NULL
	5	0	five	0	NULL	0	NULL
	5	0	five	0	NULL	1	-1
	5	0	five	0	NULL	2	2
	5	0	five	0	NULL	2	4
	5	0	five	0	NULL	3	-3
	5	0	five	0	NULL	5	-5
	5	0	five	0	NULL	5	-5
	5	0	five	0	NULL	NULL	0
	5	0	five	0	NULL	NULL	NULL
	5	0	five	1	-1	0	NULL
	5	0	five	1	-1	1	-1
	5	0	five	1	-1	2	2
	5	0	five	1	-1	2	4
	5	0	five	1	-1	3	-3
	5	0	five	1	-1	5	-5
	5	0	five	1	-1	5	-5
	5	0	five	1	-1	NULL	0
	5	0	five	1	-1	NULL	NULL
	5	0	five	2	2	0	NULL
	5	0	five	2	2	1	-1
	5	0	five	2	2	2	2
	5	0	five	2	2	2	4
	5	0	five	2	2	3	-3
	5	0	five	2	2	5	-5
	5	0	five	2	2	5	-5
	5	0	five	2	2	NULL	0
	5	0	five	2	2	NULL	NULL
	5	0	five	2	4	0	NULL
	5	0	five	2	4	1	-1
	5	0	five	2	4	2	2
	5	0	five	2	4	2	4
	5	0	five	2	4	3	-3
	5	0	five	2	4	5	-5
	5	0	five	2	4	5	-5
	5	0	five	2	4	NULL	0
	5	0	five	2	4	NULL	NULL
	5	0	five	3	-3	0	NULL
	5	0	five	3	-3	1	-1
	5	0	five	3	-3	2	2
	5	0	five	3	-3	2	4
	5	0	five	3	-3	3	-3
	5	0	five	3	-3	5	-5
	5	0	five	3	-3	5	-5
	5	0	five	3	-3	NULL	0
	5	0	five	3	-3	NULL	NULL
	5	0	five	5	-5	0	NULL
	5	0	five	5	-5	0	NULL
	5	0	five	5	-5	1	-1
	5	0	five	5	-5	1	-1
	5	0	five	5	-5	2	2
	5	0	five	5	-5	2	2
	5	0	five	5	-5	2	4
	5	0	five	5	-5	2	4
	5	0	five	5	-5	3	-3
	5	0	five	5	-5	3	-3
	5	0	five	5	-5	5	-5
	5	0	five	5	-5	5	-5
	5	0	five	5	-5	5	-5
	5	0	five	5	-5	5	-5
	5	0	five	5	-5	NULL	0
	5	0	five	5	-5	NULL	0
	5	0	five	5	-5	NULL	NULL
	5	0	five	5	-5	NULL	NULL
	5	0	five	NULL	0	0	NULL
	5	0	five	NULL	0	1	-1
	5	0	five	NULL	0	2	2
	5	0	five	NULL	0	2	4
	5	0	five	NULL	0	3	-3
	5	0	five	NULL	0	5	-5
	5	0	five	NULL	0	5	-5
	5	0	five	NULL	0	NULL	0
	5	0	five	NULL	0	NULL	NULL
	5	0	five	NULL	NULL	0	NULL
	5	0	five	NULL	NULL	1	-1
	5	0	five	NULL	NULL	2	2
	5	0	five	NULL	NULL	2	4
	5	0	five	NULL	NULL	3	-3
	5	0	five	NULL	NULL	5	-5
	5	0	five	NULL	NULL	5	-5
	5	0	five	NULL	NULL	NULL	0
	5	0	five	NULL	NULL	NULL	NULL
	6	6	six	0	NULL	0	NULL
	6	6	six	0	NULL	1	-1
	6	6	six	0	NULL	2	2
	6	6	six	0	NULL	2	4
	6	6	six	0	NULL	3	-3
	6	6	six	0	NULL	5	-5
	6	6	six	0	NULL	5	-5
	6	6	six	0	NULL	NULL	0
	6	6	six	0	NULL	NULL	NULL
	6	6	six	1	-1	0	NULL
	6	6	six	1	-1	1	-1
	6	6	six	1	-1	2	2
	6	6	six	1	-1	2	4
	6	6	six	1	-1	3	-3
	6	6	six	1	-1	5	-5
	6	6	six	1	-1	5	-5
	6	6	six	1	-1	NULL	0
	6	6	six	1	-1	NULL	NULL
	6	6	six	2	2	0	NULL
	6	6	six	2	2	1	-1
	6	6	six	2	2	2	2
	6	6	six	2	2	2	4
	6	6	six	2	2	3	-3
	6	6	six	2	2	5	-5
	6	6	six	2	2	5	-5
	6	6	six	2	2	NULL	0
	6	6	six	2	2	NULL	NULL
	6	6	six	2	4	0	NULL
	6	6	six	2	4	1	-1
	6	6	six	2	4	2	2
	6	6	six	2	4	2	4
	6	6	six	2	4	3	-3
	6	6	six	2	4	5	-5
	6	6	six	2	4	5	-5
	6	6	six	2	4	NULL	0
	6	6	six	2	4	NULL	NULL
	6	6	six	3	-3	0	NULL
	6	6	six	3	-3	1	-1
	6	6	six	3	-3	2	2
	6	6	six	3	-3	2	4
	6	6	six	3	-3	3	-3
	6	6	six	3	-3	5	-5
	6	6	six	3	-3	5	-5
	6	6	six	3	-3	NULL	0
	6	6	six	3	-3	NULL	NULL
	6	6	six	5	-5	0	NULL
	6	6	six	5	-5	0	NULL
	6	6	six	5	-5	1	-1
	6	6	six	5	-5	1	-1
	6	6	six	5	-5	2	2
	6	6	six	5	-5	2	2
	6	6	six	5	-5	2	4
	6	6	six	5	-5	2	4
	6	6	six	5	-5	3	-3
	6	6	six	5	-5	3	-3
	6	6	six	5	-5	5	-5
	6	6	six	5	-5	5	-5
	6	6	six	5	-5	5	-5
	6	6	six	5	-5	5	-5
	6	6	six	5	-5	NULL	0
	6	6	six	5	-5	NULL	0
	6	6	six	5	-5	NULL	NULL
	6	6	six	5	-5	NULL	NULL
	6	6	six	NULL	0	0	NULL
	6	6	six	NULL	0	1	-1
	6	6	six	NULL	0	2	2
	6	6	six	NULL	0	2	4
	6	6	six	NULL	0	3	-3
	6	6	six	NULL	0	5	-5
	6	6	six	NULL	0	5	-5
	6	6	six	NULL	0	NULL	0
	6	6	six	NULL	0	NULL	NULL
	6	6	six	NULL	NULL	0	NULL
	6	6	six	NULL	NULL	1	-1
	6	6	six	NULL	NULL	2	2
	6	6	six	NULL	NULL	2	4
	6	6	six	NULL	NULL	3	-3
	6	6	six	NULL	NULL	5	-5
	6	6	six	NULL	NULL	5	-5
	6	6	six	NULL	NULL	NULL	0
	6	6	six	NULL	NULL	NULL	NULL
	7	7	seven	0	NULL	0	NULL
	7	7	seven	0	NULL	1	-1
	7	7	seven	0	NULL	2	2
	7	7	seven	0	NULL	2	4
	7	7	seven	0	NULL	3	-3
	7	7	seven	0	NULL	5	-5
	7	7	seven	0	NULL	5	-5
	7	7	seven	0	NULL	NULL	0
	7	7	seven	0	NULL	NULL	NULL
	7	7	seven	1	-1	0	NULL
	7	7	seven	1	-1	1	-1
	7	7	seven	1	-1	2	2
	7	7	seven	1	-1	2	4
	7	7	seven	1	-1	3	-3
	7	7	seven	1	-1	5	-5
	7	7	seven	1	-1	5	-5
	7	7	seven	1	-1	NULL	0
	7	7	seven	1	-1	NULL	NULL
	7	7	seven	2	2	0	NULL
	7	7	seven	2	2	1	-1
	7	7	seven	2	2	2	2
	7	7	seven	2	2	2	4
	7	7	seven	2	2	3	-3
	7	7	seven	2	2	5	-5
	7	7	seven	2	2	5	-5
	7	7	seven	2	2	NULL	0
	7	7	seven	2	2	NULL	NULL
	7	7	seven	2	4	0	NULL
	7	7	seven	2	4	1	-1
	7	7	seven	2	4	2	2
	7	7	seven	2	4	2	4
	7	7	seven	2	4	3	-3
	7	7	seven	2	4	5	-5
	7	7	seven	2	4	5	-5
	7	7	seven	2	4	NULL	0
	7	7	seven	2	4	NULL	NULL
	7	7	seven	3	-3	0	NULL
	7	7	seven	3	-3	1	-1
	7	7	seven	3	-3	2	2
	7	7	seven	3	-3	2	4
	7	7	seven	3	-3	3	-3
	7	7	seven	3	-3	5	-5
	7	7	seven	3	-3	5	-5
	7	7	seven	3	-3	NULL	0
	7	7	seven	3	-3	NULL	NULL
	7	7	seven	5	-5	0	NULL
	7	7	seven	5	-5	0	NULL
	7	7	seven	5	-5	1	-1
	7	7	seven	5	-5	1	-1
	7	7	seven	5	-5	2	2
	7	7	seven	5	-5	2	2
	7	7	seven	5	-5	2	4
	7	7	seven	5	-5	2	4
	7	7	seven	5	-5	3	-3
	7	7	seven	5	-5	3	-3
	7	7	seven	5	-5	5	-5
	7	7	seven	5	-5	5	-5
	7	7	seven	5	-5	5	-5
	7	7	seven	5	-5	5	-5
	7	7	seven	5	-5	NULL	0
	7	7	seven	5	-5	NULL	0
	7	7	seven	5	-5	NULL	NULL
	7	7	seven	5	-5	NULL	NULL
	7	7	seven	NULL	0	0	NULL
	7	7	seven	NULL	0	1	-1
	7	7	seven	NULL	0	2	2
	7	7	seven	NULL	0	2	4
	7	7	seven	NULL	0	3	-3
	7	7	seven	NULL	0	5	-5
	7	7	seven	NULL	0	5	-5
	7	7	seven	NULL	0	NULL	0
	7	7	seven	NULL	0	NULL	NULL
	7	7	seven	NULL	NULL	0	NULL
	7	7	seven	NULL	NULL	1	-1
	7	7	seven	NULL	NULL	2	2
	7	7	seven	NULL	NULL	2	4
	7	7	seven	NULL	NULL	3	-3
	7	7	seven	NULL	NULL	5	-5
	7	7	seven	NULL	NULL	5	-5
	7	7	seven	NULL	NULL	NULL	0
	7	7	seven	NULL	NULL	NULL	NULL
	8	8	eight	0	NULL	0	NULL
	8	8	eight	0	NULL	1	-1
	8	8	eight	0	NULL	2	2
	8	8	eight	0	NULL	2	4
	8	8	eight	0	NULL	3	-3
	8	8	eight	0	NULL	5	-5
	8	8	eight	0	NULL	5	-5
	8	8	eight	0	NULL	NULL	0
	8	8	eight	0	NULL	NULL	NULL
	8	8	eight	1	-1	0	NULL
	8	8	eight	1	-1	1	-1
	8	8	eight	1	-1	2	2
	8	8	eight	1	-1	2	4
	8	8	eight	1	-1	3	-3
	8	8	eight	1	-1	5	-5
	8	8	eight	1	-1	5	-5
	8	8	eight	1	-1	NULL	0
	8	8	eight	1	-1	NULL	NULL
	8	8	eight	2	2	0	NULL
	8	8	eight	2	2	1	-1
	8	8	eight	2	2	2	2
	8	8	eight	2	2	2	4
	8	8	eight	2	2	3	-3
	8	8	eight	2	2	5	-5
	8	8	eight	2	2	5	-5
	8	8	eight	2	2	NULL	0
	8	8	eight	2	2	NULL	NULL
	8	8	eight	2	4	0	NULL
	8	8	eight	2	4	1	-1
	8	8	eight	2	4	2	2
	8	8	eight	2	4	2	4
	8	8	eight	2	4	3	-3
	8	8	eight	2	4	5	-5
	8	8	eight	2	4	5	-5
	8	8	eight	2	4	NULL	0
	8	8	eight	2	4	NULL	NULL
	8	8	eight	3	-3	0	NULL
	8	8	eight	3	-3	1	-1
	8	8	eight	3	-3	2	2
	8	8	eight	3	-3	2	4
	8	8	eight	3	-3	3	-3
	8	8	eight	3	-3	5	-5
	8	8	eight	3	-3	5	-5
	8	8	eight	3	-3	NULL	0
	8	8	eight	3	-3	NULL	NULL
	8	8	eight	5	-5	0	NULL
	8	8	eight	5	-5	0	NULL
	8	8	eight	5	-5	1	-1
	8	8	eight	5	-5	1	-1
	8	8	eight	5	-5	2	2
	8	8	eight	5	-5	2	2
	8	8	eight	5	-5	2	4
	8	8	eight	5	-5	2	4
	8	8	eight	5	-5	3	-3
	8	8	eight	5	-5	3	-3
	8	8	eight	5	-5	5	-5
	8	8	eight	5	-5	5	-5
	8	8	eight	5	-5	5	-5
	8	8	eight	5	-5	5	-5
	8	8	eight	5	-5	NULL	0
	8	8	eight	5	-5	NULL	0
	8	8	eight	5	-5	NULL	NULL
	8	8	eight	5	-5	NULL	NULL
	8	8	eight	NULL	0	0	NULL
	8	8	eight	NULL	0	1	-1
	8	8	eight	NULL	0	2	2
	8	8	eight	NULL	0	2	4
	8	8	eight	NULL	0	3	-3
	8	8	eight	NULL	0	5	-5
	8	8	eight	NULL	0	5	-5
	8	8	eight	NULL	0	NULL	0
	8	8	eight	NULL	0	NULL	NULL
	8	8	eight	NULL	NULL	0	NULL
	8	8	eight	NULL	NULL	1	-1
	8	8	eight	NULL	NULL	2	2
	8	8	eight	NULL	NULL	2	4
	8	8	eight	NULL	NULL	3	-3
	8	8	eight	NULL	NULL	5	-5
	8	8	eight	NULL	NULL	5	-5
	8	8	eight	NULL	NULL	NULL	0
	8	8	eight	NULL	NULL	NULL	NULL
	NULL	0	zero	0	NULL	0	NULL
	NULL	0	zero	0	NULL	1	-1
	NULL	0	zero	0	NULL	2	2
	NULL	0	zero	0	NULL	2	4
	NULL	0	zero	0	NULL	3	-3
	NULL	0	zero	0	NULL	5	-5
	NULL	0	zero	0	NULL	5	-5
	NULL	0	zero	0	NULL	NULL	0
	NULL	0	zero	0	NULL	NULL	NULL
	NULL	0	zero	1	-1	0	NULL
	NULL	0	zero	1	-1	1	-1
	NULL	0	zero	1	-1	2	2
	NULL	0	zero	1	-1	2	4
	NULL	0	zero	1	-1	3	-3
	NULL	0	zero	1	-1	5	-5
	NULL	0	zero	1	-1	5	-5
	NULL	0	zero	1	-1	NULL	0
	NULL	0	zero	1	-1	NULL	NULL
	NULL	0	zero	2	2	0	NULL
	NULL	0	zero	2	2	1	-1
	NULL	0	zero	2	2	2	2
	NULL	0	zero	2	2	2	4
	NULL	0	zero	2	2	3	-3
	NULL	0	zero	2	2	5	-5
	NULL	0	zero	2	2	5	-5
	NULL	0	zero	2	2	NULL	0
	NULL	0	zero	2	2	NULL	NULL
	NULL	0	zero	2	4	0	NULL
	NULL	0	zero	2	4	1	-1
	NULL	0	zero	2	4	2	2
	NULL	0	zero	2	4	2	4
	NULL	0	zero	2	4	3	-3
	NULL	0	zero	2	4	5	-5
	NULL	0	zero	2	4	5	-5
	NULL	0	zero	2	4	NULL	0
	NULL	0	zero	2	4	NULL	NULL
	NULL	0	zero	3	-3	0	NULL
	NULL	0	zero	3	-3	1	-1
	NULL	0	zero	3	-3	2	2
	NULL	0	zero	3	-3	2	4
	NULL	0	zero	3	-3	3	-3
	NULL	0	zero	3	-3	5	-5
	NULL	0	zero	3	-3	5	-5
	NULL	0	zero	3	-3	NULL	0
	NULL	0	zero	3	-3	NULL	NULL
	NULL	0	zero	5	-5	0	NULL
	NULL	0	zero	5	-5	0	NULL
	NULL	0	zero	5	-5	1	-1
	NULL	0	zero	5	-5	1	-1
	NULL	0	zero	5	-5	2	2
	NULL	0	zero	5	-5	2	2
	NULL	0	zero	5	-5	2	4
	NULL	0	zero	5	-5	2	4
	NULL	0	zero	5	-5	3	-3
	NULL	0	zero	5	-5	3	-3
	NULL	0	zero	5	-5	5	-5
	NULL	0	zero	5	-5	5	-5
	NULL	0	zero	5	-5	5	-5
	NULL	0	zero	5	-5	5	-5
	NULL	0	zero	5	-5	NULL	0
	NULL	0	zero	5	-5	NULL	0
	NULL	0	zero	5	-5	NULL	NULL
	NULL	0	zero	5	-5	NULL	NULL
	NULL	0	zero	NULL	0	0	NULL
	NULL	0	zero	NULL	0	1	-1
	NULL	0	zero	NULL	0	2	2
	NULL	0	zero	NULL	0	2	4
	NULL	0	zero	NULL	0	3	-3
	NULL	0	zero	NULL	0	5	-5
	NULL	0	zero	NULL	0	5	-5
	NULL	0	zero	NULL	0	NULL	0
	NULL	0	zero	NULL	0	NULL	NULL
	NULL	0	zero	NULL	NULL	0	NULL
	NULL	0	zero	NULL	NULL	1	-1
	NULL	0	zero	NULL	NULL	2	2
	NULL	0	zero	NULL	NULL	2	4
	NULL	0	zero	NULL	NULL	3	-3
	NULL	0	zero	NULL	NULL	5	-5
	NULL	0	zero	NULL	NULL	5	-5
	NULL	0	zero	NULL	NULL	NULL	0
	NULL	0	zero	NULL	NULL	NULL	NULL
	NULL	NULL	null	0	NULL	0	NULL
	NULL	NULL	null	0	NULL	1	-1
	NULL	NULL	null	0	NULL	2	2
	NULL	NULL	null	0	NULL	2	4
	NULL	NULL	null	0	NULL	3	-3
	NULL	NULL	null	0	NULL	5	-5
	NULL	NULL	null	0	NULL	5	-5
	NULL	NULL	null	0	NULL	NULL	0
	NULL	NULL	null	0	NULL	NULL	NULL
	NULL	NULL	null	1	-1	0	NULL
	NULL	NULL	null	1	-1	1	-1
	NULL	NULL	null	1	-1	2	2
	NULL	NULL	null	1	-1	2	4
	NULL	NULL	null	1	-1	3	-3
	NULL	NULL	null	1	-1	5	-5
	NULL	NULL	null	1	-1	5	-5
	NULL	NULL	null	1	-1	NULL	0
	NULL	NULL	null	1	-1	NULL	NULL
	NULL	NULL	null	2	2	0	NULL
	NULL	NULL	null	2	2	1	-1
	NULL	NULL	null	2	2	2	2
	NULL	NULL	null	2	2	2	4
	NULL	NULL	null	2	2	3	-3
	NULL	NULL	null	2	2	5	-5
	NULL	NULL	null	2	2	5	-5
	NULL	NULL	null	2	2	NULL	0
	NULL	NULL	null	2	2	NULL	NULL
	NULL	NULL	null	2	4	0	NULL
	NULL	NULL	null	2	4	1	-1
	NULL	NULL	null	2	4	2	2
	NULL	NULL	null	2	4	2	4
	NULL	NULL	null	2	4	3	-3
	NULL	NULL	null	2	4	5	-5
	NULL	NULL	null	2	4	5	-5
	NULL	NULL	null	2	4	NULL	0
	NULL	NULL	null	2	4	NULL	NULL
	NULL	NULL	null	3	-3	0	NULL
	NULL	NULL	null	3	-3	1	-1
	NULL	NULL	null	3	-3	2	2
	NULL	NULL	null	3	-3	2	4
	NULL	NULL	null	3	-3	3	-3
	NULL	NULL	null	3	-3	5	-5
	NULL	NULL	null	3	-3	5	-5
	NULL	NULL	null	3	-3	NULL	0
	NULL	NULL	null	3	-3	NULL	NULL
	NULL	NULL	null	5	-5	0	NULL
	NULL	NULL	null	5	-5	0	NULL
	NULL	NULL	null	5	-5	1	-1
	NULL	NULL	null	5	-5	1	-1
	NULL	NULL	null	5	-5	2	2
	NULL	NULL	null	5	-5	2	2
	NULL	NULL	null	5	-5	2	4
	NULL	NULL	null	5	-5	2	4
	NULL	NULL	null	5	-5	3	-3
	NULL	NULL	null	5	-5	3	-3
	NULL	NULL	null	5	-5	5	-5
	NULL	NULL	null	5	-5	5	-5
	NULL	NULL	null	5	-5	5	-5
	NULL	NULL	null	5	-5	5	-5
	NULL	NULL	null	5	-5	NULL	0
	NULL	NULL	null	5	-5	NULL	0
	NULL	NULL	null	5	-5	NULL	NULL
	NULL	NULL	null	5	-5	NULL	NULL
	NULL	NULL	null	NULL	0	0	NULL
	NULL	NULL	null	NULL	0	1	-1
	NULL	NULL	null	NULL	0	2	2
	NULL	NULL	null	NULL	0	2	4
	NULL	NULL	null	NULL	0	3	-3
	NULL	NULL	null	NULL	0	5	-5
	NULL	NULL	null	NULL	0	5	-5
	NULL	NULL	null	NULL	0	NULL	0
	NULL	NULL	null	NULL	0	NULL	NULL
	NULL	NULL	null	NULL	NULL	0	NULL
	NULL	NULL	null	NULL	NULL	1	-1
	NULL	NULL	null	NULL	NULL	2	2
	NULL	NULL	null	NULL	NULL	2	4
	NULL	NULL	null	NULL	NULL	3	-3
	NULL	NULL	null	NULL	NULL	5	-5
	NULL	NULL	null	NULL	NULL	5	-5
	NULL	NULL	null	NULL	NULL	NULL	0
	NULL	NULL	null	NULL	NULL	NULL	NULL


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL INNER JOIN J2_TBL USING (i)
-- !query schema
struct<xxx:string,i:int,j:int,t:string,k:int>
-- !query output
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	5	0	five	-5
	5	0	five	-5


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL JOIN J2_TBL USING (i)
-- !query schema
struct<xxx:string,i:int,j:int,t:string,k:int>
-- !query output
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	5	0	five	-5
	5	0	five	-5


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL t1 (a, b, c) JOIN J2_TBL t2 (a, d) USING (a)
  ORDER BY a, d
-- !query schema
struct<xxx:string,a:int,b:int,c:string,d:int>
-- !query output
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	5	0	five	-5
	5	0	five	-5


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL NATURAL JOIN J2_TBL
-- !query schema
struct<xxx:string,i:int,j:int,t:string,k:int>
-- !query output
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	5	0	five	-5
	5	0	five	-5


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL t1 (a, b, c) NATURAL JOIN J2_TBL t2 (a, d)
-- !query schema
struct<xxx:string,a:int,b:int,c:string,d:int>
-- !query output
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	5	0	five	-5
	5	0	five	-5


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL t1 (a, b, c) NATURAL JOIN J2_TBL t2 (d, a)
-- !query schema
struct<xxx:string,a:int,b:int,c:string,d:int>
-- !query output
	0	NULL	zero	NULL
	2	3	two	2
	4	1	four	2


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL JOIN J2_TBL ON (J1_TBL.i = J2_TBL.i)
-- !query schema
struct<xxx:string,i:int,j:int,t:string,i:int,k:int>
-- !query output
	0	NULL	zero	0	NULL
	1	4	one	1	-1
	2	3	two	2	2
	2	3	two	2	4
	3	2	three	3	-3
	5	0	five	5	-5
	5	0	five	5	-5


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL JOIN J2_TBL ON (J1_TBL.i = J2_TBL.k)
-- !query schema
struct<xxx:string,i:int,j:int,t:string,i:int,k:int>
-- !query output
	0	NULL	zero	NULL	0
	2	3	two	2	2
	4	1	four	2	4


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL JOIN J2_TBL ON (J1_TBL.i <= J2_TBL.k)
-- !query schema
struct<xxx:string,i:int,j:int,t:string,i:int,k:int>
-- !query output
	0	NULL	zero	2	2
	0	NULL	zero	2	4
	0	NULL	zero	NULL	0
	1	4	one	2	2
	1	4	one	2	4
	2	3	two	2	2
	2	3	two	2	4
	3	2	three	2	4
	4	1	four	2	4


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL LEFT OUTER JOIN J2_TBL USING (i)
  ORDER BY i, k, t
-- !query schema
struct<xxx:string,i:int,j:int,t:string,k:int>
-- !query output
	NULL	NULL	null	NULL
	NULL	0	zero	NULL
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	4	1	four	NULL
	5	0	five	-5
	5	0	five	-5
	6	6	six	NULL
	7	7	seven	NULL
	8	8	eight	NULL


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL LEFT JOIN J2_TBL USING (i)
  ORDER BY i, k, t
-- !query schema
struct<xxx:string,i:int,j:int,t:string,k:int>
-- !query output
	NULL	NULL	null	NULL
	NULL	0	zero	NULL
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	4	1	four	NULL
	5	0	five	-5
	5	0	five	-5
	6	6	six	NULL
	7	7	seven	NULL
	8	8	eight	NULL


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL RIGHT OUTER JOIN J2_TBL USING (i)
-- !query schema
struct<xxx:string,i:int,j:int,t:string,k:int>
-- !query output
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	5	0	five	-5
	5	0	five	-5
	NULL	NULL	NULL	0
	NULL	NULL	NULL	NULL


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL RIGHT JOIN J2_TBL USING (i)
-- !query schema
struct<xxx:string,i:int,j:int,t:string,k:int>
-- !query output
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	5	0	five	-5
	5	0	five	-5
	NULL	NULL	NULL	0
	NULL	NULL	NULL	NULL


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL FULL OUTER JOIN J2_TBL USING (i)
  ORDER BY i, k, t
-- !query schema
struct<xxx:string,i:int,j:int,t:string,k:int>
-- !query output
	NULL	NULL	NULL	NULL
	NULL	NULL	null	NULL
	NULL	0	zero	NULL
	NULL	NULL	NULL	0
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	4	1	four	NULL
	5	0	five	-5
	5	0	five	-5
	6	6	six	NULL
	7	7	seven	NULL
	8	8	eight	NULL


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL FULL JOIN J2_TBL USING (i)
  ORDER BY i, k, t
-- !query schema
struct<xxx:string,i:int,j:int,t:string,k:int>
-- !query output
	NULL	NULL	NULL	NULL
	NULL	NULL	null	NULL
	NULL	0	zero	NULL
	NULL	NULL	NULL	0
	0	NULL	zero	NULL
	1	4	one	-1
	2	3	two	2
	2	3	two	4
	3	2	three	-3
	4	1	four	NULL
	5	0	five	-5
	5	0	five	-5
	6	6	six	NULL
	7	7	seven	NULL
	8	8	eight	NULL


-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL LEFT JOIN J2_TBL USING (i) WHERE (k = 1)
-- !query schema
struct<xxx:string,i:int,j:int,t:string,k:int>
-- !query output



-- !query
SELECT '' AS `xxx`, *
  FROM J1_TBL LEFT JOIN J2_TBL USING (i) WHERE (i = 1)
-- !query schema
struct<xxx:string,i:int,j:int,t:string,k:int>
-- !query output
	1	4	one	-1


-- !query
CREATE TABLE t1 (name STRING, n INTEGER) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t2 (name STRING, n INTEGER) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t3 (name STRING, n INTEGER) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t1 VALUES ( 'bb', 11 )
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t2 VALUES ( 'bb', 12 )
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t2 VALUES ( 'cc', 22 )
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t2 VALUES ( 'ee', 42 )
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t3 VALUES ( 'bb', 13 )
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t3 VALUES ( 'cc', 23 )
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO t3 VALUES ( 'dd', 33 )
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM t1 FULL JOIN t2 USING (name) FULL JOIN t3 USING (name)
-- !query schema
struct<name:string,n:int,n:int,n:int>
-- !query output
bb	11	12	13
cc	NULL	22	23
dd	NULL	NULL	33
ee	NULL	42	NULL


-- !query
SELECT * FROM
(SELECT * FROM t2) as s2
INNER JOIN
(SELECT * FROM t3) s3
USING (name)
-- !query schema
struct<name:string,n:int,n:int>
-- !query output
bb	12	13
cc	22	23


-- !query
SELECT * FROM
(SELECT * FROM t2) as s2
LEFT JOIN
(SELECT * FROM t3) s3
USING (name)
-- !query schema
struct<name:string,n:int,n:int>
-- !query output
bb	12	13
cc	22	23
ee	42	NULL


-- !query
SELECT * FROM
(SELECT * FROM t2) as s2
FULL JOIN
(SELECT * FROM t3) s3
USING (name)
-- !query schema
struct<name:string,n:int,n:int>
-- !query output
bb	12	13
cc	22	23
dd	NULL	33
ee	42	NULL


-- !query
SELECT * FROM
(SELECT name, n as s2_n, 2 as s2_2 FROM t2) as s2
NATURAL INNER JOIN
(SELECT name, n as s3_n, 3 as s3_2 FROM t3) s3
-- !query schema
struct<name:string,s2_n:int,s2_2:int,s3_n:int,s3_2:int>
-- !query output
bb	12	2	13	3
cc	22	2	23	3


-- !query
SELECT * FROM
(SELECT name, n as s2_n, 2 as s2_2 FROM t2) as s2
NATURAL LEFT JOIN
(SELECT name, n as s3_n, 3 as s3_2 FROM t3) s3
-- !query schema
struct<name:string,s2_n:int,s2_2:int,s3_n:int,s3_2:int>
-- !query output
bb	12	2	13	3
cc	22	2	23	3
ee	42	2	NULL	NULL


-- !query
SELECT * FROM
(SELECT name, n as s2_n, 2 as s2_2 FROM t2) as s2
NATURAL FULL JOIN
(SELECT name, n as s3_n, 3 as s3_2 FROM t3) s3
-- !query schema
struct<name:string,s2_n:int,s2_2:int,s3_n:int,s3_2:int>
-- !query output
bb	12	2	13	3
cc	22	2	23	3
dd	NULL	NULL	33	3
ee	42	2	NULL	NULL


-- !query
SELECT * FROM
(SELECT name, n as s1_n, 1 as s1_1 FROM t1) as s1
NATURAL INNER JOIN
(SELECT name, n as s2_n, 2 as s2_2 FROM t2) as s2
NATURAL INNER JOIN
(SELECT name, n as s3_n, 3 as s3_2 FROM t3) s3
-- !query schema
struct<name:string,s1_n:int,s1_1:int,s2_n:int,s2_2:int,s3_n:int,s3_2:int>
-- !query output
bb	11	1	12	2	13	3


-- !query
SELECT * FROM
(SELECT name, n as s1_n, 1 as s1_1 FROM t1) as s1
NATURAL FULL JOIN
(SELECT name, n as s2_n, 2 as s2_2 FROM t2) as s2
NATURAL FULL JOIN
(SELECT name, n as s3_n, 3 as s3_2 FROM t3) s3
-- !query schema
struct<name:string,s1_n:int,s1_1:int,s2_n:int,s2_2:int,s3_n:int,s3_2:int>
-- !query output
bb	11	1	12	2	13	3
cc	NULL	NULL	22	2	23	3
dd	NULL	NULL	NULL	NULL	33	3
ee	NULL	NULL	42	2	NULL	NULL


-- !query
SELECT * FROM
(SELECT name, n as s1_n FROM t1) as s1
NATURAL FULL JOIN
  (SELECT * FROM
    (SELECT name, n as s2_n FROM t2) as s2
    NATURAL FULL JOIN
    (SELECT name, n as s3_n FROM t3) as s3
  ) ss2
-- !query schema
struct<name:string,s1_n:int,s2_n:int,s3_n:int>
-- !query output
bb	11	12	13
cc	NULL	22	23
dd	NULL	NULL	33
ee	NULL	42	NULL


-- !query
SELECT * FROM
(SELECT name, n as s1_n FROM t1) as s1
NATURAL FULL JOIN
  (SELECT * FROM
    (SELECT name, n as s2_n, 2 as s2_2 FROM t2) as s2
    NATURAL FULL JOIN
    (SELECT name, n as s3_n FROM t3) as s3
  ) ss2
-- !query schema
struct<name:string,s1_n:int,s2_n:int,s2_2:int,s3_n:int>
-- !query output
bb	11	12	2	13
cc	NULL	22	2	23
dd	NULL	NULL	NULL	33
ee	NULL	42	2	NULL


-- !query
SELECT * FROM
  (SELECT name, n as s1_n FROM t1) as s1
FULL JOIN
  (SELECT name, 2 as s2_n FROM t2) as s2
ON (s1_n = s2_n)
-- !query schema
struct<name:string,s1_n:int,name:string,s2_n:int>
-- !query output
NULL	NULL	bb	2
NULL	NULL	cc	2
NULL	NULL	ee	2
bb	11	NULL	NULL


-- !query
create or replace temporary view x as select * from
  (values (1,11), (2,22), (3,null), (4,44), (5,null))
  as v(x1, x2)
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view y as select * from
  (values (1,111), (2,222), (3,333), (4,null))
  as v(y1, y2)
-- !query schema
struct<>
-- !query output



-- !query
select * from x
-- !query schema
struct<x1:int,x2:int>
-- !query output
1	11
2	22
3	NULL
4	44
5	NULL


-- !query
select * from y
-- !query schema
struct<y1:int,y2:int>
-- !query output
1	111
2	222
3	333
4	NULL


-- !query
select * from x left join y on (x1 = y1 and x2 is not null)
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
1	11	1	111
2	22	2	222
3	NULL	NULL	NULL
4	44	4	NULL
5	NULL	NULL	NULL


-- !query
select * from x left join y on (x1 = y1 and y2 is not null)
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int>
-- !query output
1	11	1	111
2	22	2	222
3	NULL	3	333
4	44	NULL	NULL
5	NULL	NULL	NULL


-- !query
select * from (x left join y on (x1 = y1)) left join x xx(xx1,xx2)
on (x1 = xx1)
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int,xx1:int,xx2:int>
-- !query output
1	11	1	111	1	11
2	22	2	222	2	22
3	NULL	3	333	3	NULL
4	44	4	NULL	4	44
5	NULL	NULL	NULL	5	NULL


-- !query
select * from (x left join y on (x1 = y1)) left join x xx(xx1,xx2)
on (x1 = xx1 and x2 is not null)
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int,xx1:int,xx2:int>
-- !query output
1	11	1	111	1	11
2	22	2	222	2	22
3	NULL	3	333	NULL	NULL
4	44	4	NULL	4	44
5	NULL	NULL	NULL	NULL	NULL


-- !query
select * from (x left join y on (x1 = y1)) left join x xx(xx1,xx2)
on (x1 = xx1 and y2 is not null)
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int,xx1:int,xx2:int>
-- !query output
1	11	1	111	1	11
2	22	2	222	2	22
3	NULL	3	333	3	NULL
4	44	4	NULL	NULL	NULL
5	NULL	NULL	NULL	NULL	NULL


-- !query
select * from (x left join y on (x1 = y1)) left join x xx(xx1,xx2)
on (x1 = xx1 and xx2 is not null)
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int,xx1:int,xx2:int>
-- !query output
1	11	1	111	1	11
2	22	2	222	2	22
3	NULL	3	333	NULL	NULL
4	44	4	NULL	4	44
5	NULL	NULL	NULL	NULL	NULL


-- !query
select * from (x left join y on (x1 = y1)) left join x xx(xx1,xx2)
on (x1 = xx1) where (x2 is not null)
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int,xx1:int,xx2:int>
-- !query output
1	11	1	111	1	11
2	22	2	222	2	22
4	44	4	NULL	4	44


-- !query
select * from (x left join y on (x1 = y1)) left join x xx(xx1,xx2)
on (x1 = xx1) where (y2 is not null)
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int,xx1:int,xx2:int>
-- !query output
1	11	1	111	1	11
2	22	2	222	2	22
3	NULL	3	333	3	NULL


-- !query
select * from (x left join y on (x1 = y1)) left join x xx(xx1,xx2)
on (x1 = xx1) where (xx2 is not null)
-- !query schema
struct<x1:int,x2:int,y1:int,y2:int,xx1:int,xx2:int>
-- !query output
1	11	1	111	1	11
2	22	2	222	2	22
4	44	4	NULL	4	44


-- !query
select count(*) from tenk1 a where unique1 in
  (select unique1 from tenk1 b join tenk1 c using (unique1)
   where b.unique2 = 42)
-- !query schema
struct<count(1):bigint>
-- !query output
1


-- !query
select count(*) from tenk1 x where
  x.unique1 in (select a.f1 from int4_tbl a,float8_tbl b where a.f1=b.f1) and
  x.unique1 = 0 and
  x.unique1 in (select aa.f1 from int4_tbl aa,float8_tbl bb where aa.f1=bb.f1)
-- !query schema
struct<count(1):bigint>
-- !query output
1


-- !query
select count(*) from tenk1 x where
  x.unique1 in (select a.f1 from int4_tbl a,float8_tbl b where a.f1=b.f1) and
  x.unique1 = 0 and
  x.unique1 in (select aa.f1 from int4_tbl aa,float8_tbl bb where aa.f1=bb.f1)
-- !query schema
struct<count(1):bigint>
-- !query output
1


-- !query
select * from int8_tbl i1 left join (int8_tbl i2 join
  (select 123 as x) ss on i2.q1 = x) on i1.q2 = i2.q2
order by 1, 2
-- !query schema
struct<q1:bigint,q2:bigint,q1:bigint,q2:bigint,x:int>
-- !query output
123	456	123	456	123
123	4567890123456789	123	4567890123456789	123
4567890123456789	-4567890123456789	NULL	NULL	NULL
4567890123456789	123	NULL	NULL	NULL
4567890123456789	4567890123456789	123	4567890123456789	123


-- !query
select count(*)
from
  (select t3.tenthous as x1, coalesce(t1.stringu1, t2.stringu1) as x2
   from tenk1 t1
   left join tenk1 t2 on t1.unique1 = t2.unique1
   join tenk1 t3 on t1.unique2 = t3.unique2) ss,
  tenk1 t4,
  tenk1 t5
where t4.thousand = t5.unique1 and ss.x1 = t4.tenthous and ss.x2 = t5.stringu1
-- !query schema
struct<count(1):bigint>
-- !query output
1000


-- !query
select a.f1, b.f1, t.thousand, t.tenthous from
  tenk1 t,
  (select sum(f1)+1 as f1 from int4_tbl i4a) a,
  (select sum(f1) as f1 from int4_tbl i4b) b
where b.f1 = t.thousand and a.f1 = b.f1 and (a.f1+b.f1+999) = t.tenthous
-- !query schema
struct<f1:bigint,f1:bigint,thousand:int,tenthous:int>
-- !query output



-- !query
select * from
  j1_tbl full join
  (select * from j2_tbl order by j2_tbl.i desc, j2_tbl.k asc) j2_tbl
  on j1_tbl.i = j2_tbl.i and j1_tbl.i = j2_tbl.k
-- !query schema
struct<i:int,j:int,t:string,i:int,k:int>
-- !query output
0	NULL	zero	NULL	NULL
1	4	one	NULL	NULL
2	3	two	2	2
3	2	three	NULL	NULL
4	1	four	NULL	NULL
5	0	five	NULL	NULL
6	6	six	NULL	NULL
7	7	seven	NULL	NULL
8	8	eight	NULL	NULL
NULL	0	zero	NULL	NULL
NULL	NULL	NULL	0	NULL
NULL	NULL	NULL	1	-1
NULL	NULL	NULL	2	4
NULL	NULL	NULL	3	-3
NULL	NULL	NULL	5	-5
NULL	NULL	NULL	5	-5
NULL	NULL	NULL	NULL	0
NULL	NULL	NULL	NULL	NULL
NULL	NULL	null	NULL	NULL


-- !query
select count(*) from
  (select * from tenk1 x order by x.thousand, x.twothousand, x.fivethous) x
  left join
  (select * from tenk1 y order by y.unique2) y
  on x.thousand = y.unique2 and x.twothousand = y.hundred and x.fivethous = y.unique2
-- !query schema
struct<count(1):bigint>
-- !query output
10000


-- !query
DROP TABLE t1
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE t2
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE t3
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE J1_TBL
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE J2_TBL
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view tt1 as select * from
  (values (1, 11), (2, NULL))
  as v(tt1_id, joincol)
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view tt2 as select * from
  (values (21, 11), (22, 11))
  as v(tt2_id, joincol)
-- !query schema
struct<>
-- !query output



-- !query
select tt1.*, tt2.* from tt1 left join tt2 on tt1.joincol = tt2.joincol
-- !query schema
struct<tt1_id:int,joincol:int,tt2_id:int,joincol:int>
-- !query output
1	11	21	11
1	11	22	11
2	NULL	NULL	NULL


-- !query
select tt1.*, tt2.* from tt2 right join tt1 on tt1.joincol = tt2.joincol
-- !query schema
struct<tt1_id:int,joincol:int,tt2_id:int,joincol:int>
-- !query output
1	11	21	11
1	11	22	11
2	NULL	NULL	NULL


-- !query
select count(*) from tenk1 a, tenk1 b
  where a.hundred = b.thousand and (b.fivethous % 10) < 10
-- !query schema
struct<count(1):bigint>
-- !query output
100000


-- !query
create or replace temporary view tt3 as select * from
  (SELECT cast(x.id as int), repeat('xyzzy', 100) FROM range(1,10001) x)
  as v(f1, f2)
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view tt4 as select * from
  (values (0), (1), (9999))
  as v(f1)
-- !query schema
struct<>
-- !query output



-- !query
SELECT a.f1
FROM tt4 a
LEFT JOIN (
        SELECT b.f1
        FROM tt3 b LEFT JOIN tt3 c ON (b.f1 = c.f1)
        WHERE c.f1 IS NULL
) AS d ON (a.f1 = d.f1)
WHERE d.f1 IS NULL
-- !query schema
struct<f1:int>
-- !query output
0
1
9999


-- !query
create or replace temporary view tt5 as select * from
  (values (1, 10), (1, 11))
  as v(f1, f2)
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view tt6 as select * from
  (values (1, 9), (1, 2), (2, 9))
  as v(f1, f2)
-- !query schema
struct<>
-- !query output



-- !query
select * from tt5,tt6 where tt5.f1 = tt6.f1 and tt5.f1 = tt5.f2 - tt6.f2
-- !query schema
struct<f1:int,f2:int,f1:int,f2:int>
-- !query output
1	10	1	9


-- !query
create or replace temporary view xx as select * from
  (values (1), (2), (3))
  as v(pkxx)
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view yy as select * from
  (values (101, 1), (201, 2), (301, NULL))
  as v(pkyy, pkxx)
-- !query schema
struct<>
-- !query output



-- !query
select yy.pkyy as yy_pkyy, yy.pkxx as yy_pkxx, yya.pkyy as yya_pkyy,
       xxa.pkxx as xxa_pkxx, xxb.pkxx as xxb_pkxx
from yy
     left join (SELECT * FROM yy where pkyy = 101) as yya ON yy.pkyy = yya.pkyy
     left join xx xxa on yya.pkxx = xxa.pkxx
     left join xx xxb on coalesce (xxa.pkxx, 1) = xxb.pkxx
-- !query schema
struct<yy_pkyy:int,yy_pkxx:int,yya_pkyy:int,xxa_pkxx:int,xxb_pkxx:int>
-- !query output
101	1	101	1	1
201	2	NULL	NULL	1
301	NULL	NULL	NULL	1


-- !query
create or replace temporary view zt1 as select * from
  (values (53))
  as v(f1)
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view zt2 as select * from
  (values (53))
  as v(f2)
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view zt3(f3 int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
select * from
  zt2 left join zt3 on (f2 = f3)
      left join zt1 on (f3 = f1)
where f2 = 53
-- !query schema
struct<f2:int,f3:int,f1:int>
-- !query output
53	NULL	NULL


-- !query
create temp view zv1 as select *,'dummy' AS junk from zt1
-- !query schema
struct<>
-- !query output



-- !query
select * from
  zt2 left join zt3 on (f2 = f3)
      left join zv1 on (f3 = f1)
where f2 = 53
-- !query schema
struct<f2:int,f3:int,f1:int,junk:string>
-- !query output
53	NULL	NULL	NULL


-- !query
select a.unique2, a.ten, b.tenthous, b.unique2, b.hundred
from tenk1 a left join tenk1 b on a.unique2 = b.tenthous
where a.unique1 = 42 and
      ((b.unique2 is null and a.ten = 2) or b.hundred = 3)
-- !query schema
struct<unique2:int,ten:int,tenthous:int,unique2:int,hundred:int>
-- !query output



-- !query
create or replace temporary view a (i integer) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view b (x integer, y integer) using parquet
-- !query schema
struct<>
-- !query output



-- !query
select * from a left join b on i = x and i = y and x = i
-- !query schema
struct<i:int,x:int,y:int>
-- !query output



-- !query
select t1.q2, count(t2.q1, t2.q2)
from int8_tbl t1 left join int8_tbl t2 on (t1.q2 = t2.q1)
group by t1.q2 order by 1
-- !query schema
struct<q2:bigint,count(q1, q2):bigint>
-- !query output
-4567890123456789	0
123	2
456	0
4567890123456789	6


-- !query
select t1.q2, count(t2.q1, t2.q2)
from int8_tbl t1 left join (select * from int8_tbl) t2 on (t1.q2 = t2.q1)
group by t1.q2 order by 1
-- !query schema
struct<q2:bigint,count(q1, q2):bigint>
-- !query output
-4567890123456789	0
123	2
456	0
4567890123456789	6


-- !query
select t1.q2, count(t2.q1, t2.q2)
from int8_tbl t1 left join
  (select q1, case when q2=1 then 1 else q2 end as q2 from int8_tbl) t2
  on (t1.q2 = t2.q1)
group by t1.q2 order by 1
-- !query schema
struct<q2:bigint,count(q1, q2):bigint>
-- !query output
-4567890123456789	0
123	2
456	0
4567890123456789	6


-- !query
create or replace temporary view a as select * from
  (values ('p'), ('q'))
  as v(code)
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view b as select * from
  (values ('p', 1), ('p', 2))
  as v(a, num)
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view c as select * from
  (values ('A', 'p'), ('B', 'q'), ('C', null))
  as v(name, a)
-- !query schema
struct<>
-- !query output



-- !query
select c.name, ss.code, ss.b_cnt, ss.const
from c left join
  (select a.code, coalesce(b_grp.cnt, 0) as b_cnt, -1 as const
   from a left join
     (select count(1) as cnt, b.a from b group by b.a) as b_grp
     on a.code = b_grp.a
  ) as ss
  on (c.a = ss.code)
order by c.name
-- !query schema
struct<name:string,code:string,b_cnt:bigint,const:int>
-- !query output
A	p	2	-1
B	q	0	-1
C	NULL	NULL	NULL


-- !query
SELECT * FROM
( SELECT 1 as key1 ) sub1
LEFT JOIN
( SELECT sub3.key3, sub4.value2, COALESCE(sub4.value2, 66) as value3 FROM
    ( SELECT 1 as key3 ) sub3
    LEFT JOIN
    ( SELECT sub5.key5, COALESCE(sub6.value1, 1) as value2 FROM
        ( SELECT 1 as key5 ) sub5
        LEFT JOIN
        ( SELECT 2 as key6, 42 as value1 ) sub6
        ON sub5.key5 = sub6.key6
    ) sub4
    ON sub4.key5 = sub3.key3
) sub2
ON sub1.key1 = sub2.key3
-- !query schema
struct<key1:int,key3:int,value2:int,value3:int>
-- !query output
1	1	1	1


-- !query
SELECT * FROM
( SELECT 1 as key1 ) sub1
LEFT JOIN
( SELECT sub3.key3, value2, COALESCE(value2, 66) as value3 FROM
    ( SELECT 1 as key3 ) sub3
    LEFT JOIN
    ( SELECT sub5.key5, COALESCE(sub6.value1, 1) as value2 FROM
        ( SELECT 1 as key5 ) sub5
        LEFT JOIN
        ( SELECT 2 as key6, 42 as value1 ) sub6
        ON sub5.key5 = sub6.key6
    ) sub4
    ON sub4.key5 = sub3.key3
) sub2
ON sub1.key1 = sub2.key3
-- !query schema
struct<key1:int,key3:int,value2:int,value3:int>
-- !query output
1	1	1	1


-- !query
SELECT qq, unique1
  FROM
  ( SELECT COALESCE(q1, 0) AS qq FROM int8_tbl a ) AS ss1
  FULL OUTER JOIN
  ( SELECT COALESCE(q2, -1) AS qq FROM int8_tbl b ) AS ss2
  USING (qq)
  INNER JOIN tenk1 c ON qq = unique2
-- !query schema
struct<qq:bigint,unique1:int>
-- !query output
123	4596
123	4596
456	7318


-- !query
create or replace temporary view nt1 as select * from
  (values(1,true,true), (2,true,false), (3,false,false))
  as v(id, a1, a2)
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view nt2 as select * from
  (values(1,1,true,true), (2,2,true,false), (3,3,false,false))
  as v(id, nt1_id, b1, b2)
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view nt3 as select * from
  (values(1,1,true), (2,2,false), (3,3,true))
  as v(id, nt2_id, c1)
-- !query schema
struct<>
-- !query output



-- !query
select nt3.id
from nt3 as nt3
  left join
    (select nt2.*, (nt2.b1 and ss1.a3) AS b3
     from nt2 as nt2
       left join
         (select nt1.*, (nt1.id is not null) as a3 from nt1) as ss1
         on ss1.id = nt2.nt1_id
    ) as ss2
    on ss2.id = nt3.nt2_id
where nt3.id = 1 and ss2.b3
-- !query schema
struct<id:int>
-- !query output
1


-- !query
select * from int4_tbl a full join int4_tbl b on true
-- !query schema
struct<f1:int,f1:int>
-- !query output
-123456	-123456
-123456	-2147483647
-123456	0
-123456	123456
-123456	2147483647
-2147483647	-123456
-2147483647	-2147483647
-2147483647	0
-2147483647	123456
-2147483647	2147483647
0	-123456
0	-2147483647
0	0
0	123456
0	2147483647
123456	-123456
123456	-2147483647
123456	0
123456	123456
123456	2147483647
2147483647	-123456
2147483647	-2147483647
2147483647	0
2147483647	123456
2147483647	2147483647


-- !query
select * from int4_tbl a full join int4_tbl b on false
-- !query schema
struct<f1:int,f1:int>
-- !query output
-123456	NULL
-2147483647	NULL
0	NULL
123456	NULL
2147483647	NULL
NULL	-123456
NULL	-2147483647
NULL	0
NULL	123456
NULL	2147483647


-- !query
select count(*) from
  tenk1 a join tenk1 b on a.unique1 = b.unique2
  left join tenk1 c on a.unique2 = b.unique1 and c.thousand = a.thousand
  join int4_tbl on b.thousand = f1
-- !query schema
struct<count(1):bigint>
-- !query output
10


-- !query
select b.unique1 from
  tenk1 a join tenk1 b on a.unique1 = b.unique2
  left join tenk1 c on b.unique1 = 42 and c.thousand = a.thousand
  join int4_tbl i1 on b.thousand = f1
  right join int4_tbl i2 on i2.f1 = b.tenthous
  order by 1
-- !query schema
struct<unique1:int>
-- !query output
NULL
NULL
NULL
NULL
0


-- !query
select * from
(
  select unique1, q1, coalesce(unique1, -1) + q1 as fault
  from int8_tbl left join tenk1 on (q2 = unique2)
) ss
where fault = 122
order by fault
-- !query schema
struct<unique1:int,q1:bigint,fault:bigint>
-- !query output
NULL	123	122


-- !query
select q1, unique2, thousand, hundred
  from int8_tbl a left join tenk1 b on q1 = unique2
  where coalesce(thousand,123) = q1 and q1 = coalesce(hundred,123)
-- !query schema
struct<q1:bigint,unique2:int,thousand:int,hundred:int>
-- !query output



-- !query
select f1, unique2, case when unique2 is null then f1 else 0 end
  from int4_tbl a left join tenk1 b on f1 = unique2
  where (case when unique2 is null then f1 else 0 end) = 0
-- !query schema
struct<f1:int,unique2:int,CASE WHEN (unique2 IS NULL) THEN f1 ELSE 0 END:int>
-- !query output
0	0	0


-- !query
select a.unique1, b.unique1, c.unique1, coalesce(b.twothousand, a.twothousand)
  from tenk1 a left join tenk1 b on b.thousand = a.unique1                        left join tenk1 c on c.unique2 = coalesce(b.twothousand, a.twothousand)
  where a.unique2 < 10 and coalesce(b.twothousand, a.twothousand) = 44
-- !query schema
struct<unique1:int,unique1:int,unique1:int,coalesce(twothousand, twothousand):int>
-- !query output



-- !query
select * from
  text_tbl t1
  inner join int8_tbl i8
  on i8.q2 = 456
  right join text_tbl t2
  on t1.f1 = 'doh!'
  left join int4_tbl i4
  on i8.q1 = i4.f1
-- !query schema
struct<f1:string,q1:bigint,q2:bigint,f1:string,f1:int>
-- !query output
doh!	123	456	doh!	NULL
doh!	123	456	hi de ho neighbor	NULL


-- !query
select * from
   text_tbl t1
   left join int8_tbl i8
   on i8.q2 = 123,
   lateral (select i8.q1, t2.f1 from text_tbl t2 limit 1) as ss
where t1.f1 = ss.f1
-- !query schema
struct<f1:string,q1:bigint,q2:bigint,q1:bigint,f1:string>
-- !query output
doh!	4567890123456789	123	4567890123456789	doh!


-- !query
select * from
  text_tbl t1
  left join int8_tbl i8
  on i8.q2 = 123,
  lateral (select i8.q1, t2.f1 from text_tbl t2 limit 1) as ss
where t1.f1 = ss.f1
-- !query schema
struct<f1:string,q1:bigint,q2:bigint,q1:bigint,f1:string>
-- !query output
doh!	4567890123456789	123	4567890123456789	doh!


-- !query
select * from
  text_tbl t1
  left join int8_tbl i8
  on i8.q2 = 123,
  lateral (select i8.q1, t2.f1 from text_tbl t2 limit 1) as ss1,
  lateral (select ss1.* from text_tbl t3 limit 1) as ss2
where t1.f1 = ss2.f1
-- !query schema
struct<f1:string,q1:bigint,q2:bigint,q1:bigint,f1:string,q1:bigint,f1:string>
-- !query output
doh!	4567890123456789	123	4567890123456789	doh!	4567890123456789	doh!


-- !query
select * from
  text_tbl t1
  left join int8_tbl i8
  on i8.q2 = 123,
  lateral (select i8.q1, t2.f1 from text_tbl t2 limit 1) as ss1,
  lateral (select ss1.* from text_tbl t3 limit 1) as ss2
where t1.f1 = ss2.f1
-- !query schema
struct<f1:string,q1:bigint,q2:bigint,q1:bigint,f1:string,q1:bigint,f1:string>
-- !query output
doh!	4567890123456789	123	4567890123456789	doh!	4567890123456789	doh!


-- !query
select 1 from
  text_tbl as tt1
  inner join text_tbl as tt2 on (tt1.f1 = 'foo')
  left join text_tbl as tt3 on (tt3.f1 = 'foo')
  left join text_tbl as tt4 on (tt3.f1 = tt4.f1),
  lateral (select tt4.f1 as c0 from text_tbl as tt5 limit 1) as ss1
where tt1.f1 = ss1.c0
-- !query schema
struct<1:int>
-- !query output



-- !query
select 1 from
  text_tbl as tt1
  inner join text_tbl as tt2 on (tt1.f1 = 'foo')
  left join text_tbl as tt3 on (tt3.f1 = 'foo')
  left join text_tbl as tt4 on (tt3.f1 = tt4.f1),
  lateral (select tt4.f1 as c0 from text_tbl as tt5 limit 1) as ss1
where tt1.f1 = ss1.c0
-- !query schema
struct<1:int>
-- !query output



-- !query
select * from
  (select 1 as id) as xx
  left join
    (tenk1 as a1 full join (select 1 as id) as yy on (a1.unique1 = yy.id))
  on (xx.id = coalesce(yy.id))
-- !query schema
struct<id:int,unique1:int,unique2:int,two:int,four:int,ten:int,twenty:int,hundred:int,thousand:int,twothousand:int,fivethous:int,tenthous:int,odd:int,even:int,stringu1:string,stringu2:string,string4:string,id:int>
-- !query output
1	1	2838	1	1	1	1	1	1	1	1	1	2	3	BAAAAA	EFEAAA	OOOOxx	1


-- !query
select a.q2, b.q1
  from int8_tbl a left join int8_tbl b on a.q2 = coalesce(b.q1, 1)
  where coalesce(b.q1, 1) > 0
-- !query schema
struct<q2:bigint,q1:bigint>
-- !query output
-4567890123456789	NULL
123	123
123	123
456	NULL
4567890123456789	4567890123456789
4567890123456789	4567890123456789
4567890123456789	4567890123456789
4567890123456789	4567890123456789
4567890123456789	4567890123456789
4567890123456789	4567890123456789


-- !query
create or replace temporary view parent as select * from
  (values (1, 10), (2, 20), (3, 30))
  as v(k, pd)
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view child as select * from
  (values (1, 100), (4, 400))
  as v(k, cd)
-- !query schema
struct<>
-- !query output



-- !query
select p.* from parent p left join child c on (p.k = c.k)
-- !query schema
struct<k:int,pd:int>
-- !query output
1	10
2	20
3	30


-- !query
select p.*, linked from parent p
  left join (select c.*, true as linked from child c) as ss
  on (p.k = ss.k)
-- !query schema
struct<k:int,pd:int,linked:boolean>
-- !query output
1	10	true
2	20	NULL
3	30	NULL


-- !query
select p.* from
  parent p left join child c on (p.k = c.k)
  where p.k = 1 and p.k = 2
-- !query schema
struct<k:int,pd:int>
-- !query output



-- !query
select p.* from
  (parent p left join child c on (p.k = c.k)) join parent x on p.k = x.k
  where p.k = 1 and p.k = 2
-- !query schema
struct<k:int,pd:int>
-- !query output



-- !query
create or replace temporary view a as select * from
  (values (0), (1))
  as v(id)
-- !query schema
struct<>
-- !query output



-- !query
create or replace temporary view b as select * from
  (values (0, 0), (1, NULL))
  as v(id, a_id)
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM b LEFT JOIN a ON (b.a_id = a.id) WHERE (a.id IS NULL OR a.id > 0)
-- !query schema
struct<id:int,a_id:int,id:int>
-- !query output
1	NULL	NULL


-- !query
SELECT b.* FROM b LEFT JOIN a ON (b.a_id = a.id) WHERE (a.id IS NULL OR a.id > 0)
-- !query schema
struct<id:int,a_id:int>
-- !query output
1	NULL


-- !query
create or replace temporary view innertab as select * from
  (values (123L, 42L))
  as v(id, dat1)
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM
    (SELECT 1 AS x) ss1
  LEFT JOIN
    (SELECT q1, q2, COALESCE(dat1, q1) AS y
     FROM int8_tbl LEFT JOIN innertab ON q2 = id) ss2
  ON true
-- !query schema
struct<x:int,q1:bigint,q2:bigint,y:bigint>
-- !query output
1	123	456	123
1	123	4567890123456789	123
1	4567890123456789	-4567890123456789	4567890123456789
1	4567890123456789	123	42
1	4567890123456789	4567890123456789	4567890123456789


-- !query
select * from
  int8_tbl x join (int4_tbl x cross join int4_tbl y) j on q1 = f1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AMBIGUOUS_REFERENCE",
  "sqlState" : "42704",
  "messageParameters" : {
    "name" : "`f1`",
    "referenceNames" : "[`j`.`f1`, `j`.`f1`]"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 78,
    "stopIndex" : 79,
    "fragment" : "f1"
  } ]
}


-- !query
select * from
  int8_tbl x join (int4_tbl x cross join int4_tbl y) j on q1 = y.f1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`y`.`f1`",
    "proposal" : "`j`.`f1`, `j`.`f1`, `x`.`q1`, `x`.`q2`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 78,
    "stopIndex" : 81,
    "fragment" : "y.f1"
  } ]
}


-- !query
select * from
  int8_tbl x join (int4_tbl x cross join int4_tbl y(ff)) j on q1 = f1
-- !query schema
struct<q1:bigint,q2:bigint,f1:int,ff:int>
-- !query output



-- !query
select t1.uunique1 from
  tenk1 t1 join tenk2 t2 on t1.two = t2.two
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`t1`.`uunique1`",
    "proposal" : "`t1`.`unique1`, `t2`.`unique1`, `t1`.`unique2`, `t2`.`unique2`, `t1`.`four`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 18,
    "fragment" : "t1.uunique1"
  } ]
}


-- !query
select t2.uunique1 from
  tenk1 t1 join tenk2 t2 on t1.two = t2.two
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`t2`.`uunique1`",
    "proposal" : "`t2`.`unique1`, `t1`.`unique1`, `t2`.`unique2`, `t1`.`unique2`, `t2`.`four`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 18,
    "fragment" : "t2.uunique1"
  } ]
}


-- !query
select uunique1 from
  tenk1 t1 join tenk2 t2 on t1.two = t2.two
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`uunique1`",
    "proposal" : "`t1`.`unique1`, `t2`.`unique1`, `t1`.`unique2`, `t2`.`unique2`, `t1`.`ten`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 15,
    "fragment" : "uunique1"
  } ]
}


-- !query
select unique2, x.*
from tenk1 a, lateral (select * from int4_tbl b where f1 = a.unique1) x
-- !query schema
struct<unique2:int,f1:int>
-- !query output
9998	0


-- !query
select unique2, x.*
from int4_tbl x, lateral (select unique2 from tenk1 where f1 = unique1) ss
-- !query schema
struct<unique2:int,f1:int>
-- !query output
9998	0


-- !query
select unique2, x.*
from int4_tbl x left join lateral (select unique1, unique2 from tenk1 where f1 = unique1) ss on true
-- !query schema
struct<unique2:int,f1:int>
-- !query output
9998	0
NULL	-123456
NULL	-2147483647
NULL	123456
NULL	2147483647


-- !query
select * from (select f1/2 as x from int4_tbl) ss1 join int4_tbl i4 on x = f1,
   lateral (select x) ss2(y)
-- !query schema
struct<x:double,f1:int,y:double>
-- !query output
0.0	0	0.0


-- !query
select * from ((select f1/2 as x from int4_tbl) ss1 join int4_tbl i4 on x = f1) j,
   lateral (select x) ss2(y)
-- !query schema
struct<x:double,f1:int,y:double>
-- !query output
0.0	0	0.0


-- !query
select * from
  int8_tbl x left join (select q1,coalesce(q2,0) q2 from int8_tbl) y on x.q2 = y.q1,
  lateral (select x.q1,y.q1,y.q2) v(xq1,yq1,yq2)
-- !query schema
struct<q1:bigint,q2:bigint,q1:bigint,q2:bigint,xq1:bigint,yq1:bigint,yq2:bigint>
-- !query output
123	456	NULL	NULL	123	NULL	NULL
123	4567890123456789	4567890123456789	-4567890123456789	123	4567890123456789	-4567890123456789
123	4567890123456789	4567890123456789	123	123	4567890123456789	123
123	4567890123456789	4567890123456789	4567890123456789	123	4567890123456789	4567890123456789
4567890123456789	-4567890123456789	NULL	NULL	4567890123456789	NULL	NULL
4567890123456789	123	123	456	4567890123456789	123	456
4567890123456789	123	123	4567890123456789	4567890123456789	123	4567890123456789
4567890123456789	4567890123456789	4567890123456789	-4567890123456789	4567890123456789	4567890123456789	-4567890123456789
4567890123456789	4567890123456789	4567890123456789	123	4567890123456789	4567890123456789	123
4567890123456789	4567890123456789	4567890123456789	4567890123456789	4567890123456789	4567890123456789	4567890123456789


-- !query
select x.* from
  int8_tbl x left join (select q1,coalesce(q2,0) q2 from int8_tbl) y on x.q2 = y.q1,
  lateral (select x.q1,y.q1,y.q2) v(xq1,yq1,yq2)
-- !query schema
struct<q1:bigint,q2:bigint>
-- !query output
123	456
123	4567890123456789
123	4567890123456789
123	4567890123456789
4567890123456789	-4567890123456789
4567890123456789	123
4567890123456789	123
4567890123456789	4567890123456789
4567890123456789	4567890123456789
4567890123456789	4567890123456789


-- !query
select * from
  int8_tbl a left join
  lateral (select *, a.q2 as x from int8_tbl b) ss on a.q2 = ss.q1
-- !query schema
struct<q1:bigint,q2:bigint,q1:bigint,q2:bigint,x:bigint>
-- !query output
123	456	NULL	NULL	NULL
123	4567890123456789	4567890123456789	-4567890123456789	4567890123456789
123	4567890123456789	4567890123456789	123	4567890123456789
123	4567890123456789	4567890123456789	4567890123456789	4567890123456789
4567890123456789	-4567890123456789	NULL	NULL	NULL
4567890123456789	123	123	456	123
4567890123456789	123	123	4567890123456789	123
4567890123456789	4567890123456789	4567890123456789	-4567890123456789	4567890123456789
4567890123456789	4567890123456789	4567890123456789	123	4567890123456789
4567890123456789	4567890123456789	4567890123456789	4567890123456789	4567890123456789


-- !query
select * from
  int8_tbl a left join
  lateral (select *, coalesce(a.q2, 42) as x from int8_tbl b) ss on a.q2 = ss.q1
-- !query schema
struct<q1:bigint,q2:bigint,q1:bigint,q2:bigint,x:bigint>
-- !query output
123	456	NULL	NULL	NULL
123	4567890123456789	4567890123456789	-4567890123456789	4567890123456789
123	4567890123456789	4567890123456789	123	4567890123456789
123	4567890123456789	4567890123456789	4567890123456789	4567890123456789
4567890123456789	-4567890123456789	NULL	NULL	NULL
4567890123456789	123	123	456	123
4567890123456789	123	123	4567890123456789	123
4567890123456789	4567890123456789	4567890123456789	-4567890123456789	4567890123456789
4567890123456789	4567890123456789	4567890123456789	123	4567890123456789
4567890123456789	4567890123456789	4567890123456789	4567890123456789	4567890123456789


-- !query
select * from int4_tbl i left join
  lateral (select * from int2_tbl j where i.f1 = j.f1) k on true
-- !query schema
struct<f1:int,f1:smallint>
-- !query output
-123456	NULL
-2147483647	NULL
0	0
123456	NULL
2147483647	NULL


-- !query
select * from
  int8_tbl a left join lateral
  (select b.q1 as bq1, c.q1 as cq1, least(a.q1,b.q1,c.q1) from
   int8_tbl b cross join int8_tbl c) ss
  on a.q2 = ss.bq1
-- !query schema
struct<q1:bigint,q2:bigint,bq1:bigint,cq1:bigint,least(outer(a.q1), q1, q1):bigint>
-- !query output
123	456	NULL	NULL	NULL
123	4567890123456789	4567890123456789	123	123
123	4567890123456789	4567890123456789	123	123
123	4567890123456789	4567890123456789	123	123
123	4567890123456789	4567890123456789	123	123
123	4567890123456789	4567890123456789	123	123
123	4567890123456789	4567890123456789	123	123
123	4567890123456789	4567890123456789	4567890123456789	123
123	4567890123456789	4567890123456789	4567890123456789	123
123	4567890123456789	4567890123456789	4567890123456789	123
123	4567890123456789	4567890123456789	4567890123456789	123
123	4567890123456789	4567890123456789	4567890123456789	123
123	4567890123456789	4567890123456789	4567890123456789	123
123	4567890123456789	4567890123456789	4567890123456789	123
123	4567890123456789	4567890123456789	4567890123456789	123
123	4567890123456789	4567890123456789	4567890123456789	123
4567890123456789	-4567890123456789	NULL	NULL	NULL
4567890123456789	123	123	123	123
4567890123456789	123	123	123	123
4567890123456789	123	123	123	123
4567890123456789	123	123	123	123
4567890123456789	123	123	4567890123456789	123
4567890123456789	123	123	4567890123456789	123
4567890123456789	123	123	4567890123456789	123
4567890123456789	123	123	4567890123456789	123
4567890123456789	123	123	4567890123456789	123
4567890123456789	123	123	4567890123456789	123
4567890123456789	4567890123456789	4567890123456789	123	123
4567890123456789	4567890123456789	4567890123456789	123	123
4567890123456789	4567890123456789	4567890123456789	123	123
4567890123456789	4567890123456789	4567890123456789	123	123
4567890123456789	4567890123456789	4567890123456789	123	123
4567890123456789	4567890123456789	4567890123456789	123	123
4567890123456789	4567890123456789	4567890123456789	4567890123456789	4567890123456789
4567890123456789	4567890123456789	4567890123456789	4567890123456789	4567890123456789
4567890123456789	4567890123456789	4567890123456789	4567890123456789	4567890123456789
4567890123456789	4567890123456789	4567890123456789	4567890123456789	4567890123456789
4567890123456789	4567890123456789	4567890123456789	4567890123456789	4567890123456789
4567890123456789	4567890123456789	4567890123456789	4567890123456789	4567890123456789
4567890123456789	4567890123456789	4567890123456789	4567890123456789	4567890123456789
4567890123456789	4567890123456789	4567890123456789	4567890123456789	4567890123456789
4567890123456789	4567890123456789	4567890123456789	4567890123456789	4567890123456789


-- !query
select f1,g from int4_tbl a, (select f1 as g) ss
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`f1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 38,
    "stopIndex" : 39,
    "fragment" : "f1"
  } ]
}


-- !query
select f1,g from int4_tbl a, (select a.f1 as g) ss
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`a`.`f1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 38,
    "stopIndex" : 41,
    "fragment" : "a.f1"
  } ]
}


-- !query
select f1,g from int4_tbl a cross join (select f1 as g) ss
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`f1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 48,
    "stopIndex" : 49,
    "fragment" : "f1"
  } ]
}


-- !query
select f1,g from int4_tbl a cross join (select a.f1 as g) ss
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`a`.`f1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 48,
    "stopIndex" : 51,
    "fragment" : "a.f1"
  } ]
}


-- !query
CREATE TABLE j1 (id1 int, id2 int) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE j2 (id1 int, id2 int) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO j1 values(1,1),(1,2)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO j2 values(1,1)
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO j2 values(1,2)
-- !query schema
struct<>
-- !query output



-- !query
select * from j1
inner join j2 on j1.id1 = j2.id1 and j1.id2 = j2.id2
where j1.id1 % 1000 = 1 and j2.id1 % 1000 = 1
-- !query schema
struct<id1:int,id2:int,id1:int,id2:int>
-- !query output
1	1	1	1
1	2	1	2


-- !query
drop table j1
-- !query schema
struct<>
-- !query output



-- !query
drop table j2
-- !query schema
struct<>
-- !query output

