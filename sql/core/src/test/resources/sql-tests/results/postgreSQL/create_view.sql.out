-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TABLE emp (
  name string,
  age int,
  salary int,
  manager string
) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE VIEW toyemp AS
   SELECT name, age, /* location ,*/ 12*salary AS annualsal
   FROM emp
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW toyemp
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE emp
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE view_base_table (key int /* PRIMARY KEY */, data varchar(20)) USING PARQUET
-- !query schema
struct<>
-- !query output



-- !query
CREATE VIEW key_dependent_view AS
   SELECT * FROM view_base_table GROUP BY key
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "MISSING_AGGREGATION",
  "sqlState" : "42803",
  "messageParameters" : {
    "expression" : "\"data\"",
    "expressionAnyValue" : "\"any_value(data)\""
  }
}


-- !query
CREATE VIEW key_dependent_view_no_cols AS
   SELECT FROM view_base_table GROUP BY key HAVING length(data) > 0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`FROM`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 53,
    "stopIndex" : 56,
    "fragment" : "FROM"
  } ]
}


-- !query
CREATE TABLE viewtest_tbl (a int, b int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO viewtest_tbl VALUES (5, 10), (10, 15), (15, 20), (20, 25)
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE VIEW viewtest AS
	SELECT * FROM viewtest_tbl
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE VIEW viewtest AS
	SELECT * FROM viewtest_tbl WHERE a > 10
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM viewtest
-- !query schema
struct<a:int,b:int>
-- !query output
15	20
20	25


-- !query
CREATE OR REPLACE VIEW viewtest AS
	SELECT a, b FROM viewtest_tbl WHERE a > 5 ORDER BY b DESC
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM viewtest
-- !query schema
struct<a:int,b:int>
-- !query output
20	25
15	20
10	15


-- !query
CREATE OR REPLACE VIEW viewtest AS
	SELECT a FROM viewtest_tbl WHERE a <> 20
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE VIEW viewtest AS
	SELECT 1, * FROM viewtest_tbl
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE VIEW viewtest AS
	SELECT a, decimal(b) FROM viewtest_tbl
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE VIEW viewtest AS
	SELECT a, b, 0 AS c FROM viewtest_tbl
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW viewtest
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE viewtest_tbl
-- !query schema
struct<>
-- !query output



-- !query
CREATE SCHEMA temp_view_test
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE temp_view_test.base_table (a int, id int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE temp_view_test.base_table2 (a int, id int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
USE temp_view_test
-- !query schema
struct<>
-- !query output



-- !query
CREATE TEMPORARY VIEW temp_table AS SELECT * FROM VALUES
  (1, 1) as temp_table(a, id)
-- !query schema
struct<>
-- !query output



-- !query
CREATE VIEW v1 AS SELECT * FROM base_table
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED v1
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
id                  	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	temp_view_test      	                    
Table               	v1                  	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM base_table	                    
View Original Text  	SELECT * FROM base_table	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.temp_view_test	                    
View Query Output Columns	[a, id]


-- !query
CREATE VIEW v1_temp AS SELECT * FROM temp_table
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "sqlState" : "42K0F",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`temp_view_test`.`v1_temp`",
    "tempObj" : "VIEW",
    "tempObjName" : "`temp_table`"
  }
}


-- !query
CREATE TEMP VIEW v2_temp AS SELECT * FROM base_table
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED v2_temp
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
id                  	int


-- !query
CREATE VIEW temp_view_test.v2 AS SELECT * FROM base_table
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED temp_view_test.v2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
id                  	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	temp_view_test      	                    
Table               	v2                  	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM base_table	                    
View Original Text  	SELECT * FROM base_table	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.temp_view_test	                    
View Query Output Columns	[a, id]


-- !query
CREATE VIEW temp_view_test.v3_temp AS SELECT * FROM temp_table
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "sqlState" : "42K0F",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`temp_view_test`.`v3_temp`",
    "tempObj" : "VIEW",
    "tempObjName" : "`temp_table`"
  }
}


-- !query
CREATE VIEW v3 AS
    SELECT t1.a AS t1_a, t2.a AS t2_a
    FROM base_table t1, base_table2 t2
    WHERE t1.id = t2.id
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED v3
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
t1_a                	int                 	                    
t2_a                	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	temp_view_test      	                    
Table               	v3                  	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT t1.a AS t1_a, t2.a AS t2_a
    FROM base_table t1, base_table2 t2
    WHERE t1.id = t2.id	                    
View Original Text  	SELECT t1.a AS t1_a, t2.a AS t2_a
    FROM base_table t1, base_table2 t2
    WHERE t1.id = t2.id	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.temp_view_test	                    
View Query Output Columns	[t1_a, t2_a]


-- !query
CREATE VIEW v4_temp AS
    SELECT t1.a AS t1_a, t2.a AS t2_a
    FROM base_table t1, temp_table t2
    WHERE t1.id = t2.id
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "sqlState" : "42K0F",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`temp_view_test`.`v4_temp`",
    "tempObj" : "VIEW",
    "tempObjName" : "`temp_table`"
  }
}


-- !query
CREATE VIEW v5_temp AS
    SELECT t1.a AS t1_a, t2.a AS t2_a, t3.a AS t3_a
    FROM base_table t1, base_table2 t2, temp_table t3
    WHERE t1.id = t2.id and t2.id = t3.id
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "sqlState" : "42K0F",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`temp_view_test`.`v5_temp`",
    "tempObj" : "VIEW",
    "tempObjName" : "`temp_table`"
  }
}


-- !query
CREATE VIEW v4 AS SELECT * FROM base_table WHERE id IN (SELECT id FROM base_table2)
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED v4
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
id                  	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	temp_view_test      	                    
Table               	v4                  	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM base_table WHERE id IN (SELECT id FROM base_table2)	                    
View Original Text  	SELECT * FROM base_table WHERE id IN (SELECT id FROM base_table2)	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.temp_view_test	                    
View Query Output Columns	[a, id]


-- !query
CREATE VIEW v5 AS SELECT t1.id, t2.a FROM base_table t1, (SELECT * FROM base_table2) t2
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED v5
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
id                  	int                 	                    
a                   	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	temp_view_test      	                    
Table               	v5                  	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT t1.id, t2.a FROM base_table t1, (SELECT * FROM base_table2) t2	                    
View Original Text  	SELECT t1.id, t2.a FROM base_table t1, (SELECT * FROM base_table2) t2	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.temp_view_test	                    
View Query Output Columns	[id, a]


-- !query
CREATE VIEW v6 AS SELECT * FROM base_table WHERE EXISTS (SELECT 1 FROM base_table2)
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED v6
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
id                  	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	temp_view_test      	                    
Table               	v6                  	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM base_table WHERE EXISTS (SELECT 1 FROM base_table2)	                    
View Original Text  	SELECT * FROM base_table WHERE EXISTS (SELECT 1 FROM base_table2)	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.temp_view_test	                    
View Query Output Columns	[a, id]


-- !query
CREATE VIEW v7 AS SELECT * FROM base_table WHERE NOT EXISTS (SELECT 1 FROM base_table2)
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED v7
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
id                  	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	temp_view_test      	                    
Table               	v7                  	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM base_table WHERE NOT EXISTS (SELECT 1 FROM base_table2)	                    
View Original Text  	SELECT * FROM base_table WHERE NOT EXISTS (SELECT 1 FROM base_table2)	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.temp_view_test	                    
View Query Output Columns	[a, id]


-- !query
CREATE VIEW v8 AS SELECT * FROM base_table WHERE EXISTS (SELECT 1)
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED v8
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
id                  	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	temp_view_test      	                    
Table               	v8                  	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM base_table WHERE EXISTS (SELECT 1)	                    
View Original Text  	SELECT * FROM base_table WHERE EXISTS (SELECT 1)	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.temp_view_test	                    
View Query Output Columns	[a, id]


-- !query
CREATE VIEW v6_temp AS SELECT * FROM base_table WHERE id IN (SELECT id FROM temp_table)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "sqlState" : "42K0F",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`temp_view_test`.`v6_temp`",
    "tempObj" : "VIEW",
    "tempObjName" : "`temp_table`"
  }
}


-- !query
CREATE VIEW v7_temp AS SELECT t1.id, t2.a FROM base_table t1, (SELECT * FROM temp_table) t2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "sqlState" : "42K0F",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`temp_view_test`.`v7_temp`",
    "tempObj" : "VIEW",
    "tempObjName" : "`temp_table`"
  }
}


-- !query
CREATE VIEW v8_temp AS SELECT * FROM base_table WHERE EXISTS (SELECT 1 FROM temp_table)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "sqlState" : "42K0F",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`temp_view_test`.`v8_temp`",
    "tempObj" : "VIEW",
    "tempObjName" : "`temp_table`"
  }
}


-- !query
CREATE VIEW v9_temp AS SELECT * FROM base_table WHERE NOT EXISTS (SELECT 1 FROM temp_table)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "sqlState" : "42K0F",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`temp_view_test`.`v9_temp`",
    "tempObj" : "VIEW",
    "tempObjName" : "`temp_table`"
  }
}


-- !query
CREATE VIEW v10_temp AS SELECT * FROM v7_temp
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`v7_temp`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 39,
    "stopIndex" : 45,
    "fragment" : "v7_temp"
  } ]
}


-- !query
CREATE VIEW v11_temp AS SELECT t1.id, t2.a FROM base_table t1, v10_temp t2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`v10_temp`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 64,
    "stopIndex" : 71,
    "fragment" : "v10_temp"
  } ]
}


-- !query
CREATE VIEW v12_temp AS SELECT true FROM v11_temp
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`v11_temp`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 42,
    "stopIndex" : 49,
    "fragment" : "v11_temp"
  } ]
}


-- !query
CREATE SCHEMA testviewschm2
-- !query schema
struct<>
-- !query output



-- !query
USE testviewschm2
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t1 (num int, name string) using parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t2 (num2 int, value string) using parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TEMP VIEW tt AS SELECT * FROM VALUES
  (1, 'a') AS tt(num2, value)
-- !query schema
struct<>
-- !query output



-- !query
CREATE VIEW nontemp1 AS SELECT * FROM t1 CROSS JOIN t2
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED nontemp1
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
num                 	int                 	                    
name                	string              	                    
num2                	int                 	                    
value               	string              	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	testviewschm2       	                    
Table               	nontemp1            	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM t1 CROSS JOIN t2	                    
View Original Text  	SELECT * FROM t1 CROSS JOIN t2	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.testviewschm2	                    
View Query Output Columns	[num, name, num2, value]


-- !query
CREATE VIEW temporal1 AS SELECT * FROM t1 CROSS JOIN tt
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "sqlState" : "42K0F",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`testviewschm2`.`temporal1`",
    "tempObj" : "VIEW",
    "tempObjName" : "`tt`"
  }
}


-- !query
CREATE VIEW nontemp2 AS SELECT * FROM t1 INNER JOIN t2 ON t1.num = t2.num2
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED nontemp2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
num                 	int                 	                    
name                	string              	                    
num2                	int                 	                    
value               	string              	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	testviewschm2       	                    
Table               	nontemp2            	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM t1 INNER JOIN t2 ON t1.num = t2.num2	                    
View Original Text  	SELECT * FROM t1 INNER JOIN t2 ON t1.num = t2.num2	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.testviewschm2	                    
View Query Output Columns	[num, name, num2, value]


-- !query
CREATE VIEW temporal2 AS SELECT * FROM t1 INNER JOIN tt ON t1.num = tt.num2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "sqlState" : "42K0F",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`testviewschm2`.`temporal2`",
    "tempObj" : "VIEW",
    "tempObjName" : "`tt`"
  }
}


-- !query
CREATE VIEW nontemp3 AS SELECT * FROM t1 LEFT JOIN t2 ON t1.num = t2.num2
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED nontemp3
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
num                 	int                 	                    
name                	string              	                    
num2                	int                 	                    
value               	string              	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	testviewschm2       	                    
Table               	nontemp3            	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM t1 LEFT JOIN t2 ON t1.num = t2.num2	                    
View Original Text  	SELECT * FROM t1 LEFT JOIN t2 ON t1.num = t2.num2	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.testviewschm2	                    
View Query Output Columns	[num, name, num2, value]


-- !query
CREATE VIEW temporal3 AS SELECT * FROM t1 LEFT JOIN tt ON t1.num = tt.num2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "sqlState" : "42K0F",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`testviewschm2`.`temporal3`",
    "tempObj" : "VIEW",
    "tempObjName" : "`tt`"
  }
}


-- !query
CREATE VIEW nontemp4 AS SELECT * FROM t1 LEFT JOIN t2 ON t1.num = t2.num2 AND t2.value = 'xxx'
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED nontemp4
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
num                 	int                 	                    
name                	string              	                    
num2                	int                 	                    
value               	string              	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	testviewschm2       	                    
Table               	nontemp4            	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM t1 LEFT JOIN t2 ON t1.num = t2.num2 AND t2.value = 'xxx'	                    
View Original Text  	SELECT * FROM t1 LEFT JOIN t2 ON t1.num = t2.num2 AND t2.value = 'xxx'	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.testviewschm2	                    
View Query Output Columns	[num, name, num2, value]


-- !query
CREATE VIEW temporal4 AS SELECT * FROM t1 LEFT JOIN tt ON t1.num = tt.num2 AND tt.value = 'xxx'
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "sqlState" : "42K0F",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`testviewschm2`.`temporal4`",
    "tempObj" : "VIEW",
    "tempObjName" : "`tt`"
  }
}


-- !query
CREATE VIEW temporal5 AS SELECT * FROM t1 WHERE num IN (SELECT num FROM t1 WHERE EXISTS (SELECT 1 FROM tt))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "sqlState" : "42K0F",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`testviewschm2`.`temporal5`",
    "tempObj" : "VIEW",
    "tempObjName" : "`tt`"
  }
}


-- !query
CREATE TABLE tbl1 ( a int, b int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE tbl2 (c int, d int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE tbl3 (e int, f int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE tbl4 (g int, h int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE tmptbl (i int, j int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO tmptbl VALUES (1, 1)
-- !query schema
struct<>
-- !query output



-- !query
CREATE   VIEW  pubview AS SELECT * FROM tbl1 WHERE tbl1.a
BETWEEN (SELECT d FROM tbl2 WHERE c = 1) AND (SELECT e FROM tbl3 WHERE f = 2)
AND EXISTS (SELECT g FROM tbl4 LEFT JOIN tbl3 ON tbl4.h = tbl3.f)
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED pubview
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
b                   	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	testviewschm2       	                    
Table               	pubview             	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM tbl1 WHERE tbl1.a
BETWEEN (SELECT d FROM tbl2 WHERE c = 1) AND (SELECT e FROM tbl3 WHERE f = 2)
AND EXISTS (SELECT g FROM tbl4 LEFT JOIN tbl3 ON tbl4.h = tbl3.f)	                    
View Original Text  	SELECT * FROM tbl1 WHERE tbl1.a
BETWEEN (SELECT d FROM tbl2 WHERE c = 1) AND (SELECT e FROM tbl3 WHERE f = 2)
AND EXISTS (SELECT g FROM tbl4 LEFT JOIN tbl3 ON tbl4.h = tbl3.f)	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.testviewschm2	                    
View Query Output Columns	[a, b]


-- !query
CREATE   VIEW  mytempview AS SELECT * FROM tbl1 WHERE tbl1.a
BETWEEN (SELECT d FROM tbl2 WHERE c = 1) AND (SELECT e FROM tbl3 WHERE f = 2)
AND EXISTS (SELECT g FROM tbl4 LEFT JOIN tbl3 ON tbl4.h = tbl3.f)
AND NOT EXISTS (SELECT g FROM tbl4 LEFT JOIN tmptbl ON tbl4.h = tmptbl.j)
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE EXTENDED mytempview
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
b                   	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	testviewschm2       	                    
Table               	mytempview          	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM tbl1 WHERE tbl1.a
BETWEEN (SELECT d FROM tbl2 WHERE c = 1) AND (SELECT e FROM tbl3 WHERE f = 2)
AND EXISTS (SELECT g FROM tbl4 LEFT JOIN tbl3 ON tbl4.h = tbl3.f)
AND NOT EXISTS (SELECT g FROM tbl4 LEFT JOIN tmptbl ON tbl4.h = tmptbl.j)	                    
View Original Text  	SELECT * FROM tbl1 WHERE tbl1.a
BETWEEN (SELECT d FROM tbl2 WHERE c = 1) AND (SELECT e FROM tbl3 WHERE f = 2)
AND EXISTS (SELECT g FROM tbl4 LEFT JOIN tbl3 ON tbl4.h = tbl3.f)
AND NOT EXISTS (SELECT g FROM tbl4 LEFT JOIN tmptbl ON tbl4.h = tmptbl.j)	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.testviewschm2	                    
View Query Output Columns	[a, b]


-- !query
CREATE VIEW tt1 AS
  SELECT * FROM (
    VALUES
       ('abc', '0123456789', 42, 'abcd'),
       ('0123456789', 'abc', 42.12, 'abc')
  ) vv(a,b,c,d)
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM tt1
-- !query schema
struct<a:string,b:string,c:decimal(12,2),d:string>
-- !query output
0123456789	abc	42.12	abc
abc	0123456789	42.00	abcd


-- !query
SELECT string(a) FROM tt1
-- !query schema
struct<a:string>
-- !query output
0123456789
abc


-- !query
DROP VIEW tt1
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE tt1 (f1 int, f2 int, f3 string) using parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE tx1 (x1 int, x2 int, x3 string) using parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE temp_view_test.tt1 (y1 int, f2 int, f3 string) using parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE VIEW aliased_view_1 AS
  select * from tt1
    where exists (select 1 from tx1 where tt1.f1 = tx1.x1)
-- !query schema
struct<>
-- !query output



-- !query
CREATE VIEW aliased_view_2 AS
  select * from tt1 a1
    where exists (select 1 from tx1 where a1.f1 = tx1.x1)
-- !query schema
struct<>
-- !query output



-- !query
CREATE VIEW aliased_view_3 AS
  select * from tt1
    where exists (select 1 from tx1 a2 where tt1.f1 = a2.x1)
-- !query schema
struct<>
-- !query output



-- !query
CREATE VIEW aliased_view_4 AS
  select * from temp_view_test.tt1
    where exists (select 1 from tt1 where temp_view_test.tt1.y1 = tt1.f1)
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE aliased_view_1
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
f1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
DESC TABLE aliased_view_2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
f1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
DESC TABLE aliased_view_3
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
f1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
DESC TABLE aliased_view_4
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
y1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
ALTER TABLE tx1 RENAME TO a1
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE aliased_view_1
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
f1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
DESC TABLE aliased_view_2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
f1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
DESC TABLE aliased_view_3
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
f1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
DESC TABLE aliased_view_4
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
y1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
ALTER TABLE tt1 RENAME TO a2
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE aliased_view_1
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
f1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
DESC TABLE aliased_view_2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
f1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
DESC TABLE aliased_view_3
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
f1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
DESC TABLE aliased_view_4
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
y1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
ALTER TABLE a1 RENAME TO tt1
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE aliased_view_1
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
f1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
DESC TABLE aliased_view_2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
f1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
DESC TABLE aliased_view_3
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
f1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
DESC TABLE aliased_view_4
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
y1                  	int                 	                    
f2                  	int                 	                    
f3                  	string


-- !query
ALTER TABLE a2 RENAME TO tx1
-- !query schema
struct<>
-- !query output



-- !query
create view view_of_joins as
select * from
  (select * from (tbl1 cross join tbl2) same) ss,
  (tbl3 cross join tbl4) same
-- !query schema
struct<>
-- !query output



-- !query
create table tt2 (a int, b int, c int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create table tt3 (ax bigint, b short, c decimal) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create table tt4 (ay int, b int, q int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create view v1 as select * from tt2 natural join tt3
-- !query schema
struct<>
-- !query output



-- !query
create view v1a as select * from (tt2 natural join tt3) j
-- !query schema
struct<>
-- !query output



-- !query
create view v2 as select * from tt2 join tt3 using (b,c) join tt4 using (b)
-- !query schema
struct<>
-- !query output



-- !query
create view v2a as select * from (tt2 join tt3 using (b,c) join tt4 using (b)) j
-- !query schema
struct<>
-- !query output



-- !query
create view v3 as select * from tt2 join tt3 using (b,c) full join tt4 using (b)
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE v1
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint


-- !query
DESC TABLE v1a
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint


-- !query
DESC TABLE v2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint              	                    
ay                  	int                 	                    
q                   	int


-- !query
DESC TABLE v2a
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint              	                    
ay                  	int                 	                    
q                   	int


-- !query
DESC TABLE v3
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint              	                    
ay                  	int                 	                    
q                   	int


-- !query
alter table tt2 add column d int
-- !query schema
struct<>
-- !query output



-- !query
alter table tt2 add column e int
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE v1
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint


-- !query
DESC TABLE v1a
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint


-- !query
DESC TABLE v2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint              	                    
ay                  	int                 	                    
q                   	int


-- !query
DESC TABLE v2a
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint              	                    
ay                  	int                 	                    
q                   	int


-- !query
DESC TABLE v3
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint              	                    
ay                  	int                 	                    
q                   	int


-- !query
drop table tt3
-- !query schema
struct<>
-- !query output



-- !query
create table tt3 (ax bigint, b short, d decimal) using parquet
-- !query schema
struct<>
-- !query output



-- !query
alter table tt3 add column c int
-- !query schema
struct<>
-- !query output



-- !query
alter table tt3 add column e int
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE v1
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint


-- !query
DESC TABLE v1a
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint


-- !query
DESC TABLE v2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint              	                    
ay                  	int                 	                    
q                   	int


-- !query
DESC TABLE v2a
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint              	                    
ay                  	int                 	                    
q                   	int


-- !query
DESC TABLE v3
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
b                   	int                 	                    
c                   	int                 	                    
a                   	int                 	                    
ax                  	bigint              	                    
ay                  	int                 	                    
q                   	int


-- !query
create table tt5 (a int, b int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create table tt6 (c int, d int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create view vv1 as select * from (tt5 cross join tt6) j(aa,bb,cc,dd)
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE vv1
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
aa                  	int                 	                    
bb                  	int                 	                    
cc                  	int                 	                    
dd                  	int


-- !query
alter table tt5 add column c int
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE vv1
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
aa                  	int                 	                    
bb                  	int                 	                    
cc                  	int                 	                    
dd                  	int


-- !query
alter table tt5 add column cc int
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE vv1
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
aa                  	int                 	                    
bb                  	int                 	                    
cc                  	int                 	                    
dd                  	int


-- !query
create table tt7 (x int, /* xx int, */ y int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create table tt8 (x int, z int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create view vv2 as
select * from (values(1,2,3,4,5)) v(a,b,c,d,e)
union all
select * from tt7 full join tt8 using (x), tt8 tt8x
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE vv2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
b                   	int                 	                    
c                   	int                 	                    
d                   	int                 	                    
e                   	int


-- !query
create view vv3 as
select * from (values(1,2,3,4,5,6)) v(a,b,c,x,e,f)
union all
select * from
  tt7 full join tt8 using (x),
  tt7 tt7x full join tt8 tt8x using (x)
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE vv3
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
b                   	int                 	                    
c                   	int                 	                    
x                   	int                 	                    
e                   	int                 	                    
f                   	int


-- !query
create view vv4 as
select * from (values(1,2,3,4,5,6,7)) v(a,b,c,x,e,f,g)
union all
select * from
  tt7 full join tt8 using (x),
  tt7 tt7x full join tt8 tt8x using (x) full join tt8 tt8y using (x)
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE vv4
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
b                   	int                 	                    
c                   	int                 	                    
x                   	int                 	                    
e                   	int                 	                    
f                   	int                 	                    
g                   	int


-- !query
alter table tt7 add column zz int
-- !query schema
struct<>
-- !query output



-- !query
alter table tt7 add column z int
-- !query schema
struct<>
-- !query output



-- !query
alter table tt8 add column z2 int
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE vv2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
b                   	int                 	                    
c                   	int                 	                    
d                   	int                 	                    
e                   	int


-- !query
DESC TABLE vv3
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
b                   	int                 	                    
c                   	int                 	                    
x                   	int                 	                    
e                   	int                 	                    
f                   	int


-- !query
DESC TABLE vv4
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
b                   	int                 	                    
c                   	int                 	                    
x                   	int                 	                    
e                   	int                 	                    
f                   	int                 	                    
g                   	int


-- !query
create table tt7a (x date, /* xx int, */ y int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create table tt8a (x timestamp, z int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create view vv2a as
select * from (values(now(),2,3,now(),5)) v(a,b,c,d,e)
union all
select * from tt7a left join tt8a using (x), tt8a tt8ax
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE vv4
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	int                 	                    
b                   	int                 	                    
c                   	int                 	                    
x                   	int                 	                    
e                   	int                 	                    
f                   	int                 	                    
g                   	int


-- !query
DESC TABLE vv2a
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
a                   	timestamp           	                    
b                   	int                 	                    
c                   	int                 	                    
d                   	timestamp           	                    
e                   	int


-- !query
create table tt9 (x int, xx int, y int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create table tt10 (x int, z int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create view vv5 as select x,y,z from tt9 join tt10 using(x)
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE vv5
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
x                   	int                 	                    
y                   	int                 	                    
z                   	int


-- !query
DESC TABLE vv5
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
x                   	int                 	                    
y                   	int                 	                    
z                   	int


-- !query
create table tt11 (x int, y int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create table tt12 (x int, z int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create table tt13 (z int, q int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
create view vv6 as select x,y,z,q from
  (tt11 join tt12 using(x)) join tt13 using(z)
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE vv6
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
x                   	int                 	                    
y                   	int                 	                    
z                   	int                 	                    
q                   	int


-- !query
alter table tt11 add column z int
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE vv6
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
x                   	int                 	                    
y                   	int                 	                    
z                   	int                 	                    
q                   	int


-- !query
CREATE TABLE int8_tbl (q1 int, q2 int) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
create view tt18v as
  select * from int8_tbl xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxy
  union all
  select * from int8_tbl xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxz
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE tt18v
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
q1                  	int                 	                    
q2                  	int


-- !query
create view tt21v as
select * from tt5 natural inner join tt6
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE tt21v
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
c                   	int                 	                    
a                   	int                 	                    
b                   	int                 	                    
cc                  	int                 	                    
d                   	int


-- !query
create view tt22v as
select * from tt5 natural left join tt6
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE tt22v
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
c                   	int                 	                    
a                   	int                 	                    
b                   	int                 	                    
cc                  	int                 	                    
d                   	int


-- !query
create view tt23v (col_a, col_b) as
select q1 as other_name1, q2 as other_name2 from int8_tbl
union
select 42, 43
-- !query schema
struct<>
-- !query output



-- !query
DESC TABLE tt23v
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
col_a               	int                 	                    
col_b               	int


-- !query
DROP SCHEMA temp_view_test CASCADE
-- !query schema
struct<>
-- !query output



-- !query
DROP SCHEMA testviewschm2 CASCADE
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW temp_table
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW tt
-- !query schema
struct<>
-- !query output

