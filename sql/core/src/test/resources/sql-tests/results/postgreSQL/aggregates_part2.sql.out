-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view int4_tbl as select * from values
  (0),
  (123456),
  (-123456),
  (2147483647),
  (-2147483647)
  as int4_tbl(f1)
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE TEMPORARY VIEW bitwise_test AS SELECT * FROM VALUES
  (1, 1, 1, 1L),
  (3, 3, 3, null),
  (7, 7, 7, 3L) AS bitwise_test(b1, b2, b3, b4)
-- !query schema
struct<>
-- !query output



-- !query
SELECT BIT_AND(b1) AS n1, BIT_OR(b2)  AS n2 FROM bitwise_test where 1 = 0
-- !query schema
struct<n1:int,n2:int>
-- !query output
NULL	NULL


-- !query
SELECT BIT_AND(b4) AS n1, BIT_OR(b4)  AS n2 FROM bitwise_test where b4 is null
-- !query schema
struct<n1:bigint,n2:bigint>
-- !query output
NULL	NULL


-- !query
SELECT
 BIT_AND(cast(b1 as tinyint)) AS a1,
 BIT_AND(cast(b2 as smallint)) AS b1,
 BIT_AND(b3) AS c1,
 BIT_AND(b4) AS d1,
 BIT_OR(cast(b1 as tinyint))  AS e7,
 BIT_OR(cast(b2 as smallint))  AS f7,
 BIT_OR(b3)  AS g7,
 BIT_OR(b4)  AS h3
FROM bitwise_test
-- !query schema
struct<a1:tinyint,b1:smallint,c1:int,d1:bigint,e7:tinyint,f7:smallint,g7:int,h3:bigint>
-- !query output
1	1	1	1	7	7	7	3


-- !query
SELECT b1 , bit_and(b2), bit_or(b4) FROM bitwise_test GROUP BY b1
-- !query schema
struct<b1:int,bit_and(b2):int,bit_or(b4):bigint>
-- !query output
1	1	1
3	3	NULL
7	7	3


-- !query
SELECT b1, bit_and(b2) FROM bitwise_test GROUP BY b1 HAVING bit_and(b2) < 7
-- !query schema
struct<b1:int,bit_and(b2):int>
-- !query output
1	1
3	3


-- !query
SELECT b1, b2, bit_and(b2) OVER (PARTITION BY b1 ORDER BY b2) FROM bitwise_test
-- !query schema
struct<b1:int,b2:int,bit_and(b2) OVER (PARTITION BY b1 ORDER BY b2 ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>
-- !query output
1	1	1
3	3	3
7	7	7


-- !query
SELECT b1, b2, bit_or(b2) OVER (PARTITION BY b1 ORDER BY b2) FROM bitwise_test
-- !query schema
struct<b1:int,b2:int,bit_or(b2) OVER (PARTITION BY b1 ORDER BY b2 ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>
-- !query output
1	1	1
3	3	3
7	7	7


-- !query
SELECT
  (NULL AND NULL) IS NULL AS `t`,
  (TRUE AND NULL) IS NULL AS `t`,
  (FALSE AND NULL) IS NULL AS `t`,
  (NULL AND TRUE) IS NULL AS `t`,
  (NULL AND FALSE) IS NULL AS `t`,
  (TRUE AND TRUE) AS `t`,
  NOT (TRUE AND FALSE) AS `t`,
  NOT (FALSE AND TRUE) AS `t`,
  NOT (FALSE AND FALSE) AS `t`
-- !query schema
struct<t:boolean,t:boolean,t:boolean,t:boolean,t:boolean,t:boolean,t:boolean,t:boolean,t:boolean>
-- !query output
true	true	false	true	false	true	true	true	true


-- !query
SELECT
  (NULL OR NULL) IS NULL AS `t`,
  (TRUE OR NULL) IS NULL AS `t`,
  (FALSE OR NULL) IS NULL AS `t`,
  (NULL OR TRUE) IS NULL AS `t`,
  (NULL OR FALSE) IS NULL AS `t`,
  (TRUE OR TRUE) AS `t`,
  (TRUE OR FALSE) AS `t`,
  (FALSE OR TRUE) AS `t`,
  NOT (FALSE OR FALSE) AS `t`
-- !query schema
struct<t:boolean,t:boolean,t:boolean,t:boolean,t:boolean,t:boolean,t:boolean,t:boolean,t:boolean>
-- !query output
true	false	true	false	true	true	true	true	true


-- !query
CREATE OR REPLACE TEMPORARY VIEW bool_test AS SELECT * FROM VALUES
  (TRUE, null, FALSE, null),
  (FALSE, TRUE, null, null),
  (null, TRUE, FALSE, null) AS bool_test(b1, b2, b3, b4)
-- !query schema
struct<>
-- !query output



-- !query
SELECT BOOL_AND(b1) AS n1, BOOL_OR(b3) AS n2 FROM bool_test WHERE 1 = 0
-- !query schema
struct<n1:boolean,n2:boolean>
-- !query output
NULL	NULL


-- !query
SELECT
  BOOL_AND(b1)     AS f1,
  BOOL_AND(b2)     AS t2,
  BOOL_AND(b3)     AS f3,
  BOOL_AND(b4)     AS n4,
  BOOL_AND(NOT b2) AS f5,
  BOOL_AND(NOT b3) AS t6
FROM bool_test
-- !query schema
struct<f1:boolean,t2:boolean,f3:boolean,n4:boolean,f5:boolean,t6:boolean>
-- !query output
false	true	false	NULL	false	true


-- !query
SELECT
  EVERY(b1)     AS f1,
  EVERY(b2)     AS t2,
  EVERY(b3)     AS f3,
  EVERY(b4)     AS n4,
  EVERY(NOT b2) AS f5,
  EVERY(NOT b3) AS t6
FROM bool_test
-- !query schema
struct<f1:boolean,t2:boolean,f3:boolean,n4:boolean,f5:boolean,t6:boolean>
-- !query output
false	true	false	NULL	false	true


-- !query
SELECT
  BOOL_OR(b1)      AS t1,
  BOOL_OR(b2)      AS t2,
  BOOL_OR(b3)      AS f3,
  BOOL_OR(b4)      AS n4,
  BOOL_OR(NOT b2)  AS f5,
  BOOL_OR(NOT b3)  AS t6
FROM bool_test
-- !query schema
struct<t1:boolean,t2:boolean,f3:boolean,n4:boolean,f5:boolean,t6:boolean>
-- !query output
true	true	false	NULL	false	true


-- !query
select min(unique1) from tenk1
-- !query schema
struct<min(unique1):int>
-- !query output
0


-- !query
select max(unique1) from tenk1
-- !query schema
struct<max(unique1):int>
-- !query output
9999


-- !query
select max(unique1) from tenk1 where unique1 < 42
-- !query schema
struct<max(unique1):int>
-- !query output
41


-- !query
select max(unique1) from tenk1 where unique1 > 42
-- !query schema
struct<max(unique1):int>
-- !query output
9999


-- !query
select max(unique1) from tenk1 where unique1 > 42000
-- !query schema
struct<max(unique1):int>
-- !query output
NULL


-- !query
select max(tenthous) from tenk1 where thousand = 33
-- !query schema
struct<max(tenthous):int>
-- !query output
9033


-- !query
select min(tenthous) from tenk1 where thousand = 33
-- !query schema
struct<min(tenthous):int>
-- !query output
33


-- !query
select distinct max(unique2) from tenk1
-- !query schema
struct<max(unique2):int>
-- !query output
9999


-- !query
select max(unique2) from tenk1 order by 1
-- !query schema
struct<max(unique2):int>
-- !query output
9999


-- !query
select max(unique2) from tenk1 order by max(unique2)
-- !query schema
struct<max(unique2):int>
-- !query output
9999


-- !query
select max(unique2) from tenk1 order by max(unique2)+1
-- !query schema
struct<max(unique2):int>
-- !query output
9999


-- !query
select t1.max_unique2, g from (select max(unique2) as max_unique2 FROM tenk1) t1 LATERAL VIEW explode(array(1,2,3)) t2 AS g order by g desc
-- !query schema
struct<max_unique2:int,g:int>
-- !query output
9999	3
9999	2
9999	1


-- !query
select max(100) from tenk1
-- !query schema
struct<max(100):int>
-- !query output
100
