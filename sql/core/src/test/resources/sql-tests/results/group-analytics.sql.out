-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW testData AS SELECT * FROM VALUES
(1, 1), (1, 2), (2, 1), (2, 2), (3, 1), (3, 2)
AS testData(a, b)
-- !query schema
struct<>
-- !query output



-- !query
SELECT a + b, b, SUM(a - b) FROM testData GROUP BY a + b, b WITH CUBE
-- !query schema
struct<(a + b):int,b:int,sum((a - b)):bigint>
-- !query output
2	1	0
2	NULL	0
3	1	1
3	2	-1
3	NULL	0
4	1	2
4	2	0
4	NULL	2
5	2	1
5	NULL	1
NULL	1	3
NULL	2	0
NULL	NULL	3


-- !query
SELECT a, b, SUM(b) FROM testData GROUP BY a, b WITH CUBE
-- !query schema
struct<a:int,b:int,sum(b):bigint>
-- !query output
1	1	1
1	2	2
1	NULL	3
2	1	1
2	2	2
2	NULL	3
3	1	1
3	2	2
3	NULL	3
NULL	1	3
NULL	2	6
NULL	NULL	9


-- !query
SELECT a + b, b, SUM(a - b) FROM testData GROUP BY a + b, b WITH ROLLUP
-- !query schema
struct<(a + b):int,b:int,sum((a - b)):bigint>
-- !query output
2	1	0
2	NULL	0
3	1	1
3	2	-1
3	NULL	0
4	1	2
4	2	0
4	NULL	2
5	2	1
5	NULL	1
NULL	NULL	3


-- !query
SELECT a, b, SUM(b) FROM testData GROUP BY a, b WITH ROLLUP
-- !query schema
struct<a:int,b:int,sum(b):bigint>
-- !query output
1	1	1
1	2	2
1	NULL	3
2	1	1
2	2	2
2	NULL	3
3	1	1
3	2	2
3	NULL	3
NULL	NULL	9


-- !query
CREATE OR REPLACE TEMPORARY VIEW courseSales AS SELECT * FROM VALUES
("dotNET", 2012, 10000), ("Java", 2012, 20000), ("dotNET", 2012, 5000), ("dotNET", 2013, 48000), ("Java", 2013, 30000)
AS courseSales(course, year, earnings)
-- !query schema
struct<>
-- !query output



-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY ROLLUP(course, year) ORDER BY course, year
-- !query schema
struct<course:string,year:int,sum(earnings):bigint>
-- !query output
NULL	NULL	113000
Java	NULL	50000
Java	2012	20000
Java	2013	30000
dotNET	NULL	63000
dotNET	2012	15000
dotNET	2013	48000


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY ROLLUP(course, year, (course, year)) ORDER BY course, year
-- !query schema
struct<course:string,year:int,sum(earnings):bigint>
-- !query output
NULL	NULL	113000
Java	NULL	50000
Java	2012	20000
Java	2012	20000
Java	2013	30000
Java	2013	30000
dotNET	NULL	63000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2013	48000
dotNET	2013	48000


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY ROLLUP(course, year, (course, year), ()) ORDER BY course, year
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_0051",
  "messageParameters" : {
    "element" : "ROLLUP"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 53,
    "stopIndex" : 101,
    "fragment" : "GROUP BY ROLLUP(course, year, (course, year), ())"
  } ]
}


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY CUBE(course, year) ORDER BY course, year
-- !query schema
struct<course:string,year:int,sum(earnings):bigint>
-- !query output
NULL	NULL	113000
NULL	2012	35000
NULL	2013	78000
Java	NULL	50000
Java	2012	20000
Java	2013	30000
dotNET	NULL	63000
dotNET	2012	15000
dotNET	2013	48000


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY CUBE(course, year, (course, year)) ORDER BY course, year
-- !query schema
struct<course:string,year:int,sum(earnings):bigint>
-- !query output
NULL	NULL	113000
NULL	2012	35000
NULL	2013	78000
Java	NULL	50000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
dotNET	NULL	63000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY CUBE(course, year, (course, year), ()) ORDER BY course, year
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_0051",
  "messageParameters" : {
    "element" : "CUBE"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 53,
    "stopIndex" : 99,
    "fragment" : "GROUP BY CUBE(course, year, (course, year), ())"
  } ]
}


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY course, year GROUPING SETS(course, year)
-- !query schema
struct<course:string,year:int,sum(earnings):bigint>
-- !query output
Java	NULL	50000
NULL	2012	35000
NULL	2013	78000
dotNET	NULL	63000


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY course, year GROUPING SETS(course, year, ())
-- !query schema
struct<course:string,year:int,sum(earnings):bigint>
-- !query output
Java	NULL	50000
NULL	2012	35000
NULL	2013	78000
NULL	NULL	113000
dotNET	NULL	63000


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY course, year GROUPING SETS(course)
-- !query schema
struct<course:string,year:int,sum(earnings):bigint>
-- !query output
Java	NULL	50000
dotNET	NULL	63000


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY course, year GROUPING SETS(year)
-- !query schema
struct<course:string,year:int,sum(earnings):bigint>
-- !query output
NULL	2012	35000
NULL	2013	78000


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY course, CUBE(course, year) ORDER BY course, year
-- !query schema
struct<course:string,year:int,sum(earnings):bigint>
-- !query output
Java	NULL	50000
Java	NULL	50000
Java	2012	20000
Java	2012	20000
Java	2013	30000
Java	2013	30000
dotNET	NULL	63000
dotNET	NULL	63000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2013	48000
dotNET	2013	48000


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY CUBE(course, year), ROLLUP(course, year) ORDER BY course, year
-- !query schema
struct<course:string,year:int,sum(earnings):bigint>
-- !query output
NULL	NULL	113000
NULL	2012	35000
NULL	2013	78000
Java	NULL	50000
Java	NULL	50000
Java	NULL	50000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
dotNET	NULL	63000
dotNET	NULL	63000
dotNET	NULL	63000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000


-- !query
SELECT course, year, SUM(earnings) FROM courseSales GROUP BY CUBE(course, year), ROLLUP(course, year), GROUPING SETS(course, year) ORDER BY course, year
-- !query schema
struct<course:string,year:int,sum(earnings):bigint>
-- !query output
NULL	2012	35000
NULL	2012	35000
NULL	2013	78000
NULL	2013	78000
Java	NULL	50000
Java	NULL	50000
Java	NULL	50000
Java	NULL	50000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2012	20000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
Java	2013	30000
dotNET	NULL	63000
dotNET	NULL	63000
dotNET	NULL	63000
dotNET	NULL	63000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2012	15000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000
dotNET	2013	48000


-- !query
SELECT course, SUM(earnings) AS sum FROM courseSales
GROUP BY course, earnings GROUPING SETS((), (course), (course, earnings)) ORDER BY course, sum
-- !query schema
struct<course:string,sum:bigint>
-- !query output
NULL	113000
Java	20000
Java	30000
Java	50000
dotNET	5000
dotNET	10000
dotNET	48000
dotNET	63000


-- !query
SELECT course, SUM(earnings) AS sum, GROUPING_ID(course, earnings) FROM courseSales
GROUP BY course, earnings GROUPING SETS((), (course), (course, earnings)) ORDER BY course, sum
-- !query schema
struct<course:string,sum:bigint,grouping_id(course, earnings):bigint>
-- !query output
NULL	113000	3
Java	20000	0
Java	30000	0
Java	50000	1
dotNET	5000	0
dotNET	10000	0
dotNET	48000	0
dotNET	63000	1


-- !query
SELECT course, year, GROUPING(course), GROUPING(year), GROUPING_ID(course, year) FROM courseSales
GROUP BY CUBE(course, year)
-- !query schema
struct<course:string,year:int,grouping(course):tinyint,grouping(year):tinyint,grouping_id(course, year):bigint>
-- !query output
Java	2012	0	0	0
Java	2013	0	0	0
Java	NULL	0	1	1
NULL	2012	1	0	2
NULL	2013	1	0	2
NULL	NULL	1	1	3
dotNET	2012	0	0	0
dotNET	2013	0	0	0
dotNET	NULL	0	1	1


-- !query
SELECT course, year, GROUPING(course) FROM courseSales GROUP BY course, year
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNSUPPORTED_GROUPING_EXPRESSION",
  "sqlState" : "42K0E",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 22,
    "stopIndex" : 37,
    "fragment" : "GROUPING(course)"
  } ]
}


-- !query
SELECT course, year, GROUPING_ID(course, year) FROM courseSales GROUP BY course, year
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNSUPPORTED_GROUPING_EXPRESSION",
  "sqlState" : "42K0E",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 22,
    "stopIndex" : 46,
    "fragment" : "GROUPING_ID(course, year)"
  } ]
}


-- !query
SELECT course, year, grouping__id FROM courseSales GROUP BY CUBE(course, year) ORDER BY grouping__id, course, year
-- !query schema
struct<course:string,year:int,grouping__id:bigint>
-- !query output
Java	2012	0
Java	2013	0
dotNET	2012	0
dotNET	2013	0
Java	NULL	1
dotNET	NULL	1
NULL	2012	2
NULL	2013	2
NULL	NULL	3


-- !query
SELECT course, year FROM courseSales GROUP BY CUBE(course, year)
HAVING GROUPING(year) = 1 AND GROUPING_ID(course, year) > 0 ORDER BY course, year
-- !query schema
struct<course:string,year:int>
-- !query output
NULL	NULL
Java	NULL
dotNET	NULL


-- !query
SELECT course, year FROM courseSales GROUP BY course, year HAVING GROUPING(course) > 0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_GROUPING_EXPRESSION",
  "sqlState" : "42K0E"
}


-- !query
SELECT course, year FROM courseSales GROUP BY course, year HAVING GROUPING_ID(course) > 0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_GROUPING_EXPRESSION",
  "sqlState" : "42K0E"
}


-- !query
SELECT course, year FROM courseSales GROUP BY CUBE(course, year) HAVING grouping__id > 0
-- !query schema
struct<course:string,year:int>
-- !query output
Java	NULL
NULL	2012
NULL	2013
NULL	NULL
dotNET	NULL


-- !query
SELECT course, year, GROUPING(course), GROUPING(year) FROM courseSales GROUP BY CUBE(course, year)
ORDER BY GROUPING(course), GROUPING(year), course, year
-- !query schema
struct<course:string,year:int,grouping(course):tinyint,grouping(year):tinyint>
-- !query output
Java	2012	0	0
Java	2013	0	0
dotNET	2012	0	0
dotNET	2013	0	0
Java	NULL	0	1
dotNET	NULL	0	1
NULL	2012	1	0
NULL	2013	1	0
NULL	NULL	1	1


-- !query
SELECT course, year, GROUPING_ID(course, year) FROM courseSales GROUP BY CUBE(course, year)
ORDER BY GROUPING(course), GROUPING(year), course, year
-- !query schema
struct<course:string,year:int,grouping_id(course, year):bigint>
-- !query output
Java	2012	0
Java	2013	0
dotNET	2012	0
dotNET	2013	0
Java	NULL	1
dotNET	NULL	1
NULL	2012	2
NULL	2013	2
NULL	NULL	3


-- !query
SELECT course, year FROM courseSales GROUP BY course, year ORDER BY GROUPING(course)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_GROUPING_EXPRESSION",
  "sqlState" : "42K0E"
}


-- !query
SELECT course, year FROM courseSales GROUP BY course, year ORDER BY GROUPING_ID(course)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_GROUPING_EXPRESSION",
  "sqlState" : "42K0E"
}


-- !query
SELECT course, year FROM courseSales GROUP BY CUBE(course, year) ORDER BY grouping__id, course, year
-- !query schema
struct<course:string,year:int>
-- !query output
Java	2012
Java	2013
dotNET	2012
dotNET	2013
Java	NULL
dotNET	NULL
NULL	2012
NULL	2013
NULL	NULL


-- !query
SELECT a + b AS k1, b AS k2, SUM(a - b) FROM testData GROUP BY CUBE(k1, k2)
-- !query schema
struct<k1:int,k2:int,sum((a - b)):bigint>
-- !query output
2	1	0
2	NULL	0
3	1	1
3	2	-1
3	NULL	0
4	1	2
4	2	0
4	NULL	2
5	2	1
5	NULL	1
NULL	1	3
NULL	2	0
NULL	NULL	3


-- !query
SELECT a + b AS k, b, SUM(a - b) FROM testData GROUP BY ROLLUP(k, b)
-- !query schema
struct<k:int,b:int,sum((a - b)):bigint>
-- !query output
2	1	0
2	NULL	0
3	1	1
3	2	-1
3	NULL	0
4	1	2
4	2	0
4	NULL	2
5	2	1
5	NULL	1
NULL	NULL	3


-- !query
SELECT a + b, b AS k, SUM(a - b) FROM testData GROUP BY a + b, k GROUPING SETS(k)
-- !query schema
struct<(a + b):int,k:int,sum((a - b)):bigint>
-- !query output
NULL	1	3
NULL	2	0


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, b, CUBE(a, b)
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	2	1
2	1	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	2	1
3	1	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	2	1


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, b, ROLLUP(a, b)
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1


-- !query
SELECT a, b, count(1) FROM testData GROUP BY CUBE(a, b), ROLLUP(a, b)
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2
3	NULL	2
NULL	1	3
NULL	2	3
NULL	NULL	6


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, CUBE(a, b), ROLLUP(b)
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS((a, b), (a), ())
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	2	1
1	NULL	2
1	NULL	2
2	1	1
2	2	1
2	NULL	2
2	NULL	2
3	1	1
3	2	1
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, CUBE(a, b), GROUPING SETS((a, b), (a), ())
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, CUBE(a, b), ROLLUP(a, b), GROUPING SETS((a, b), (a), ())
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS(ROLLUP(a, b))
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	2	1
1	NULL	2
1	NULL	2
2	1	1
2	2	1
2	NULL	2
2	NULL	2
3	1	1
3	2	1
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS(GROUPING SETS((a, b), (a), ()))
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	2	1
1	NULL	2
1	NULL	2
2	1	1
2	2	1
2	NULL	2
2	NULL	2
3	1	1
3	2	1
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS((a, b), GROUPING SETS(ROLLUP(a, b)))
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	1	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS((a, b, a, b), (a, b, a), (a, b))
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS(GROUPING SETS((a, b, a, b), (a, b, a), (a, b)))
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS(ROLLUP(a, b), CUBE(a, b))
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS(GROUPING SETS((a, b), (a), ()), GROUPING SETS((a, b), (a), (b), ()))
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, count(1) FROM testData GROUP BY a, GROUPING SETS((a, b), (a), (), (a, b), (a), (b), ())
-- !query schema
struct<a:int,b:int,count(1):bigint>
-- !query output
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2
