-- Automatically generated by SQLQueryTestSuite
-- !query
SET spark.sql.ansi.enabled = true
-- !query schema
struct<key:string,value:string>
-- !query output
spark.sql.ansi.enabled	true


-- !query
DECLARE title STRING
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE title = '-- Basic sanity --'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE var1 INT = 5
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1
-- !query schema
struct<var1:int>
-- !query output
5


-- !query
SET VARIABLE var1 = 6
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1
-- !query schema
struct<var1:int>
-- !query output
6


-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE title = 'Create Variable - Success Cases'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE VARIABLE var1 INT
-- !query schema
struct<>
-- !query output



-- !query
SELECT 'Expect: INT, NULL', typeof(var1), var1
-- !query schema
struct<Expect: INT, NULL:string,typeof(variablereference(system.session.var1=CAST(NULL AS INT))):string,var1:int>
-- !query output
Expect: INT, NULL	int	NULL


-- !query
DECLARE OR REPLACE VARIABLE var1 DOUBLE
-- !query schema
struct<>
-- !query output



-- !query
SELECT 'Expect: DOUBLE, NULL', typeof(var1), var1
-- !query schema
struct<Expect: DOUBLE, NULL:string,typeof(variablereference(system.session.var1=CAST(NULL AS DOUBLE))):string,var1:double>
-- !query output
Expect: DOUBLE, NULL	double	NULL


-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var1 TIMESTAMP
-- !query schema
struct<>
-- !query output



-- !query
SELECT 'Expect: TIMESTAMP, NULL', typeof(var1), var1
-- !query schema
struct<Expect: TIMESTAMP, NULL:string,typeof(variablereference(system.session.var1=CAST(NULL AS TIMESTAMP))):string,var1:timestamp>
-- !query output
Expect: TIMESTAMP, NULL	timestamp	NULL


-- !query
SET VARIABLE title = 'Create Variable - Failure Cases'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE VARIABLE IF NOT EXISTS var1 INT
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'EXISTS'",
    "hint" : ""
  }
}


-- !query
DROP TEMPORARY VARIABLE IF EXISTS var1
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE title = 'Drop Variable'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE VAR var1 INT
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1
-- !query schema
struct<var1:int>
-- !query output
NULL


-- !query
DROP TEMPORARY VAR var1
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`var1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 11,
    "fragment" : "var1"
  } ]
}


-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "VARIABLE_NOT_FOUND",
  "sqlState" : "42883",
  "messageParameters" : {
    "variableName" : "`system`.`session`.`var1`"
  }
}


-- !query
DROP TEMPORARY VARIABLE IF EXISTS var1
-- !query schema
struct<>
-- !query output



-- !query
DECLARE VARIABLE var1 INT
-- !query schema
struct<>
-- !query output



-- !query
DROP VARIABLE var1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'VARIABLE'",
    "hint" : ""
  }
}


-- !query
DROP VARIABLE system.session.var1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'VARIABLE'",
    "hint" : ""
  }
}


-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE title = 'Test qualifiers - success'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE VARIABLE var1 INT DEFAULT 1
-- !query schema
struct<>
-- !query output



-- !query
SELECT 1 as Expected, var1 as Unqualified, session.var1 AS SchemaQualified, system.session.var1 AS fullyQualified
-- !query schema
struct<Expected:int,Unqualified:int,SchemaQualified:int,fullyQualified:int>
-- !query output
1	1	1	1


-- !query
SET VARIABLE var1 = 2
-- !query schema
struct<>
-- !query output



-- !query
SELECT 2 as Expected, var1 as Unqualified, session.var1 AS SchemaQualified, system.session.var1 AS fullyQualified
-- !query schema
struct<Expected:int,Unqualified:int,SchemaQualified:int,fullyQualified:int>
-- !query output
2	2	2	2


-- !query
DECLARE OR REPLACE VARIABLE session.var1 INT DEFAULT 1
-- !query schema
struct<>
-- !query output



-- !query
SELECT 1 as Expected, var1 as Unqualified, session.var1 AS SchemaQualified, system.session.var1 AS fullyQualified
-- !query schema
struct<Expected:int,Unqualified:int,SchemaQualified:int,fullyQualified:int>
-- !query output
1	1	1	1


-- !query
SET VARIABLE session.var1 = 2
-- !query schema
struct<>
-- !query output



-- !query
SELECT 2 as Expected, var1 as Unqualified, session.var1 AS SchemaQualified, system.session.var1 AS fullyQualified
-- !query schema
struct<Expected:int,Unqualified:int,SchemaQualified:int,fullyQualified:int>
-- !query output
2	2	2	2


-- !query
DECLARE OR REPLACE VARIABLE system.session.var1 INT DEFAULT 1
-- !query schema
struct<>
-- !query output



-- !query
SELECT 1 as Expected, var1 as Unqualified, session.var1 AS SchemaQualified, system.session.var1 AS fullyQualified
-- !query schema
struct<Expected:int,Unqualified:int,SchemaQualified:int,fullyQualified:int>
-- !query output
1	1	1	1


-- !query
SET VARIABLE system.session.var1 = 2
-- !query schema
struct<>
-- !query output



-- !query
SELECT 2 as Expected, var1 as Unqualified, session.var1 AS SchemaQualified, system.session.var1 AS fullyQualified
-- !query schema
struct<Expected:int,Unqualified:int,SchemaQualified:int,fullyQualified:int>
-- !query output
2	2	2	2


-- !query
DECLARE OR REPLACE VARIABLE sySteM.sEssIon.vAr1 INT DEFAULT 1
-- !query schema
struct<>
-- !query output



-- !query
SELECT 1 as Expected, var1 as Unqualified, sessIon.Var1 AS SchemaQualified, System.sessiOn.var1 AS fullyQualified
-- !query schema
struct<Expected:int,Unqualified:int,SchemaQualified:int,fullyQualified:int>
-- !query output
1	1	1	1


-- !query
SET VARIABLE sYstem.sesSiOn.vaR1 = 2
-- !query schema
struct<>
-- !query output



-- !query
SELECT 2 as Expected, VAR1 as Unqualified, SESSION.VAR1 AS SchemaQualified, SYSTEM.SESSION.VAR1 AS fullyQualified
-- !query schema
struct<Expected:int,Unqualified:int,SchemaQualified:int,fullyQualified:int>
-- !query output
2	2	2	2


-- !query
DECLARE OR REPLACE VARIABLE var1 INT
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "VARIABLE_NOT_FOUND",
  "sqlState" : "42883",
  "messageParameters" : {
    "variableName" : "`system`.`session`.`var1`"
  }
}


-- !query
DECLARE OR REPLACE VARIABLE var1 INT
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE session.var1
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "VARIABLE_NOT_FOUND",
  "sqlState" : "42883",
  "messageParameters" : {
    "variableName" : "`system`.`session`.`var1`"
  }
}


-- !query
DECLARE OR REPLACE VARIABLE var1 INT
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE system.session.var1
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "VARIABLE_NOT_FOUND",
  "sqlState" : "42883",
  "messageParameters" : {
    "variableName" : "`system`.`session`.`var1`"
  }
}


-- !query
DECLARE OR REPLACE VARIABLE var1 INT
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE sysTem.sesSion.vAr1
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "VARIABLE_NOT_FOUND",
  "sqlState" : "42883",
  "messageParameters" : {
    "variableName" : "`system`.`session`.`var1`"
  }
}


-- !query
SET VARIABLE title = 'Test variable in aggregate'
-- !query schema
struct<>
-- !query output



-- !query
SELECT (SELECT MAX(id) FROM RANGE(10) WHERE id < title) FROM VALUES 1, 2 AS t(title)
-- !query schema
struct<scalarsubquery(title):bigint>
-- !query output
0
1


-- !query
SET VARIABLE title = 'Test qualifiers - fail'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE builtin.var1 INT
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNRESOLVED_VARIABLE",
  "sqlState" : "42883",
  "messageParameters" : {
    "searchPath" : "`system`.`session`",
    "variableName" : "`builtin`.`var1`"
  }
}


-- !query
DECLARE OR REPLACE VARIABLE system.sesion.var1 INT
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNRESOLVED_VARIABLE",
  "sqlState" : "42883",
  "messageParameters" : {
    "searchPath" : "`system`.`session`",
    "variableName" : "`system`.`sesion`.`var1`"
  }
}


-- !query
DECLARE OR REPLACE VARIABLE sys.session.var1 INT
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNRESOLVED_VARIABLE",
  "sqlState" : "42883",
  "messageParameters" : {
    "searchPath" : "`system`.`session`",
    "variableName" : "`sys`.`session`.`var1`"
  }
}


-- !query
DECLARE OR REPLACE VARIABLE var1 INT
-- !query schema
struct<>
-- !query output



-- !query
SELECT var
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`var`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 10,
    "fragment" : "var"
  } ]
}


-- !query
SELECT ses.var1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`ses`.`var1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 15,
    "fragment" : "ses.var1"
  } ]
}


-- !query
SELECT b.sesson.var1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`b`.`sesson`.`var1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 20,
    "fragment" : "b.sesson.var1"
  } ]
}


-- !query
SELECT builtn.session.var1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`builtn`.`session`.`var1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 26,
    "fragment" : "builtn.session.var1"
  } ]
}


-- !query
SET VARIABLE ses.var1 = 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNRESOLVED_VARIABLE",
  "sqlState" : "42883",
  "messageParameters" : {
    "searchPath" : "`SYSTEM`.`SESSION`",
    "variableName" : "`ses`.`var1`"
  }
}


-- !query
SET VARIABLE builtn.session.var1 = 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNRESOLVED_VARIABLE",
  "sqlState" : "42883",
  "messageParameters" : {
    "searchPath" : "`SYSTEM`.`SESSION`",
    "variableName" : "`builtn`.`session`.`var1`"
  }
}


-- !query
SET VARIABLE title = 'Test DEFAULT on create - success'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 1
-- !query schema
struct<>
-- !query output



-- !query
SELECT 1 AS Expected, var1 AS result
-- !query schema
struct<Expected:int,result:int>
-- !query output
1	1


-- !query
DECLARE OR REPLACE VARIABLE var1 DOUBLE DEFAULT 1 + RAND(5)
-- !query schema
struct<>
-- !query output



-- !query
SELECT true AS Expected, var1 >= 1 AS result
-- !query schema
struct<Expected:boolean,result:boolean>
-- !query output
true	true


-- !query
DECLARE OR REPLACE VARIABLE var1 = 'Hello'
-- !query schema
struct<>
-- !query output



-- !query
SELECT 'STRING, Hello' AS Expected, typeof(var1) AS type, var1 AS result
-- !query schema
struct<Expected:string,type:string,result:string>
-- !query output
STRING, Hello	string	Hello


-- !query
DECLARE OR REPLACE VARIABLE var1 DEFAULT NULL
-- !query schema
struct<>
-- !query output



-- !query
SELECT 'VOID, NULL' AS Expected, typeof(var1) AS type, var1 AS result
-- !query schema
struct<Expected:string,type:string,result:void>
-- !query output
VOID, NULL	void	NULL


-- !query
DECLARE OR REPLACE VARIABLE INT DEFAULT 5.0
-- !query schema
struct<>
-- !query output



-- !query
SELECT 'INT, 5' AS Expected, typeof(var1) AS type, var1 AS result
-- !query schema
struct<Expected:string,type:string,result:void>
-- !query output
INT, 5	void	NULL


-- !query
DECLARE OR REPLACE VARIABLE var1 MAP<string, double> DEFAULT MAP('Hello', 5.1, 'World', -7.1E10)
-- !query schema
struct<>
-- !query output



-- !query
SELECT 'MAP<string, double>, [Hello -> 5.1, World -> -7E10]' AS Expected, typeof(var1) AS type, var1 AS result
-- !query schema
struct<Expected:string,type:string,result:map<string,double>>
-- !query output
MAP<string, double>, [Hello -> 5.1, World -> -7E10]	map<string,double>	{"Hello":5.1,"World":-7.1E10}


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT NULL
-- !query schema
struct<>
-- !query output



-- !query
SELECT 'NULL' AS Expected, var1 AS result
-- !query schema
struct<Expected:string,result:int>
-- !query output
NULL	NULL


-- !query
DECLARE OR REPLACE VARIABLE var1 STRING DEFAULT CURRENT_DATABASE()
-- !query schema
struct<>
-- !query output



-- !query
SELECT 'true' AS Expected, length(var1) > 0 AS result
-- !query schema
struct<Expected:string,result:boolean>
-- !query output
true	true


-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output



-- !query
DECLARE var1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "INVALID_SQL_SYNTAX.VARIABLE_TYPE_OR_DEFAULT_REQUIRED",
  "sqlState" : "42000",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 12,
    "fragment" : "DECLARE var1"
  } ]
}


-- !query
SET VARIABLE title = 'Test DEFAULT on create - failures'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT (SELECT c1 FROM VALUES(1) AS T(c1))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INVALID_DEFAULT_VALUE.SUBQUERY_EXPRESSION",
  "sqlState" : "42623",
  "messageParameters" : {
    "colName" : "`system`.`session`.`var1`",
    "defaultValue" : "(SELECT c1 FROM VALUES(1) AS T(c1))",
    "statement" : "DECLARE VARIABLE"
  }
}


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 'hello'
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkNumberFormatException
{
  "errorClass" : "CAST_INVALID_INPUT",
  "sqlState" : "22018",
  "messageParameters" : {
    "expression" : "'hello'",
    "sourceType" : "\"STRING\"",
    "targetType" : "\"INT\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 52,
    "fragment" : "DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 'hello'"
  } ]
}


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 1 / 0
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkArithmeticException
{
  "errorClass" : "DIVIDE_BY_ZERO",
  "sqlState" : "22012",
  "messageParameters" : {
    "config" : "\"spark.sql.ansi.enabled\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 46,
    "stopIndex" : 50,
    "fragment" : "1 / 0"
  } ]
}


-- !query
DECLARE OR REPLACE VARIABLE var1 SMALLINT DEFAULT 100000
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkArithmeticException
{
  "errorClass" : "CAST_OVERFLOW",
  "sqlState" : "22003",
  "messageParameters" : {
    "sourceType" : "\"INT\"",
    "targetType" : "\"SMALLINT\"",
    "value" : "100000"
  }
}


-- !query
SET VARIABLE title = 'SET VARIABLE - single target'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 5
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE var1 = 7
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1
-- !query schema
struct<var1:int>
-- !query output
7


-- !query
SET VAR var1 = 8
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1
-- !query schema
struct<var1:int>
-- !query output
8


-- !query
SET VARIABLE var1 = (SELECT c1 FROM VALUES(1) AS T(c1))
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1
-- !query schema
struct<var1:int>
-- !query output
1


-- !query
SET VARIABLE var1 = (SELECT c1 FROM VALUES(1) AS T(c1) WHERE 1=0)
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1 AS `null`
-- !query schema
struct<null:int>
-- !query output
NULL


-- !query
SET VARIABLE var1 = (SELECT c1 FROM VALUES(1.0) AS T(c1))
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1
-- !query schema
struct<var1:int>
-- !query output
1


-- !query
SET VARIABLE var1 = (SELECT c1 FROM VALUES(1.0E10) AS T(c1))
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkArithmeticException
{
  "errorClass" : "CAST_OVERFLOW",
  "sqlState" : "22003",
  "messageParameters" : {
    "sourceType" : "\"DOUBLE\"",
    "targetType" : "\"INT\"",
    "value" : "1.0E10D"
  }
}


-- !query
SELECT var1
-- !query schema
struct<var1:int>
-- !query output
1


-- !query
SET VARIABLE var1 = (SELECT c1 FROM VALUES(1), (2) AS T(c1))
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkException
{
  "errorClass" : "SCALAR_SUBQUERY_TOO_MANY_ROWS",
  "sqlState" : "21000",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 21,
    "stopIndex" : 60,
    "fragment" : "(SELECT c1 FROM VALUES(1), (2) AS T(c1))"
  } ]
}


-- !query
SET VARIABLE var1 = (SELECT c1, c1 FROM VALUES(1), (2) AS T(c1))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INVALID_SUBQUERY_EXPRESSION.SCALAR_SUBQUERY_RETURN_MORE_THAN_ONE_OUTPUT_COLUMN",
  "sqlState" : "42823",
  "messageParameters" : {
    "number" : "2"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 21,
    "stopIndex" : 64,
    "fragment" : "(SELECT c1, c1 FROM VALUES(1), (2) AS T(c1))"
  } ]
}


-- !query
SET VARIABLE var1 = (SELECT c1 FROM VALUES('hello') AS T(c1))
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkNumberFormatException
{
  "errorClass" : "CAST_INVALID_INPUT",
  "sqlState" : "22018",
  "messageParameters" : {
    "expression" : "'hello'",
    "sourceType" : "\"STRING\"",
    "targetType" : "\"INT\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 61,
    "fragment" : "SET VARIABLE var1 = (SELECT c1 FROM VALUES('hello') AS T(c1))"
  } ]
}


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 5
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE var1 = var1 + 1
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1
-- !query schema
struct<var1:int>
-- !query output
6


-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE title = 'SET VARIABLE - comma separated target'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 5
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var2 STRING DEFAULT 'hello'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var3 DOUBLE DEFAULT 2
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE var1 = 6, var2 = 'world', var3 = pi()
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1 AS `6`, var2 AS `world` , var3 as `3.14...`
-- !query schema
struct<6:int,world:string,3.14...:double>
-- !query output
6	world	3.141592653589793


-- !query
SET VAR var1 = 7, var2 = 'universe', var3 = -1
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1 AS `7`, var2 AS `universe` , var3 as `-1`
-- !query schema
struct<7:int,universe:string,-1:double>
-- !query output
7	universe	-1.0


-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 5
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var2 STRING DEFAULT 'hello'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var3 DOUBLE DEFAULT 2
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE var1 = var3, var2 = ascii(var1), var3 = var1
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1 AS `2`, var2 AS `104`, var3 AS `5`
-- !query schema
struct<2:int,104:string,5:double>
-- !query output
2	53	5.0


-- !query
SET VARIABLE var1 = var3, var2 = INTERVAL'5' HOUR, var3 = var1
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE var1 = 1, var2 = 0, vAr1 = 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DUPLICATE_ASSIGNMENTS",
  "sqlState" : "42701",
  "messageParameters" : {
    "nameList" : "`var1`"
  }
}


-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE var2
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE var3
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE title = 'SET VARIABLE - row assignment'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 5
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var2 STRING DEFAULT 'hello'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var3 DOUBLE DEFAULT 2
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE (var1) = (SELECT c1 FROM VALUES(1) AS T(c1))
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1
-- !query schema
struct<var1:int>
-- !query output
1


-- !query
SET VAR (var1) = (SELECT c1 FROM VALUES(2) AS T(c1))
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1
-- !query schema
struct<var1:int>
-- !query output
2


-- !query
SET VARIABLE (var1, var2) = (SELECT c1, c2 FROM VALUES(10, 11) AS T(c1, c2))
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1 AS `10`, var2 AS `11`
-- !query schema
struct<10:int,11:string>
-- !query output
10	11


-- !query
SET VARIABLE (var1, var2, var3) = (SELECT c1, c2, c3 FROM VALUES(100, 110, 120) AS T(c1, c2, c3))
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1 AS `100`, var2 AS `110`, var3 AS `120`
-- !query schema
struct<100:int,110:string,120:double>
-- !query output
100	110	120.0


-- !query
SET VARIABLE (var1, var2, var3) = (SELECT c1, c2, c3 FROM VALUES(100, 110, 120) AS T(c1, c2, c3) WHERE 1 = 0)
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1 AS `NULL`, var2 AS `NULL`, var3 AS `NULL`
-- !query schema
struct<NULL:int,NULL:string,NULL:double>
-- !query output
NULL	NULL	NULL


-- !query
SET VARIABLE () = (SELECT 1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "INVALID_SET_SYNTAX",
  "sqlState" : "42000",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 28,
    "fragment" : "SET VARIABLE () = (SELECT 1)"
  } ]
}


-- !query
SET VARIABLE (var1, var2, var3) = (SELECT c1, c2, c3 FROM VALUES(100, 110, 120), (-100, -110, -120) AS T(c1, c2, c3))
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkException
{
  "errorClass" : "ROW_SUBQUERY_TOO_MANY_ROWS",
  "sqlState" : "21000"
}


-- !query
SET VARIABLE (var1, var2, var3) = (SELECT c1, c2 FROM VALUES(100, 110, 120) AS T(c1, c2, c3))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "ASSIGNMENT_ARITY_MISMATCH",
  "sqlState" : "42802",
  "messageParameters" : {
    "numExpr" : "2",
    "numTarget" : "3"
  }
}


-- !query
SET VARIABLE (var1, var2, var3) = (SELECT c1, c2, c3, c1 FROM VALUES(100, 110, 120) AS T(c1, c2, c3))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "ASSIGNMENT_ARITY_MISMATCH",
  "sqlState" : "42802",
  "messageParameters" : {
    "numExpr" : "4",
    "numTarget" : "3"
  }
}


-- !query
SET VARIABLE (var1, var2, var1) = (SELECT c1, c2, c3, c1 FROM VALUES(100, 110, 120) AS T(c1, c2, c3))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DUPLICATE_ASSIGNMENTS",
  "sqlState" : "42701",
  "messageParameters" : {
    "nameList" : "`var1`"
  }
}


-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE var2
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE var3
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE title = 'DEFAULT expression usage'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var1 STRING DEFAULT 'default1'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var2 STRING DEFAULT 'default2'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var3 STRING DEFAULT 'default3'
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE var1 = 'hello'
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE var1 = DEFAULT
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1 AS `default`
-- !query schema
struct<default:string>
-- !query output
default1


-- !query
SET VARIABLE var1 = 'hello1'
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE var1 = 'hello2'
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE var1 = 'hello3'
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE var1 = DEFAULT, var2 = DEFAULT, var3 = DEFAULT
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1 AS `default1`, var2 AS `default2`, var3 AS `default3`
-- !query schema
struct<default1:string,default2:string,default3:string>
-- !query output
default1	default2	default3


-- !query
SET VARIABLE var1 = 'hello'
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE (var1) = (SELECT DEFAULT FROM VALUES(1) AS T(c1))
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1 AS `default`
-- !query schema
struct<default:string>
-- !query output
default1


-- !query
SET VARIABLE var1 = 'hello'
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE (var1) = (SELECT DEFAULT FROM VALUES('world') AS T(default))
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1 AS `world`
-- !query schema
struct<world:string>
-- !query output
world


-- !query
SET VARIABLE var1 = 'hello'
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE (var1) = (SELECT DEFAULT FROM VALUES(1) AS T(c1) LIMIT 1)
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1 AS `default`
-- !query schema
struct<default:string>
-- !query output
default1


-- !query
SET VARIABLE var1 = 'hello'
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE (var1) = (SELECT DEFAULT FROM VALUES(1),(2),(3) AS T(c1) LIMIT 1 OFFSET 1)
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1 AS `default`
-- !query schema
struct<default:string>
-- !query output
default1


-- !query
SET VARIABLE var1 = 'hello'
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE (var1) = (SELECT DEFAULT FROM VALUES(1),(2),(3) AS T(c1) OFFSET 1)
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkException
{
  "errorClass" : "ROW_SUBQUERY_TOO_MANY_ROWS",
  "sqlState" : "21000"
}


-- !query
SELECT var1 AS `default`
-- !query schema
struct<default:string>
-- !query output
hello


-- !query
SET VARIABLE var1 = 'hello'
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE (var1) = (WITH v1(c1) AS (VALUES(1) AS T(c1)) SELECT DEFAULT FROM VALUES(1),(2),(3) AS T(c1))
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkException
{
  "errorClass" : "ROW_SUBQUERY_TOO_MANY_ROWS",
  "sqlState" : "21000"
}


-- !query
SELECT var1 AS `default`
-- !query schema
struct<default:string>
-- !query output
hello


-- !query
SET VARIABLE var1 = 'Hello' || DEFAULT
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DEFAULT_PLACEMENT_INVALID",
  "sqlState" : "42608"
}


-- !query
SET VARIABLE (var1) = (VALUES(DEFAULT))
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE (var1) = (WITH v1(c1) AS (VALUES(1) AS T(c1)) SELECT DEFAULT + 1 FROM VALUES(1),(2),(3) AS T(c1))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DEFAULT_PLACEMENT_INVALID",
  "sqlState" : "42608"
}


-- !query
SET VARIABLE var1 = session.default
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`session`.`default`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 21,
    "stopIndex" : 35,
    "fragment" : "session.default"
  } ]
}


-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE var2
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE var3
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE title = 'SET command'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 1
-- !query schema
struct<>
-- !query output



-- !query
SET x.var1 = 5
-- !query schema
struct<key:string,value:string>
-- !query output
x.var1	5


-- !query
SET x = 5
-- !query schema
struct<key:string,value:string>
-- !query output
x	5


-- !query
SET system.x.var = 5
-- !query schema
struct<key:string,value:string>
-- !query output
system.x.var	5


-- !query
SET x.session.var1 = 5
-- !query schema
struct<key:string,value:string>
-- !query output
x.session.var1	5


-- !query
SET var1 = 5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.SET_VARIABLE_USING_SET",
  "sqlState" : "0A000",
  "messageParameters" : {
    "variableName" : "`var1`"
  }
}


-- !query
SET session.var1 = 5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.SET_VARIABLE_USING_SET",
  "sqlState" : "0A000",
  "messageParameters" : {
    "variableName" : "`session`.`var1`"
  }
}


-- !query
SET system.session.var1 = 5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.SET_VARIABLE_USING_SET",
  "sqlState" : "0A000",
  "messageParameters" : {
    "variableName" : "`system`.`session`.`var1`"
  }
}


-- !query
SET vAr1 = 5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.SET_VARIABLE_USING_SET",
  "sqlState" : "0A000",
  "messageParameters" : {
    "variableName" : "`vAr1`"
  }
}


-- !query
SET seSSion.var1 = 5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.SET_VARIABLE_USING_SET",
  "sqlState" : "0A000",
  "messageParameters" : {
    "variableName" : "`seSSion`.`var1`"
  }
}


-- !query
SET sYStem.session.var1 = 5
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.SET_VARIABLE_USING_SET",
  "sqlState" : "0A000",
  "messageParameters" : {
    "variableName" : "`sYStem`.`session`.`var1`"
  }
}


-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 1
-- !query schema
struct<>
-- !query output



-- !query
SELECT var1 AS `2` FROM VALUES(2) AS T(var1)
-- !query schema
struct<2:int>
-- !query output
2


-- !query
SELECT c1 AS `2` FROM VALUES(2) AS T(var1), LATERAL(SELECT var1) AS TT(c1)
-- !query schema
struct<2:int>
-- !query output
2


-- !query
SELECT session.var1 AS `1` FROM VALUES(2) AS T(var1)
-- !query schema
struct<1:int>
-- !query output
1


-- !query
SELECT c1 AS `1` FROM VALUES(2) AS T(var1), LATERAL(SELECT session.var1) AS TT(c1)
-- !query schema
struct<1:int>
-- !query output
1


-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE title = 'variable references -- visibility'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 1
-- !query schema
struct<>
-- !query output



-- !query
VALUES (var1)
-- !query schema
struct<col1:int>
-- !query output
1


-- !query
SELECT var1
-- !query schema
struct<var1:int>
-- !query output
1


-- !query
SELECT sum(var1) FROM VALUES(1)
-- !query schema
struct<sum(variablereference(system.session.var1=1)):bigint>
-- !query output
1


-- !query
SELECT var1 + SUM(0) FROM VALUES(1)
-- !query schema
struct<(variablereference(system.session.var1=1) + sum(0)):bigint>
-- !query output
1


-- !query
SELECT substr('12345', var1, 1)
-- !query schema
struct<substr(12345, variablereference(system.session.var1=1), 1):string>
-- !query output
1


-- !query
SELECT 1 FROM VALUES(1, 2) AS T(c1, c2) GROUP BY c1 + var1
-- !query schema
struct<1:int>
-- !query output
1


-- !query
SELECT c1, sum(c2) FROM VALUES(1, 2) AS T(c1, c2) GROUP BY c1 HAVING sum(c1) != var1
-- !query schema
struct<c1:int,sum(c2):bigint>
-- !query output



-- !query
SELECT 1 FROM VALUES(1) AS T(c1) WHERE c1 IN (var1)
-- !query schema
struct<1:int>
-- !query output
1


-- !query
SELECT sum(c1) FILTER (c1 != var1) FROM VALUES(1, 2), (2, 3) AS T(c1, c2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'('",
    "hint" : ""
  }
}


-- !query
SELECT array(1, 2, 4)[var1]
-- !query schema
struct<array(1, 2, 4)[variablereference(system.session.var1=1)]:int>
-- !query output
2


-- !query
SELECT 1 FROM VALUES(1) AS T(c1) WHERE c1 = var1
-- !query schema
struct<1:int>
-- !query output
1


-- !query
WITH v1 AS (SELECT var1 AS c1) SELECT c1 AS `1` FROM v1
-- !query schema
struct<1:int>
-- !query output
1


-- !query
CREATE OR REPLACE TEMPORARY VIEW v AS SELECT var1 AS c1
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM v
-- !query schema
struct<c1:int>
-- !query output
1


-- !query
DROP VIEW v
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE title = 'variable references -- prohibited'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var1 INT DEFAULT 1
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE VIEW v AS SELECT var1 AS c1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_TEMP_OBJ_REFERENCE",
  "sqlState" : "42K0F",
  "messageParameters" : {
    "obj" : "VIEW",
    "objName" : "`spark_catalog`.`default`.`v`",
    "tempObj" : "VARIABLE",
    "tempObjName" : "`var1`"
  }
}


-- !query
DROP VIEW IF EXISTS V
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output



-- !query
SET VARIABLE title = 'variable references -- test constant folding'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE OR REPLACE VARIABLE var1 STRING DEFAULT 'a INT'
-- !query schema
struct<>
-- !query output



-- !query
SELECT from_json('{"a": 1}', var1)
-- !query schema
struct<from_json({"a": 1}):struct<a:int>>
-- !query output
{"a":1}


-- !query
DROP TEMPORARY VARIABLE var1
-- !query schema
struct<>
-- !query output

