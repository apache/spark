-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view integers as select * from values
  (0, 1),
  (0, 2),
  (1, 3),
  (1, NULL)
  as integers(g, i)
-- !query schema
struct<>
-- !query output



-- !query
SELECT g, SUM(i) FROM integers GROUP BY ALL ORDER BY 1
-- !query schema
struct<g:int,sum(i):bigint>
-- !query output
0	3
1	3


-- !query
SELECT g, SUM(i), COUNT(*), COUNT(i), SUM(g) FROM integers GROUP BY ALL ORDER BY 1
-- !query schema
struct<g:int,sum(i):bigint,count(1):bigint,count(i):bigint,sum(g):bigint>
-- !query output
0	3	2	2	0
1	3	2	1	2


-- !query
SELECT i%2, SUM(i), SUM(g) FROM integers GROUP BY ALL ORDER BY 1
-- !query schema
struct<(i % 2):int,sum(i):bigint,sum(g):bigint>
-- !query output
NULL	NULL	1
0	2	0
1	4	1


-- !query
SELECT (g+i)%2, SUM(i), SUM(g) FROM integers GROUP BY ALL ORDER BY 1
-- !query schema
struct<((g + i) % 2):int,sum(i):bigint,sum(g):bigint>
-- !query output
NULL	NULL	1
0	5	1
1	1	0


-- !query
SELECT (g+i)%2 + SUM(i), SUM(i), SUM(g) FROM integers GROUP BY ALL ORDER BY 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_ALL_IN_GROUP_BY",
  "sqlState" : "42803",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 55,
    "stopIndex" : 66,
    "fragment" : "GROUP BY ALL"
  } ]
}


-- !query
SELECT g, i, g%2, SUM(i), SUM(g) FROM integers GROUP BY ALL ORDER BY 1, 2, 3, 4
-- !query schema
struct<g:int,i:int,(g % 2):int,sum(i):bigint,sum(g):bigint>
-- !query output
0	1	0	1	0
0	2	0	2	0
1	NULL	1	NULL	1
1	3	1	3	1


-- !query
SELECT c0 FROM (SELECT 1 c0) t0 GROUP BY ALL HAVING c0>0
-- !query schema
struct<c0:int>
-- !query output
1


-- !query
SELECT c0 FROM (SELECT 1 c0, 1 c1 UNION ALL SELECT 1, 2) t0 GROUP BY ALL ORDER BY c0
-- !query schema
struct<c0:int>
-- !query output
1


-- !query
SELECT c0 FROM (SELECT 1 c0, 1 c1 UNION ALL SELECT 1, 2) t0 GROUP BY ALL HAVING c1>0 ORDER BY c0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`c1`",
    "proposal" : "`c0`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 81,
    "stopIndex" : 82,
    "fragment" : "c1"
  } ]
}
