-- Automatically generated by SQLQueryTestSuite
-- !query
SET hivevar:colname = 'c'
-- !query schema
struct<key:string,value:string>
-- !query output
hivevar:colname	'c'


-- !query
SELECT IDENTIFIER(${colname} || '_1') FROM VALUES(1) AS T(c_1)
-- !query schema
struct<c_1:int>
-- !query output
1


-- !query
SELECT IDENTIFIER('c1') FROM VALUES(1) AS T(c1)
-- !query schema
struct<c1:int>
-- !query output
1


-- !query
SELECT IDENTIFIER('t.c1') FROM VALUES(1) AS T(c1)
-- !query schema
struct<c1:int>
-- !query output
1


-- !query
SELECT IDENTIFIER('`t`.c1') FROM VALUES(1) AS T(c1)
-- !query schema
struct<c1:int>
-- !query output
1


-- !query
SELECT IDENTIFIER('`c 1`') FROM VALUES(1) AS T(`c 1`)
-- !query schema
struct<c 1:int>
-- !query output
1


-- !query
SELECT IDENTIFIER('``') FROM VALUES(1) AS T(``)
-- !query schema
struct<:int>
-- !query output
1


-- !query
SELECT IDENTIFIER('c' || '1') FROM VALUES(1) AS T(c1)
-- !query schema
struct<c1:int>
-- !query output
1


-- !query
CREATE SCHEMA IF NOT EXISTS s
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE s.tab(c1 INT) USING CSV
-- !query schema
struct<>
-- !query output



-- !query
USE SCHEMA s
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO IDENTIFIER('ta' || 'b') VALUES(1)
-- !query schema
struct<>
-- !query output



-- !query
DELETE FROM IDENTIFIER('ta' || 'b') WHERE 1=0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.TABLE_OPERATION",
  "sqlState" : "0A000",
  "messageParameters" : {
    "operation" : "DELETE",
    "tableName" : "`spark_catalog`.`s`.`tab`"
  }
}


-- !query
UPDATE IDENTIFIER('ta' || 'b') SET c1 = 2
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkUnsupportedOperationException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_2096",
  "messageParameters" : {
    "ddl" : "UPDATE TABLE"
  }
}


-- !query
MERGE INTO IDENTIFIER('ta' || 'b') AS t USING IDENTIFIER('ta' || 'b') AS s ON s.c1 = t.c1
  WHEN MATCHED THEN UPDATE SET c1 = 3
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkUnsupportedOperationException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_2096",
  "messageParameters" : {
    "ddl" : "MERGE INTO TABLE"
  }
}


-- !query
SELECT * FROM IDENTIFIER('tab')
-- !query schema
struct<c1:int>
-- !query output
1


-- !query
SELECT * FROM IDENTIFIER('s.tab')
-- !query schema
struct<c1:int>
-- !query output
1


-- !query
SELECT * FROM IDENTIFIER('`s`.`tab`')
-- !query schema
struct<c1:int>
-- !query output
1


-- !query
SELECT * FROM IDENTIFIER('t' || 'a' || 'b')
-- !query schema
struct<c1:int>
-- !query output
1


-- !query
USE SCHEMA default
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE s.tab
-- !query schema
struct<>
-- !query output



-- !query
DROP SCHEMA s
-- !query schema
struct<>
-- !query output



-- !query
SELECT IDENTIFIER('COAL' || 'ESCE')(NULL, 1)
-- !query schema
struct<coalesce(NULL, 1):int>
-- !query output
1


-- !query
SELECT IDENTIFIER('abs')(c1) FROM VALUES(-1) AS T(c1)
-- !query schema
struct<abs(c1):int>
-- !query output
1


-- !query
SELECT * FROM IDENTIFIER('ra' || 'nge')(0, 1)
-- !query schema
struct<id:bigint>
-- !query output
0


-- !query
CREATE TABLE IDENTIFIER('tab')(c1 INT) USING CSV
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS IDENTIFIER('ta' || 'b')
-- !query schema
struct<>
-- !query output



-- !query
CREATE SCHEMA identifier_clauses
-- !query schema
struct<>
-- !query output



-- !query
USE identifier_clauses
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE IDENTIFIER('ta' || 'b')(c1 INT) USING CSV
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS IDENTIFIER('identifier_clauses.' || 'tab')
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE IDENTIFIER('identifier_clauses.' || 'tab')(c1 INT) USING CSV
-- !query schema
struct<>
-- !query output



-- !query
REPLACE TABLE IDENTIFIER('identifier_clauses.' || 'tab')(c1 INT) USING CSV
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.TABLE_OPERATION",
  "sqlState" : "0A000",
  "messageParameters" : {
    "operation" : "REPLACE TABLE",
    "tableName" : "`spark_catalog`.`identifier_clauses`.`tab`"
  }
}


-- !query
CACHE TABLE IDENTIFIER('ta' || 'b')
-- !query schema
struct<>
-- !query output



-- !query
UNCACHE TABLE IDENTIFIER('ta' || 'b')
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS IDENTIFIER('ta' || 'b')
-- !query schema
struct<>
-- !query output



-- !query
USE default
-- !query schema
struct<>
-- !query output



-- !query
DROP SCHEMA identifier_clauses
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE tab(c1 INT) USING CSV
-- !query schema
struct<>
-- !query output



-- !query
INSERT INTO tab VALUES (1)
-- !query schema
struct<>
-- !query output



-- !query
SELECT c1 FROM tab
-- !query schema
struct<c1:int>
-- !query output
1


-- !query
DESCRIBE IDENTIFIER('ta' || 'b')
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
c1                  	int


-- !query
ANALYZE TABLE IDENTIFIER('ta' || 'b') COMPUTE STATISTICS
-- !query schema
struct<>
-- !query output



-- !query
ALTER TABLE IDENTIFIER('ta' || 'b') ADD COLUMN c2 INT
-- !query schema
struct<>
-- !query output



-- !query
SHOW TBLPROPERTIES IDENTIFIER('ta' || 'b')
-- !query schema
struct<key:string,value:string>
-- !query output



-- !query
SHOW COLUMNS FROM IDENTIFIER('ta' || 'b')
-- !query schema
struct<col_name:string>
-- !query output
c1
c2


-- !query
COMMENT ON TABLE IDENTIFIER('ta' || 'b') IS 'hello'
-- !query schema
struct<>
-- !query output



-- !query
REFRESH TABLE IDENTIFIER('ta' || 'b')
-- !query schema
struct<>
-- !query output



-- !query
REPAIR TABLE IDENTIFIER('ta' || 'b')
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "NOT_A_PARTITIONED_TABLE",
  "sqlState" : "42809",
  "messageParameters" : {
    "operation" : "MSCK REPAIR TABLE",
    "tableIdentWithDB" : "`spark_catalog`.`default`.`tab`"
  }
}


-- !query
TRUNCATE TABLE IDENTIFIER('ta' || 'b')
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS tab
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE VIEW IDENTIFIER('v')(c1) AS VALUES(1)
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM v
-- !query schema
struct<c1:int>
-- !query output
1


-- !query
ALTER VIEW IDENTIFIER('v') AS VALUES(2)
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW IDENTIFIER('v')
-- !query schema
struct<>
-- !query output



-- !query
CREATE TEMPORARY VIEW IDENTIFIER('v')(c1) AS VALUES(1)
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW IDENTIFIER('v')
-- !query schema
struct<>
-- !query output



-- !query
CREATE SCHEMA IDENTIFIER('id' || 'ent')
-- !query schema
struct<>
-- !query output



-- !query
ALTER SCHEMA IDENTIFIER('id' || 'ent') SET PROPERTIES (somekey = 'somevalue')
-- !query schema
struct<>
-- !query output



-- !query
ALTER SCHEMA IDENTIFIER('id' || 'ent') SET LOCATION 'someloc'
-- !query schema
struct<>
-- !query output



-- !query
COMMENT ON SCHEMA IDENTIFIER('id' || 'ent') IS 'some comment'
-- !query schema
struct<>
-- !query output



-- !query
DESCRIBE SCHEMA IDENTIFIER('id' || 'ent')
-- !query schema
struct<info_name:string,info_value:string>
-- !query output
Catalog Name	spark_catalog
Comment	some comment
Location [not included in comparison]/{warehouse_dir}/someloc
Namespace Name	ident
Owner	[not included in comparison]


-- !query
SHOW TABLES IN IDENTIFIER('id' || 'ent')
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean>
-- !query output



-- !query
SHOW TABLE EXTENDED IN IDENTIFIER('id' || 'ent') LIKE 'hello'
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean,information:string>
-- !query output



-- !query
USE IDENTIFIER('id' || 'ent')
-- !query schema
struct<>
-- !query output



-- !query
SHOW CURRENT SCHEMA
-- !query schema
struct<catalog:string,namespace:string>
-- !query output
spark_catalog	ident


-- !query
USE SCHEMA IDENTIFIER('id' || 'ent')
-- !query schema
struct<>
-- !query output



-- !query
USE SCHEMA default
-- !query schema
struct<>
-- !query output



-- !query
DROP SCHEMA IDENTIFIER('id' || 'ent')
-- !query schema
struct<>
-- !query output



-- !query
CREATE SCHEMA ident
-- !query schema
struct<>
-- !query output



-- !query
CREATE FUNCTION IDENTIFIER('ident.' || 'myDoubleAvg') AS 'test.org.apache.spark.sql.MyDoubleAvg'
-- !query schema
struct<>
-- !query output



-- !query
DESCRIBE FUNCTION IDENTIFIER('ident.' || 'myDoubleAvg')
-- !query schema
struct<function_desc:string>
-- !query output
Class: test.org.apache.spark.sql.MyDoubleAvg
Function: spark_catalog.ident.mydoubleavg
Usage: N/A.


-- !query
REFRESH FUNCTION IDENTIFIER('ident.' || 'myDoubleAvg')
-- !query schema
struct<>
-- !query output



-- !query
DROP FUNCTION IDENTIFIER('ident.' || 'myDoubleAvg')
-- !query schema
struct<>
-- !query output



-- !query
DROP SCHEMA ident
-- !query schema
struct<>
-- !query output



-- !query
CREATE TEMPORARY FUNCTION IDENTIFIER('my' || 'DoubleAvg') AS 'test.org.apache.spark.sql.MyDoubleAvg'
-- !query schema
struct<>
-- !query output



-- !query
DROP TEMPORARY FUNCTION IDENTIFIER('my' || 'DoubleAvg')
-- !query schema
struct<>
-- !query output



-- !query
DECLARE var = 'sometable'
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE IDENTIFIER(var)(c1 INT) USING CSV
-- !query schema
struct<>
-- !query output



-- !query
SET VAR var = 'c1'
-- !query schema
struct<>
-- !query output



-- !query
SELECT IDENTIFIER(var) FROM VALUES(1) AS T(c1)
-- !query schema
struct<c1:int>
-- !query output
1


-- !query
SET VAR var = 'some'
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IDENTIFIER(var || 'table')
-- !query schema
struct<>
-- !query output



-- !query
SELECT IDENTIFIER('c 1') FROM VALUES(1) AS T(`c 1`)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'1'",
    "hint" : ": extra input '1'"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 24,
    "fragment" : "IDENTIFIER('c 1')"
  } ]
}


-- !query
SELECT IDENTIFIER('') FROM VALUES(1) AS T(``)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_EMPTY_STATEMENT",
  "sqlState" : "42617",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 21,
    "fragment" : "IDENTIFIER('')"
  } ]
}


-- !query
VALUES(IDENTIFIER(CAST(NULL AS STRING)))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "NOT_A_CONSTANT_STRING.NULL",
  "sqlState" : "42601",
  "messageParameters" : {
    "expr" : "CAST(NULL AS STRING)",
    "name" : "IDENTIFIER"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 19,
    "stopIndex" : 38,
    "fragment" : "CAST(NULL AS STRING)"
  } ]
}


-- !query
VALUES(IDENTIFIER(1))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "NOT_A_CONSTANT_STRING.WRONG_TYPE",
  "sqlState" : "42601",
  "messageParameters" : {
    "dataType" : "int",
    "expr" : "1",
    "name" : "IDENTIFIER"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 19,
    "stopIndex" : 19,
    "fragment" : "1"
  } ]
}


-- !query
VALUES(IDENTIFIER(SUBSTR('HELLO', 1, RAND() + 1)))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "NOT_A_CONSTANT_STRING.NOT_CONSTANT",
  "sqlState" : "42601",
  "messageParameters" : {
    "expr" : "substr('HELLO', 1, CAST((rand() + CAST(1 AS DOUBLE)) AS INT))",
    "name" : "IDENTIFIER"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 19,
    "stopIndex" : 48,
    "fragment" : "SUBSTR('HELLO', 1, RAND() + 1)"
  } ]
}


-- !query
SELECT `IDENTIFIER`('abs')(c1) FROM VALUES(-1) AS T(c1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNRESOLVED_ROUTINE",
  "sqlState" : "42883",
  "messageParameters" : {
    "routineName" : "`IDENTIFIER`",
    "searchPath" : "[`system`.`builtin`, `system`.`session`, `spark_catalog`.`default`]"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 26,
    "fragment" : "`IDENTIFIER`('abs')"
  } ]
}


-- !query
CREATE TABLE IDENTIFIER(1)(c1 INT) USING csv
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "NOT_A_CONSTANT_STRING.WRONG_TYPE",
  "sqlState" : "42601",
  "messageParameters" : {
    "dataType" : "int",
    "expr" : "1",
    "name" : "IDENTIFIER"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 25,
    "stopIndex" : 25,
    "fragment" : "1"
  } ]
}


-- !query
CREATE TABLE IDENTIFIER('a.b.c')(c1 INT) USING csv
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "REQUIRES_SINGLE_PART_NAMESPACE",
  "sqlState" : "42K05",
  "messageParameters" : {
    "namespace" : "`a`.`b`",
    "sessionCatalog" : "spark_catalog"
  }
}


-- !query
CREATE VIEW IDENTIFIER('a.b.c')(c1) AS VALUES(1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "REQUIRES_SINGLE_PART_NAMESPACE",
  "sqlState" : "42K05",
  "messageParameters" : {
    "namespace" : "`a`.`b`",
    "sessionCatalog" : "spark_catalog"
  }
}


-- !query
DROP TABLE IDENTIFIER('a.b.c')
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "REQUIRES_SINGLE_PART_NAMESPACE",
  "sqlState" : "42K05",
  "messageParameters" : {
    "namespace" : "`a`.`b`",
    "sessionCatalog" : "spark_catalog"
  }
}


-- !query
DROP VIEW IDENTIFIER('a.b.c')
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "REQUIRES_SINGLE_PART_NAMESPACE",
  "sqlState" : "42K05",
  "messageParameters" : {
    "namespace" : "`a`.`b`",
    "sessionCatalog" : "spark_catalog"
  }
}


-- !query
COMMENT ON TABLE IDENTIFIER('a.b.c.d') IS 'hello'
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "REQUIRES_SINGLE_PART_NAMESPACE",
  "sqlState" : "42K05",
  "messageParameters" : {
    "namespace" : "`a`.`b`.`c`",
    "sessionCatalog" : "spark_catalog"
  }
}


-- !query
VALUES(IDENTIFIER(1)())
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "NOT_A_CONSTANT_STRING.WRONG_TYPE",
  "sqlState" : "42601",
  "messageParameters" : {
    "dataType" : "int",
    "expr" : "1",
    "name" : "IDENTIFIER"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 19,
    "stopIndex" : 19,
    "fragment" : "1"
  } ]
}


-- !query
VALUES(IDENTIFIER('a.b.c.d')())
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "IDENTIFIER_TOO_MANY_NAME_PARTS",
  "sqlState" : "42601",
  "messageParameters" : {
    "identifier" : "`a`.`b`.`c`.`d`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 30,
    "fragment" : "IDENTIFIER('a.b.c.d')()"
  } ]
}


-- !query
CREATE TEMPORARY FUNCTION IDENTIFIER('default.my' || 'DoubleAvg') AS 'test.org.apache.spark.sql.MyDoubleAvg'
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "INVALID_SQL_SYNTAX.CREATE_TEMP_FUNC_WITH_DATABASE",
  "sqlState" : "42000",
  "messageParameters" : {
    "database" : "`default`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 108,
    "fragment" : "CREATE TEMPORARY FUNCTION IDENTIFIER('default.my' || 'DoubleAvg') AS 'test.org.apache.spark.sql.MyDoubleAvg'"
  } ]
}


-- !query
DROP TEMPORARY FUNCTION IDENTIFIER('default.my' || 'DoubleAvg')
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "INVALID_SQL_SYNTAX.MULTI_PART_NAME",
  "sqlState" : "42000",
  "messageParameters" : {
    "name" : "`default`.`myDoubleAvg`",
    "statement" : "DROP TEMPORARY FUNCTION"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 63,
    "fragment" : "DROP TEMPORARY FUNCTION IDENTIFIER('default.my' || 'DoubleAvg')"
  } ]
}


-- !query
CREATE TEMPORARY VIEW IDENTIFIER('default.v')(c1) AS VALUES(1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "TEMP_VIEW_NAME_TOO_MANY_NAME_PARTS",
  "sqlState" : "428EK",
  "messageParameters" : {
    "actualName" : "`default`.`v`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 62,
    "fragment" : "CREATE TEMPORARY VIEW IDENTIFIER('default.v')(c1) AS VALUES(1)"
  } ]
}


-- !query
create temporary view identifier('v1') as (select my_col from (values (1), (2), (1) as (my_col)) group by 1)
-- !query schema
struct<>
-- !query output



-- !query
cache table identifier('t1') as (select my_col from (values (1), (2), (1) as (my_col)) group by 1)
-- !query schema
struct<>
-- !query output



-- !query
create table identifier('t2') using csv as (select my_col from (values (1), (2), (1) as (my_col)) group by 1)
-- !query schema
struct<>
-- !query output



-- !query
insert into identifier('t2') select my_col from (values (3) as (my_col)) group by 1
-- !query schema
struct<>
-- !query output



-- !query
drop view v1
-- !query schema
struct<>
-- !query output



-- !query
drop table t1
-- !query schema
struct<>
-- !query output



-- !query
drop table t2
-- !query schema
struct<>
-- !query output



-- !query
DECLARE agg = 'max'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE col = 'c1'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE tab = 'T'
-- !query schema
struct<>
-- !query output



-- !query
WITH S(c1, c2) AS (VALUES(1, 2), (2, 3)),
     T(c1, c2) AS (VALUES ('a', 'b'), ('c', 'd'))
SELECT IDENTIFIER(agg)(IDENTIFIER(col)) FROM IDENTIFIER(tab)
-- !query schema
struct<max(c1):string>
-- !query output
c


-- !query
WITH S(c1, c2) AS (VALUES(1, 2), (2, 3)),
     T(c1, c2) AS (VALUES ('a', 'b'), ('c', 'd'))
SELECT IDENTIFIER('max')(IDENTIFIER('c1')) FROM IDENTIFIER('T')
-- !query schema
struct<max(c1):string>
-- !query output
c


-- !query
WITH ABC(c1, c2) AS (VALUES(1, 2), (2, 3))
SELECT IDENTIFIER('max')(IDENTIFIER('c1')) FROM IDENTIFIER('A' || 'BC')
-- !query schema
struct<max(c1):int>
-- !query output
2


-- !query
SELECT row_number() OVER IDENTIFIER('x.win') FROM VALUES(1) AS T(c1) WINDOW win AS (ORDER BY c1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "''x.win''",
    "hint" : ""
  }
}


-- !query
SELECT T1.c1 FROM VALUES(1) AS T1(c1) JOIN VALUES(1) AS T2(c1) USING (IDENTIFIER('c1'))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'('",
    "hint" : ""
  }
}


-- !query
SELECT IDENTIFIER('t').c1 FROM VALUES(1) AS T(c1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`t`",
    "proposal" : "`c1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 22,
    "fragment" : "IDENTIFIER('t')"
  } ]
}


-- !query
SELECT map('a', 1).IDENTIFIER('a') FROM VALUES(1) AS T(c1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "''a''",
    "hint" : ""
  }
}


-- !query
SELECT named_struct('a', 1).IDENTIFIER('a') FROM VALUES(1) AS T(c1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "''a''",
    "hint" : ""
  }
}


-- !query
SELECT * FROM s.IDENTIFIER('tab')
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "INVALID_SQL_SYNTAX.INVALID_TABLE_VALUED_FUNC_NAME",
  "sqlState" : "42000",
  "messageParameters" : {
    "funcName" : "`s`.`IDENTIFIER`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 15,
    "stopIndex" : 33,
    "fragment" : "s.IDENTIFIER('tab')"
  } ]
}


-- !query
SELECT * FROM IDENTIFIER('s').IDENTIFIER('tab')
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'.'",
    "hint" : ""
  }
}


-- !query
SELECT * FROM IDENTIFIER('s').tab
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'.'",
    "hint" : ""
  }
}


-- !query
SELECT row_number() OVER IDENTIFIER('win') FROM VALUES(1) AS T(c1) WINDOW win AS (ORDER BY c1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "''win''",
    "hint" : ""
  }
}


-- !query
SELECT row_number() OVER win FROM VALUES(1) AS T(c1) WINDOW IDENTIFIER('win') AS (ORDER BY c1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'WINDOW'",
    "hint" : ""
  }
}


-- !query
WITH identifier('v')(identifier('c1')) AS (VALUES(1)) (SELECT c1 FROM v)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "''v''",
    "hint" : ""
  }
}


-- !query
INSERT INTO tab(IDENTIFIER('c1')) VALUES(1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'('",
    "hint" : ": missing ')'"
  }
}


-- !query
CREATE OR REPLACE VIEW v(IDENTIFIER('c1')) AS VALUES(1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'('",
    "hint" : ""
  }
}


-- !query
CREATE TABLE tab(IDENTIFIER('c1') INT) USING CSV
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'('",
    "hint" : ""
  }
}
