-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW testData AS SELECT * FROM VALUES
(1, 1), (1, 2), (2, 1), (2, 2), (3, 1), (3, 2), (null, 1), (3, null), (null, null)
AS testData(a, b)
-- !query schema
struct<>
-- !query output



-- !query
SELECT a from testData GROUP BY A
-- !query schema
struct<a:int>
-- !query output
1
2
3
NULL


-- !query
SELECT a AS k, COUNT(b) FROM testData GROUP BY k
-- !query schema
struct<k:int,count(b):bigint>
-- !query output
1	2
2	2
3	2
NULL	1


-- !query
SELECT a AS k, COUNT(b) FROM testData GROUP BY k HAVING k > 1
-- !query schema
struct<k:int,count(b):bigint>
-- !query output
2	2
3	2


-- !query
SELECT col1 AS k, SUM(col2) FROM testData AS t(col1, col2) GROUP BY k
-- !query schema
struct<k:int,sum(col2):bigint>
-- !query output
1	3
2	3
3	3
NULL	1


-- !query
SELECT a as alias FROM testData GROUP BY ALIAS
-- !query schema
struct<alias:int>
-- !query output
1
2
3
NULL


-- !query
SELECT a AS k FROM testData GROUP BY 'k'
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "MISSING_AGGREGATION",
  "sqlState" : "42803",
  "messageParameters" : {
    "expression" : "\"a\"",
    "expressionAnyValue" : "\"any_value(a)\""
  }
}


-- !query
SELECT 1 AS k FROM testData GROUP BY 'k'
-- !query schema
struct<k:int>
-- !query output
1


-- !query
SELECT concat_ws(' ', a, b) FROM testData GROUP BY `concat_ws( , a, b)`
-- !query schema
struct<concat_ws( , a, b):string>
-- !query output

1
1 1
1 2
2 1
2 2
3
3 1
3 2


-- !query
SELECT 1 AS a FROM testData GROUP BY a
-- !query schema
struct<a:int>
-- !query output
1
1
1
1


-- !query
SELECT 1 AS a FROM testData GROUP BY `a`
-- !query schema
struct<a:int>
-- !query output
1
1
1
1


-- !query
SELECT 1 GROUP BY `1`
-- !query schema
struct<1:int>
-- !query output
1


-- !query
SELECT (SELECT a FROM testData) + (SELECT b FROM testData) group by `(scalarsubquery() + scalarsubquery())`
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkException
{
  "errorClass" : "SCALAR_SUBQUERY_TOO_MANY_ROWS",
  "sqlState" : "21000",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 31,
    "fragment" : "(SELECT a FROM testData)"
  } ]
}


-- !query
SELECT a, count(*) FROM testData GROUP BY (SELECT b FROM testData)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "MISSING_AGGREGATION",
  "sqlState" : "42803",
  "messageParameters" : {
    "expression" : "\"a\"",
    "expressionAnyValue" : "\"any_value(a)\""
  }
}


-- !query
SELECT a, count(*) FROM testData GROUP BY a, (SELECT b FROM testData)
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkException
{
  "errorClass" : "SCALAR_SUBQUERY_TOO_MANY_ROWS",
  "sqlState" : "21000",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 46,
    "stopIndex" : 69,
    "fragment" : "(SELECT b FROM testData)"
  } ]
}


-- !query
SELECT a, count(*) FROM testData GROUP BY a, (SELECT b FROM testData LIMIT 1)
-- !query schema
struct<a:int,count(1):bigint>
-- !query output
1	2
2	2
3	3
NULL	2


-- !query
SELECT a, count(*) FROM testData GROUP BY a, b IN (SELECT a FROM testData)
-- !query schema
struct<a:int,count(1):bigint>
-- !query output
1	2
2	2
3	1
3	2
NULL	1
NULL	1


-- !query
SELECT a, count(*) FROM testData GROUP BY a, a IN (SELECT b FROM testData)
-- !query schema
struct<a:int,count(1):bigint>
-- !query output
1	2
2	2
3	3
NULL	2


-- !query
SELECT a, count(*) FROM testData GROUP BY a, EXISTS(SELECT b FROM testData)
-- !query schema
struct<a:int,count(1):bigint>
-- !query output
1	2
2	2
3	3
NULL	2


-- !query
SELECT a AS k, COUNT(non_existing) FROM testData GROUP BY k
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`non_existing`",
    "proposal" : "`a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 22,
    "stopIndex" : 33,
    "fragment" : "non_existing"
  } ]
}


-- !query
SELECT COUNT(b) AS k FROM testData GROUP BY k
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "GROUP_BY_AGGREGATE",
  "sqlState" : "42903",
  "messageParameters" : {
    "sqlExpr" : "count(testdata.b)"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 15,
    "fragment" : "COUNT(b)"
  } ]
}


-- !query
set spark.sql.groupByAliases=false
-- !query schema
struct<key:string,value:string>
-- !query output
spark.sql.groupByAliases	false


-- !query
SELECT a AS k, COUNT(b) FROM testData GROUP BY k
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`k`",
    "proposal" : "`a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 48,
    "stopIndex" : 48,
    "fragment" : "k"
  } ]
}


-- !query
SELECT 1 GROUP BY `1`
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITHOUT_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`1`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 19,
    "stopIndex" : 21,
    "fragment" : "`1`"
  } ]
}


-- !query
SELECT 1 AS col FROM testData GROUP BY `col`
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`col`",
    "proposal" : "`a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 40,
    "stopIndex" : 44,
    "fragment" : "`col`"
  } ]
}


-- !query
SELECT 1 AS a FROM testData GROUP BY `a`
-- !query schema
struct<a:int>
-- !query output
1
1
1
1
