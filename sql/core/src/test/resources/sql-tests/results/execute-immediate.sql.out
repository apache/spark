-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW tbl_view AS SELECT * FROM VALUES
  (10, 'name1', named_struct('f1', 1, 's2', named_struct('f2', 101, 'f3', 'a'))),
  (20, 'name2', named_struct('f1', 2, 's2', named_struct('f2', 202, 'f3', 'b'))),
  (30, 'name3', named_struct('f1', 3, 's2', named_struct('f2', 303, 'f3', 'c'))),
  (40, 'name4', named_struct('f1', 4, 's2', named_struct('f2', 404, 'f3', 'd'))),
  (50, 'name5', named_struct('f1', 5, 's2', named_struct('f2', 505, 'f3', 'e'))),
  (60, 'name6', named_struct('f1', 6, 's2', named_struct('f2', 606, 'f3', 'f'))),
  (70, 'name7', named_struct('f1', 7, 's2', named_struct('f2', 707, 'f3', 'g')))
AS tbl_view(id, name, data)
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE x (id INT) USING csv
-- !query schema
struct<>
-- !query output



-- !query
DECLARE sql_string STRING
-- !query schema
struct<>
-- !query output



-- !query
SET VAR sql_string = 'SELECT * from tbl_view where name = \'name1\''
-- !query schema
struct<>
-- !query output



-- !query
EXECUTE IMMEDIATE 'SET spark.sql.ansi.enabled=true'
-- !query schema
struct<key:string,value:string>
-- !query output
spark.sql.ansi.enabled	true


-- !query
EXECUTE IMMEDIATE 'CREATE TEMPORARY VIEW IDENTIFIER(:tblName) AS SELECT id, name FROM tbl_view' USING 'tbl_view_tmp' as tblName
-- !query schema
struct<>
-- !query output



-- !query
EXECUTE IMMEDIATE 'SELECT * FROM tbl_view_tmp'
-- !query schema
struct<id:int,name:string>
-- !query output
10	name1
20	name2
30	name3
40	name4
50	name5
60	name6
70	name7


-- !query
EXECUTE IMMEDIATE 'REFRESH TABLE IDENTIFIER(:tblName)' USING 'x' as tblName
-- !query schema
struct<>
-- !query output



-- !query
EXECUTE IMMEDIATE sql_string
-- !query schema
struct<id:int,name:string,data:struct<f1:int,s2:struct<f2:int,f3:string>>>
-- !query output
10	name1	{"f1":1,"s2":{"f2":101,"f3":"a"}}


-- !query
EXECUTE IMMEDIATE 'SELECT * from tbl_view where name = \'name1\''
-- !query schema
struct<id:int,name:string,data:struct<f1:int,s2:struct<f2:int,f3:string>>>
-- !query output
10	name1	{"f1":1,"s2":{"f2":101,"f3":"a"}}


-- !query
SET VAR sql_string = 'SELECT * from tbl_view where name = ? or name = ?'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE a STRING
-- !query schema
struct<>
-- !query output



-- !query
SET VAR a = 'name1'
-- !query schema
struct<>
-- !query output



-- !query
EXECUTE IMMEDIATE sql_string USING 'name1', 'name3'
-- !query schema
struct<id:int,name:string,data:struct<f1:int,s2:struct<f2:int,f3:string>>>
-- !query output
10	name1	{"f1":1,"s2":{"f2":101,"f3":"a"}}
30	name3	{"f1":3,"s2":{"f2":303,"f3":"c"}}


-- !query
EXECUTE IMMEDIATE sql_string USING a, 'name2'
-- !query schema
struct<id:int,name:string,data:struct<f1:int,s2:struct<f2:int,f3:string>>>
-- !query output
10	name1	{"f1":1,"s2":{"f2":101,"f3":"a"}}
20	name2	{"f1":2,"s2":{"f2":202,"f3":"b"}}


-- !query
EXECUTE IMMEDIATE 'SELECT * from tbl_view where name = ? or name = ?' USING 'name1', 'name3'
-- !query schema
struct<id:int,name:string,data:struct<f1:int,s2:struct<f2:int,f3:string>>>
-- !query output
10	name1	{"f1":1,"s2":{"f2":101,"f3":"a"}}
30	name3	{"f1":3,"s2":{"f2":303,"f3":"c"}}


-- !query
EXECUTE IMMEDIATE 'SELECT * from tbl_view where name = ? or name = ?' USING a, 'name2'
-- !query schema
struct<id:int,name:string,data:struct<f1:int,s2:struct<f2:int,f3:string>>>
-- !query output
10	name1	{"f1":1,"s2":{"f2":101,"f3":"a"}}
20	name2	{"f1":2,"s2":{"f2":202,"f3":"b"}}


-- !query
EXECUTE IMMEDIATE 'SELECT * from tbl_view where name = ? or name = ?' USING (a, 'name2')
-- !query schema
struct<id:int,name:string,data:struct<f1:int,s2:struct<f2:int,f3:string>>>
-- !query output
10	name1	{"f1":1,"s2":{"f2":101,"f3":"a"}}
20	name2	{"f1":2,"s2":{"f2":202,"f3":"b"}}


-- !query
EXECUTE IMMEDIATE 'INSERT INTO x VALUES(?)' USING 1
-- !query schema
struct<>
-- !query output



-- !query
SELECT * from x
-- !query schema
struct<id:int>
-- !query output
1


-- !query
SET VAR sql_string = 'SELECT * from tbl_view where name = :first or id = :second'
-- !query schema
struct<>
-- !query output



-- !query
DECLARE b INT
-- !query schema
struct<>
-- !query output



-- !query
SET VAR b = 40
-- !query schema
struct<>
-- !query output



-- !query
EXECUTE IMMEDIATE sql_string USING 40 as second, 'name7' as first
-- !query schema
struct<id:int,name:string,data:struct<f1:int,s2:struct<f2:int,f3:string>>>
-- !query output
40	name4	{"f1":4,"s2":{"f2":404,"f3":"d"}}
70	name7	{"f1":7,"s2":{"f2":707,"f3":"g"}}


-- !query
EXECUTE IMMEDIATE sql_string USING b as second, 'name7' as first
-- !query schema
struct<id:int,name:string,data:struct<f1:int,s2:struct<f2:int,f3:string>>>
-- !query output
40	name4	{"f1":4,"s2":{"f2":404,"f3":"d"}}
70	name7	{"f1":7,"s2":{"f2":707,"f3":"g"}}


-- !query
EXECUTE IMMEDIATE 'SELECT * from tbl_view where name = :first or id = :second' USING 40 as second, 'name7' as first
-- !query schema
struct<id:int,name:string,data:struct<f1:int,s2:struct<f2:int,f3:string>>>
-- !query output
40	name4	{"f1":4,"s2":{"f2":404,"f3":"d"}}
70	name7	{"f1":7,"s2":{"f2":707,"f3":"g"}}


-- !query
EXECUTE IMMEDIATE 'SELECT * from tbl_view where name = :first or id = :second' USING 'name7' as first, b as second
-- !query schema
struct<id:int,name:string,data:struct<f1:int,s2:struct<f2:int,f3:string>>>
-- !query output
40	name4	{"f1":4,"s2":{"f2":404,"f3":"d"}}
70	name7	{"f1":7,"s2":{"f2":707,"f3":"g"}}


-- !query
EXECUTE IMMEDIATE 'SELECT tbl_view.*, :first as p FROM tbl_view WHERE name = :first' USING 'name7' as first
-- !query schema
struct<id:int,name:string,data:struct<f1:int,s2:struct<f2:int,f3:string>>,p:string>
-- !query output
70	name7	{"f1":7,"s2":{"f2":707,"f3":"g"}}	name7


-- !query
EXECUTE IMMEDIATE 'SET VAR sql_string = ?' USING 'SELECT id from tbl_view where name = :first'
-- !query schema
struct<>
-- !query output



-- !query
SELECT sql_string
-- !query schema
struct<sql_string:string>
-- !query output
SELECT id from tbl_view where name = :first


-- !query
DECLARE res_id INT
-- !query schema
struct<>
-- !query output



-- !query
EXECUTE IMMEDIATE sql_string INTO res_id USING 'name7' as first
-- !query schema
struct<>
-- !query output



-- !query
SELECT res_id
-- !query schema
struct<res_id:int>
-- !query output
70


-- !query
EXECUTE IMMEDIATE sql_string INTO res_id USING a as first
-- !query schema
struct<>
-- !query output



-- !query
SELECT res_id
-- !query schema
struct<res_id:int>
-- !query output
10


-- !query
SET VAR sql_string = 'SELECT * from tbl_view where name = :first or id = :second'
-- !query schema
struct<>
-- !query output



-- !query
EXECUTE IMMEDIATE 'SELECT 42' INTO res_id
-- !query schema
struct<>
-- !query output



-- !query
SELECT res_id
-- !query schema
struct<res_id:int>
-- !query output
42


-- !query
EXECUTE IMMEDIATE 'SELECT id, name FROM tbl_view WHERE id = ?' INTO b, a USING 10
-- !query schema
struct<>
-- !query output



-- !query
SELECT b, a
-- !query schema
struct<b:int,a:string>
-- !query output
10	name1


-- !query
EXECUTE IMMEDIATE 'SELECT * FROM tbl_view where id = ? AND name = ?' USING b as first, a
-- !query schema
struct<id:int,name:string,data:struct<f1:int,s2:struct<f2:int,f3:string>>>
-- !query output
10	name1	{"f1":1,"s2":{"f2":101,"f3":"a"}}


-- !query
EXECUTE IMMEDIATE 'SELECT 42 WHERE 2 = 1' INTO res_id
-- !query schema
struct<>
-- !query output



-- !query
SELECT res_id
-- !query schema
struct<res_id:int>
-- !query output
NULL


-- !query
EXECUTE IMMEDIATE 'SELECT \'1707\'' INTO res_id
-- !query schema
struct<>
-- !query output



-- !query
SELECT res_id
-- !query schema
struct<res_id:int>
-- !query output
1707


-- !query
EXECUTE IMMEDIATE 'SELECT \'invalid_cast_error_expected\'' INTO res_id
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkNumberFormatException
{
  "errorClass" : "CAST_INVALID_INPUT",
  "sqlState" : "22018",
  "messageParameters" : {
    "ansiConfig" : "\"spark.sql.ansi.enabled\"",
    "expression" : "'invalid_cast_error_expected'",
    "sourceType" : "\"STRING\"",
    "targetType" : "\"INT\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 70,
    "fragment" : "EXECUTE IMMEDIATE 'SELECT \\'invalid_cast_error_expected\\'' INTO res_id"
  } ]
}


-- !query
EXECUTE IMMEDIATE 'INSERT INTO x VALUES (?)' INTO res_id USING 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_STATEMENT_FOR_EXECUTE_INTO",
  "sqlState" : "07501",
  "messageParameters" : {
    "sqlString" : "INSERT INTO X VALUES (?)"
  }
}


-- !query
EXECUTE IMMEDIATE 'SELECT * FROM tbl_view WHERE ? = id' USING id
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNRESOLVED_VARIABLE",
  "sqlState" : "42883",
  "messageParameters" : {
    "searchPath" : "`system`.`session`",
    "variableName" : "`id`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 63,
    "stopIndex" : 64,
    "fragment" : "id"
  } ]
}


-- !query
EXECUTE IMMEDIATE 'SELECT * FROM tbl_view where ? = id and :first = name' USING 1, 'name2' as first
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_QUERY_MIXED_QUERY_PARAMETERS",
  "sqlState" : "42613"
}


-- !query
EXECUTE IMMEDIATE 'SELECT * FROM tbl_view where :first = name' USING 1, 'name2' as first
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "ALL_PARAMETERS_MUST_BE_NAMED",
  "sqlState" : "07001",
  "messageParameters" : {
    "exprs" : "\"1\""
  }
}


-- !query
EXECUTE IMMEDIATE 'SELCT Fa'
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'SELCT'",
    "hint" : ""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 28,
    "fragment" : "EXECUTE IMMEDIATE 'SELCT Fa'"
  } ]
}


-- !query
EXECUTE IMMEDIATE 'SELCT Fa' INTO res_id
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'SELCT'",
    "hint" : ""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 40,
    "fragment" : "EXECUTE IMMEDIATE 'SELCT Fa' INTO res_id"
  } ]
}


-- !query
EXECUTE IMMEDIATE b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_VARIABLE_TYPE_FOR_QUERY_EXECUTE_IMMEDIATE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "varType" : "\"INT\""
  }
}


-- !query
SET VAR sql_string = 'SELECT * from tbl_view where name = :first or id = :second'
-- !query schema
struct<>
-- !query output



-- !query
SET VAR a = 'na'
-- !query schema
struct<>
-- !query output



-- !query
EXECUTE IMMEDIATE 'SELECT * from tbl_view where name = :first' USING CONCAT(a , "me1") as first
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_EXPR_FOR_PARAMETER",
  "sqlState" : "42K0E",
  "messageParameters" : {
    "invalidExprSql" : "\"CONCAT(a, me1)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 70,
    "stopIndex" : 86,
    "fragment" : "CONCAT(a , \"me1\")"
  } ]
}


-- !query
EXECUTE IMMEDIATE 'SELECT * from tbl_view where name = :first' USING (SELECT 42) as first, 'name2' as second
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_EXPR_FOR_PARAMETER",
  "sqlState" : "42K0E",
  "messageParameters" : {
    "invalidExprSql" : "\"scalarsubquery()\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 70,
    "stopIndex" : 80,
    "fragment" : "(SELECT 42)"
  } ]
}


-- !query
EXECUTE IMMEDIATE 'SELECT id, name FROM tbl_view WHERE id = ?' INTO a, b USING 10
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkNumberFormatException
{
  "errorClass" : "CAST_INVALID_INPUT",
  "sqlState" : "22018",
  "messageParameters" : {
    "ansiConfig" : "\"spark.sql.ansi.enabled\"",
    "expression" : "'name1'",
    "sourceType" : "\"STRING\"",
    "targetType" : "\"INT\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 81,
    "fragment" : "EXECUTE IMMEDIATE 'SELECT id, name FROM tbl_view WHERE id = ?' INTO a, b USING 10"
  } ]
}


-- !query
EXECUTE IMMEDIATE 'SELECT id, name FROM tbl_view WHERE id = ?' INTO (a, b) USING 10
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'('",
    "hint" : ""
  }
}


-- !query
EXECUTE IMMEDIATE 'SELECT id FROM tbl_view' INTO res_id
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkException
{
  "errorClass" : "ROW_SUBQUERY_TOO_MANY_ROWS",
  "sqlState" : "21000"
}


-- !query
EXECUTE IMMEDIATE 'SELECT id, data.f1 FROM tbl_view' INTO res_id
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "ASSIGNMENT_ARITY_MISMATCH",
  "sqlState" : "42802",
  "messageParameters" : {
    "numExpr" : "2",
    "numTarget" : "1"
  }
}


-- !query
EXECUTE IMMEDIATE 'SELECT id FROM tbl_view' INTO res_id, b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "ASSIGNMENT_ARITY_MISMATCH",
  "sqlState" : "42802",
  "messageParameters" : {
    "numExpr" : "1",
    "numTarget" : "2"
  }
}


-- !query
EXECUTE IMMEDIATE 'SELECT id FROM tbl_view WHERE id = :first' USING 10 as first, 20 as first
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "EXEC_IMMEDIATE_DUPLICATE_ARGUMENT_ALIASES",
  "sqlState" : "42701",
  "messageParameters" : {
    "aliases" : "`first`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 63,
    "stopIndex" : 92,
    "fragment" : "USING 10 as first, 20 as first"
  } ]
}


-- !query
DECLARE p = 10
-- !query schema
struct<>
-- !query output



-- !query
EXECUTE IMMEDIATE 'SELECT id FROM tbl_view WHERE id = :p' USING p
-- !query schema
struct<id:int>
-- !query output
10


-- !query
EXECUTE IMMEDIATE 'SELECT id FROM tbl_view WHERE id = :p' USING p, 'p'
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "ALL_PARAMETERS_MUST_BE_NAMED",
  "sqlState" : "07001",
  "messageParameters" : {
    "exprs" : "\"p\""
  }
}


-- !query
EXECUTE IMMEDIATE 'SELECT id, data.f1 FROM tbl_view WHERE id = 10' INTO res_id, res_id
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "DUPLICATE_ASSIGNMENTS",
  "sqlState" : "42701",
  "messageParameters" : {
    "nameList" : "`res_id`"
  }
}


-- !query
EXECUTE IMMEDIATE 'EXECUTE IMMEDIATE \'SELECT id FROM tbl_view WHERE id = ? USING 10\''
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "NESTED_EXECUTE_IMMEDIATE",
  "sqlState" : "07501",
  "messageParameters" : {
    "sqlString" : "EXECUTE IMMEDIATE 'SELECT ID FROM TBL_VIEW WHERE ID = ? USING 10'"
  }
}


-- !query
SET VAR sql_string = null
-- !query schema
struct<>
-- !query output



-- !query
EXECUTE IMMEDIATE sql_string
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "NULL_QUERY_STRING_EXECUTE_IMMEDIATE",
  "sqlState" : "22004",
  "messageParameters" : {
    "varName" : "`sql_string`"
  }
}


-- !query
DECLARE default_val INT
-- !query schema
struct<>
-- !query output



-- !query
SET VAR default_val = 42
-- !query schema
struct<>
-- !query output



-- !query
EXECUTE IMMEDIATE 'CREATE TABLE test_table (id INT, name STRING DEFAULT :default_name, score INT DEFAULT :default_score) USING PARQUET' 
USING 'unknown' as default_name, default_val as default_score
-- !query schema
struct<>
-- !query output



-- !query
DESCRIBE EXTENDED test_table
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
id                  	int                 	                    
name                	string              	                    
score               	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	default             	                    
Table               	test_table          	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	MANAGED             	                    
Provider            	PARQUET             	                    
Location [not included in comparison]/{warehouse_dir}/test_table	                    
                    	                    	                    
# Column Default Values	                    	                    
name                	string              	'unknown'           
score               	int                 	42


-- !query
EXECUTE IMMEDIATE 'CREATE TABLE test_table2 (id INT, value INT DEFAULT ?) USING PARQUET' USING 100
-- !query schema
struct<>
-- !query output



-- !query
DESCRIBE EXTENDED test_table2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
id                  	int                 	                    
value               	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	default             	                    
Table               	test_table2         	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	MANAGED             	                    
Provider            	PARQUET             	                    
Location [not included in comparison]/{warehouse_dir}/test_table2	                    
                    	                    	                    
# Column Default Values	                    	                    
value               	int                 	100


-- !query
EXECUTE IMMEDIATE 'ALTER TABLE test_table ALTER COLUMN score SET DEFAULT :new_default' USING 99 as new_default
-- !query schema
struct<>
-- !query output



-- !query
DESCRIBE EXTENDED test_table
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
id                  	int                 	                    
name                	string              	                    
score               	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	default             	                    
Table               	test_table          	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	MANAGED             	                    
Provider            	PARQUET             	                    
Location [not included in comparison]/{warehouse_dir}/test_table	                    
                    	                    	                    
# Column Default Values	                    	                    
name                	string              	'unknown'           
score               	int                 	99


-- !query
EXECUTE IMMEDIATE 'ALTER TABLE test_table ADD COLUMN status STRING DEFAULT :status_default' USING 'active' as status_default
-- !query schema
struct<>
-- !query output



-- !query
DESCRIBE EXTENDED test_table
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
id                  	int                 	                    
name                	string              	                    
score               	int                 	                    
status              	string              	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	default             	                    
Table               	test_table          	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	MANAGED             	                    
Provider            	PARQUET             	                    
Location [not included in comparison]/{warehouse_dir}/test_table	                    
                    	                    	                    
# Column Default Values	                    	                    
name                	string              	'unknown'           
score               	int                 	99                  
status              	string              	'active'


-- !query
EXECUTE IMMEDIATE 'ALTER TABLE test_table2 ADD COLUMN flag BOOLEAN DEFAULT ?' USING true
-- !query schema
struct<>
-- !query output



-- !query
DESCRIBE EXTENDED test_table2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
id                  	int                 	                    
value               	int                 	                    
flag                	boolean             	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	default             	                    
Table               	test_table2         	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	MANAGED             	                    
Provider            	PARQUET             	                    
Location [not included in comparison]/{warehouse_dir}/test_table2	                    
                    	                    	                    
# Column Default Values	                    	                    
value               	int                 	100                 
flag                	boolean             	true


-- !query
EXECUTE IMMEDIATE 'CREATE VIEW test_view AS SELECT * FROM test_table WHERE score > :min_score' USING 50 as min_score
-- !query schema
struct<>
-- !query output



-- !query
DESCRIBE EXTENDED test_view
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
id                  	int                 	                    
name                	string              	                    
score               	int                 	                    
status              	string              	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	default             	                    
Table               	test_view           	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM test_table WHERE score > 50	                    
View Original Text  	SELECT * FROM test_table WHERE score > 50	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.default	                    
View Query Output Columns	[`id`, `name`, `score`, `status`]	                    
                    	                    	                    
# Column Default Values	                    	                    
name                	string              	'unknown'           
score               	int                 	99                  
status              	string              	'active'


-- !query
EXECUTE IMMEDIATE 'CREATE VIEW test_view2 AS SELECT * FROM test_table WHERE score < ?' USING 80
-- !query schema
struct<>
-- !query output



-- !query
DESCRIBE EXTENDED test_view2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
id                  	int                 	                    
name                	string              	                    
score               	int                 	                    
status              	string              	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	default             	                    
Table               	test_view2          	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM test_table WHERE score < 80	                    
View Original Text  	SELECT * FROM test_table WHERE score < 80	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.default	                    
View Query Output Columns	[`id`, `name`, `score`, `status`]	                    
                    	                    	                    
# Column Default Values	                    	                    
name                	string              	'unknown'           
score               	int                 	99                  
status              	string              	'active'


-- !query
EXECUTE IMMEDIATE 'ALTER VIEW test_view AS SELECT id, name FROM test_table WHERE score BETWEEN :min_val AND :max_val' 
USING 30 as min_val, 70 as max_val
-- !query schema
struct<>
-- !query output



-- !query
DESCRIBE EXTENDED test_view
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
id                  	int                 	                    
name                	string              	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	default             	                    
Table               	test_view           	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT id, name FROM test_table WHERE score BETWEEN 30 AND 70	                    
View Original Text  	SELECT id, name FROM test_table WHERE score BETWEEN 30 AND 70	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.default	                    
View Query Output Columns	[`id`, `name`]      	                    
                    	                    	                    
# Column Default Values	                    	                    
name                	string              	'unknown'


-- !query
EXECUTE IMMEDIATE 'ALTER VIEW test_view2 AS SELECT * FROM test_table WHERE score > ?' USING 60
-- !query schema
struct<>
-- !query output



-- !query
DESCRIBE EXTENDED test_view2
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
id                  	int                 	                    
name                	string              	                    
score               	int                 	                    
status              	string              	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	default             	                    
Table               	test_view2          	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT * FROM test_table WHERE score > 60	                    
View Original Text  	SELECT * FROM test_table WHERE score > 60	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.default	                    
View Query Output Columns	[`id`, `name`, `score`, `status`]	                    
                    	                    	                    
# Column Default Values	                    	                    
name                	string              	'unknown'           
score               	int                 	99                  
status              	string              	'active'


-- !query
EXECUTE IMMEDIATE 'DECLARE VARIABLE test_var INT DEFAULT :var_default' USING 123 as var_default
-- !query schema
struct<>
-- !query output



-- !query
SELECT test_var
-- !query schema
struct<test_var:int>
-- !query output
123


-- !query
EXECUTE IMMEDIATE 'DECLARE VARIABLE test_var2 STRING DEFAULT ?' USING 'default_string'
-- !query schema
struct<>
-- !query output



-- !query
SELECT test_var2
-- !query schema
struct<test_var2:string>
-- !query output
default_string


-- !query
SELECT * FROM test_view
-- !query schema
struct<id:int,name:string>
-- !query output



-- !query
SELECT test_var, test_var2
-- !query schema
struct<test_var:int,test_var2:string>
-- !query output
123	default_string


-- !query
DECLARE expr_val INT
-- !query schema
struct<>
-- !query output



-- !query
SET VAR expr_val = 10
-- !query schema
struct<>
-- !query output



-- !query
EXECUTE IMMEDIATE 'CREATE TABLE expr_test (id INT, computed INT DEFAULT :expr_result) USING PARQUET' 
USING (expr_val * 5 + 2) as expr_result
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_EXPR_FOR_PARAMETER",
  "sqlState" : "42K0E",
  "messageParameters" : {
    "invalidExprSql" : "\"((expr_val * 5) + 2)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 110,
    "stopIndex" : 125,
    "fragment" : "expr_val * 5 + 2"
  } ]
}


-- !query
DESCRIBE EXTENDED expr_test
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`expr_test`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 19,
    "stopIndex" : 27,
    "fragment" : "expr_test"
  } ]
}


-- !query
EXECUTE IMMEDIATE 'CREATE TABLE error_table (id INT DEFAULT ?, name STRING DEFAULT :name_default) USING PARQUET' 
USING 1, 'test' as name_default
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_QUERY_MIXED_QUERY_PARAMETERS",
  "sqlState" : "42613"
}


-- !query
EXECUTE IMMEDIATE 'CREATE TABLE error_table2 (id INT DEFAULT :undefined_param) USING PARQUET'
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkException
{
  "errorClass" : "INTERNAL_ERROR",
  "sqlState" : "XX000",
  "messageParameters" : {
    "message" : "The Spark SQL phase analysis failed with an internal error. You hit a bug in Spark or the Spark plugins you use. Please, report this bug to the corresponding communities or vendors, and provide the full stack trace."
  }
}


-- !query
EXECUTE IMMEDIATE 'CREATE FUNCTION test_func(x INT DEFAULT :func_default) RETURNS INT RETURN x + :increment' 
USING 10 as func_default, 5 as increment
-- !query schema
struct<>
-- !query output



-- !query
DESCRIBE FUNCTION EXTENDED test_func
-- !query schema
struct<function_desc:string>
-- !query output
Class: sqlFunction.
Extended Usage:
    No example/argument for test_func.

Function: spark_catalog.default.test_func
Usage: {"catalogAndNamespace.part.0":"spark_catalog","referredTempViewNames":"[]","sqlFunction.returnType":"INT","sqlFunction.isTableFunc":"false","sqlFunction.inputParam":"x INT DEFAULT 10","sqlFunction.expression":"x + 5","catalogAndNamespace.numParts":"2","sqlConfig.spark.sql.binaryOutputStyle":"UTF-8","sqlFunction.createTime":"1752513953704","sqlConfig.spark.sql.ansi.enabled":"true","referredTempFunctionsNames":"[]","catalogAndNamespace.part.1":"default","sqlFunction.deterministic":"true","sqlConfig.spark.sql.datetime.java8API.enabled":"true","referredTempVariableNames":"[]"}


-- !query
EXECUTE IMMEDIATE 'CREATE FUNCTION test_func2(x INT DEFAULT ?) RETURNS INT RETURN x * ?' USING 1, 2
-- !query schema
struct<>
-- !query output
java.lang.IllegalArgumentException
Expected 1 positional parameters, but got 2


-- !query
DESCRIBE FUNCTION EXTENDED test_func2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_ROUTINE",
  "sqlState" : "42883",
  "messageParameters" : {
    "routineName" : "`test_func2`",
    "searchPath" : "[`system`.`builtin`, `system`.`session`, `spark_catalog`.`default`]"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 28,
    "stopIndex" : 37,
    "fragment" : "test_func2"
  } ]
}


-- !query
EXECUTE IMMEDIATE 'CREATE VIEW nested_view AS SELECT test_func(:input_val) as result' USING 20 as input_val
-- !query schema
struct<>
-- !query output



-- !query
DESCRIBE EXTENDED nested_view
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
result              	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	default             	                    
Table               	nested_view         	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	VIEW                	                    
View Text           	SELECT test_func(20) as result	                    
View Original Text  	SELECT test_func(20) as result	                    
View Schema Mode    	COMPENSATION        	                    
View Catalog and Namespace	spark_catalog.default	                    
View Query Output Columns	[`result`]


-- !query
EXECUTE IMMEDIATE 'CREATE TABLE gen_table (id INT, doubled INT GENERATED ALWAYS AS (id * :multiplier)) USING PARQUET' 
USING 2 as multiplier
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_FEATURE.TABLE_OPERATION",
  "sqlState" : "0A000",
  "messageParameters" : {
    "operation" : "generated columns",
    "tableName" : "`spark_catalog`.`default`.`gen_table`"
  }
}


-- !query
DESCRIBE EXTENDED gen_table
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`gen_table`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 19,
    "stopIndex" : 27,
    "fragment" : "gen_table"
  } ]
}


-- !query
EXECUTE IMMEDIATE 'CREATE TABLE multi_param (id INT DEFAULT :val, name STRING DEFAULT :name, score INT DEFAULT :val) USING PARQUET' 
USING 42 as val, 'test' as name
-- !query schema
struct<>
-- !query output



-- !query
DESCRIBE EXTENDED multi_param
-- !query schema
struct<col_name:string,data_type:string,comment:string>
-- !query output
id                  	int                 	                    
name                	string              	                    
score               	int                 	                    
                    	                    	                    
# Detailed Table Information	                    	                    
Catalog             	spark_catalog       	                    
Database            	default             	                    
Table               	multi_param         	                    
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type                	MANAGED             	                    
Provider            	PARQUET             	                    
Location [not included in comparison]/{warehouse_dir}/multi_param	                    
                    	                    	                    
# Column Default Values	                    	                    
id                  	int                 	42                  
name                	string              	'test'              
score               	int                 	42


-- !query
DROP FUNCTION IF EXISTS test_func
-- !query schema
struct<>
-- !query output



-- !query
DROP FUNCTION IF EXISTS test_func2
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW IF EXISTS nested_view
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS gen_table
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS multi_param
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW IF EXISTS test_view
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW IF EXISTS test_view2
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS test_table
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS test_table2
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS expr_test
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE x
-- !query schema
struct<>
-- !query output

