-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW t1 AS VALUES (1, 'a'), (2, 'b') tbl(c1, c2)
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE TEMPORARY VIEW t2 AS VALUES (1.0, 1), (2.0, 4) tbl(c1, c2)
-- !query schema
struct<>
-- !query output



-- !query
SELECT udf(c1) as c1, udf(c2) as c2
FROM   (SELECT udf(c1) as c1, udf(c2) as c2 FROM t1
        UNION ALL
        SELECT udf(c1) as c1, udf(c2) as c2 FROM t1)
-- !query schema
struct<c1:int,c2:string>
-- !query output
1	a
1	a
2	b
2	b


-- !query
SELECT udf(c1) as c1, udf(c2) as c2
FROM   (SELECT udf(c1) as c1, udf(c2) as c2 FROM t1 WHERE c2 = 'a'
        UNION ALL
        SELECT udf(c1) as c1, udf(c2) as c2 FROM t2
        UNION ALL
        SELECT udf(c1) as c1, udf(c2) as c2 FROM t2)
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkNumberFormatException
{
  "errorClass" : "CAST_INVALID_INPUT",
  "sqlState" : "22018",
  "messageParameters" : {
    "expression" : "'a'",
    "sourceType" : "\"STRING\"",
    "targetType" : "\"BIGINT\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 243,
    "fragment" : "SELECT udf(c1) as c1, udf(c2) as c2\nFROM   (SELECT udf(c1) as c1, udf(c2) as c2 FROM t1 WHERE c2 = 'a'\n        UNION ALL\n        SELECT udf(c1) as c1, udf(c2) as c2 FROM t2\n        UNION ALL\n        SELECT udf(c1) as c1, udf(c2) as c2 FROM t2)"
  } ]
}


-- !query
SELECT udf(udf(a)) as a
FROM (SELECT udf(0) a, udf(0) b
      UNION ALL
      SELECT udf(SUM(1)) a, udf(CAST(0 AS BIGINT)) b
      UNION ALL SELECT udf(0) a, udf(0) b) T
-- !query schema
struct<a:bigint>
-- !query output
0
0
1


-- !query
CREATE OR REPLACE TEMPORARY VIEW p1 AS VALUES 1 T(col)
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE TEMPORARY VIEW p2 AS VALUES 1 T(col)
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE TEMPORARY VIEW p3 AS VALUES 1 T(col)
-- !query schema
struct<>
-- !query output



-- !query
SELECT udf(1) AS x,
       udf(col) as col
FROM   (SELECT udf(col) AS col
        FROM (SELECT udf(p1.col) AS col
              FROM   p1 CROSS JOIN p2
              UNION ALL
              SELECT udf(col)
              FROM p3) T1) T2
-- !query schema
struct<x:int,col:int>
-- !query output
1	1
1	1


-- !query
SELECT map(1, 2), udf('str') as str
UNION ALL
SELECT map(1, 2, 3, NULL), udf(1)
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkNumberFormatException
{
  "errorClass" : "CAST_INVALID_INPUT",
  "sqlState" : "22018",
  "messageParameters" : {
    "expression" : "'str'",
    "sourceType" : "\"STRING\"",
    "targetType" : "\"BIGINT\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 79,
    "fragment" : "SELECT map(1, 2), udf('str') as str\nUNION ALL\nSELECT map(1, 2, 3, NULL), udf(1)"
  } ]
}


-- !query
SELECT array(1, 2), udf('str') as str
UNION ALL
SELECT array(1, 2, 3, NULL), udf(1)
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkNumberFormatException
{
  "errorClass" : "CAST_INVALID_INPUT",
  "sqlState" : "22018",
  "messageParameters" : {
    "expression" : "'str'",
    "sourceType" : "\"STRING\"",
    "targetType" : "\"BIGINT\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 83,
    "fragment" : "SELECT array(1, 2), udf('str') as str\nUNION ALL\nSELECT array(1, 2, 3, NULL), udf(1)"
  } ]
}


-- !query
DROP VIEW IF EXISTS t1
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW IF EXISTS t2
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW IF EXISTS p1
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW IF EXISTS p2
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW IF EXISTS p3
-- !query schema
struct<>
-- !query output

