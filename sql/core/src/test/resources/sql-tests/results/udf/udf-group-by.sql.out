-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW testData AS SELECT * FROM VALUES
(1, 1), (1, 2), (2, 1), (2, 2), (3, 1), (3, 2), (null, 1), (3, null), (null, null)
AS testData(a, b)
-- !query schema
struct<>
-- !query output



-- !query
SELECT udf(a), udf(COUNT(b)) FROM testData
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "MISSING_GROUP_BY",
  "sqlState" : "42803",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 42,
    "fragment" : "SELECT udf(a), udf(COUNT(b)) FROM testData"
  } ]
}


-- !query
SELECT COUNT(udf(a)), udf(COUNT(b)) FROM testData
-- !query schema
struct<count(udf(a)):bigint,udf(count(b)):bigint>
-- !query output
7	7


-- !query
SELECT udf(a), COUNT(udf(b)) FROM testData GROUP BY a
-- !query schema
struct<udf(a):int,count(udf(b)):bigint>
-- !query output
1	2
2	2
3	2
NULL	1


-- !query
SELECT udf(a), udf(COUNT(udf(b))) FROM testData GROUP BY b
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "MISSING_AGGREGATION",
  "sqlState" : "42803",
  "messageParameters" : {
    "expression" : "\"a\"",
    "expressionAnyValue" : "\"any_value(a)\""
  }
}


-- !query
SELECT COUNT(udf(a)), COUNT(udf(b)) FROM testData GROUP BY udf(a)
-- !query schema
struct<count(udf(a)):bigint,count(udf(b)):bigint>
-- !query output
0	1
2	2
2	2
3	2


-- !query
SELECT 'foo', COUNT(udf(a)) FROM testData GROUP BY 1
-- !query schema
struct<foo:string,count(udf(a)):bigint>
-- !query output
foo	7


-- !query
SELECT 'foo' FROM testData WHERE a = 0 GROUP BY udf(1)
-- !query schema
struct<foo:string>
-- !query output



-- !query
SELECT 'foo', udf(APPROX_COUNT_DISTINCT(udf(a))) FROM testData WHERE a = 0 GROUP BY udf(1)
-- !query schema
struct<foo:string,udf(approx_count_distinct(udf(a))):bigint>
-- !query output



-- !query
SELECT 'foo', MAX(STRUCT(udf(a))) FROM testData WHERE a = 0 GROUP BY udf(1)
-- !query schema
struct<foo:string,max(struct(udf(a))):struct<col1:int>>
-- !query output



-- !query
SELECT udf(a + b), udf(COUNT(b)) FROM testData GROUP BY a + b
-- !query schema
struct<udf((a + b)):int,udf(count(b)):bigint>
-- !query output
2	1
3	2
4	2
5	1
NULL	1


-- !query
SELECT udf(a + 2), udf(COUNT(b)) FROM testData GROUP BY a + 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "MISSING_AGGREGATION",
  "sqlState" : "42803",
  "messageParameters" : {
    "expression" : "\"a\"",
    "expressionAnyValue" : "\"any_value(a)\""
  }
}


-- !query
SELECT udf(a + 1) + 1, udf(COUNT(b)) FROM testData GROUP BY udf(a + 1)
-- !query schema
struct<(udf((a + 1)) + 1):int,udf(count(b)):bigint>
-- !query output
3	2
4	2
5	2
NULL	1


-- !query
SELECT SKEWNESS(udf(a)), udf(KURTOSIS(a)), udf(MIN(a)), MAX(udf(a)), udf(AVG(udf(a))), udf(VARIANCE(a)), STDDEV(udf(a)), udf(SUM(a)), udf(COUNT(a))
FROM testData
-- !query schema
struct<skewness(udf(a)):double,udf(kurtosis(a)):double,udf(min(a)):int,max(udf(a)):int,udf(avg(udf(a))):double,udf(variance(a)):double,stddev(udf(a)):double,udf(sum(a)):bigint,udf(count(a)):bigint>
-- !query output
-0.2723801058145729	-1.5069204152249134	1	3	2.142857142857143	0.8095238095238094	0.8997354108424372	15	7


-- !query
SELECT COUNT(DISTINCT udf(b)), udf(COUNT(DISTINCT b, c)) FROM (SELECT 1 AS a, 2 AS b, 3 AS c) GROUP BY udf(a)
-- !query schema
struct<count(DISTINCT udf(b)):bigint,udf(count(DISTINCT b, c)):bigint>
-- !query output
1	1


-- !query
SELECT udf(a) AS k, COUNT(udf(b)) FROM testData GROUP BY k
-- !query schema
struct<k:int,count(udf(b)):bigint>
-- !query output
1	2
2	2
3	2
NULL	1


-- !query
SELECT a AS k, udf(COUNT(b)) FROM testData GROUP BY k HAVING k > 1
-- !query schema
struct<k:int,udf(count(b)):bigint>
-- !query output
2	2
3	2


-- !query
SELECT udf(COUNT(b)) AS k FROM testData GROUP BY k
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "GROUP_BY_AGGREGATE",
  "sqlState" : "42903",
  "messageParameters" : {
    "sqlExpr" : "CAST(udf(cast(count(b) as string)) AS BIGINT)"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 20,
    "fragment" : "udf(COUNT(b))"
  } ]
}


-- !query
CREATE OR REPLACE TEMPORARY VIEW testDataHasSameNameWithAlias AS SELECT * FROM VALUES
(1, 1, 3), (1, 2, 1) AS testDataHasSameNameWithAlias(k, a, v)
-- !query schema
struct<>
-- !query output



-- !query
SELECT k AS a, udf(COUNT(udf(v))) FROM testDataHasSameNameWithAlias GROUP BY udf(a)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "MISSING_AGGREGATION",
  "sqlState" : "42803",
  "messageParameters" : {
    "expression" : "\"k\"",
    "expressionAnyValue" : "\"any_value(k)\""
  }
}


-- !query
set spark.sql.groupByAliases=false
-- !query schema
struct<key:string,value:string>
-- !query output
spark.sql.groupByAliases	false


-- !query
SELECT a AS k, udf(COUNT(udf(b))) FROM testData GROUP BY k
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`k`",
    "proposal" : "`a`, `b`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 58,
    "stopIndex" : 58,
    "fragment" : "k"
  } ]
}


-- !query
SELECT udf(a), COUNT(udf(1)) FROM testData WHERE false GROUP BY udf(a)
-- !query schema
struct<udf(a):int,count(udf(1)):bigint>
-- !query output



-- !query
SELECT udf(COUNT(1)) FROM testData WHERE false
-- !query schema
struct<udf(count(1)):bigint>
-- !query output
0


-- !query
SELECT 1 FROM (SELECT udf(COUNT(1)) FROM testData WHERE false) t
-- !query schema
struct<1:int>
-- !query output
1


-- !query
SELECT 1 from (
  SELECT 1 AS z,
  udf(MIN(a.x))
  FROM (select 1 as x) a
  WHERE false
) b
where b.z != b.z
-- !query schema
struct<1:int>
-- !query output



-- !query
SELECT corr(DISTINCT x, y), udf(corr(DISTINCT y, x)), count(*)
  FROM (VALUES (1, 1), (2, 2), (2, 2)) t(x, y)
-- !query schema
struct<corr(DISTINCT x, y):double,udf(corr(DISTINCT y, x)):double,count(1):bigint>
-- !query output
1.0	1.0	3


-- !query
SELECT udf(1) FROM range(10) HAVING true
-- !query schema
struct<udf(1):int>
-- !query output
1


-- !query
SELECT udf(udf(1)) FROM range(10) HAVING MAX(id) > 0
-- !query schema
struct<udf(udf(1)):int>
-- !query output
1


-- !query
SELECT udf(id) FROM range(10) HAVING id > 0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "MISSING_GROUP_BY",
  "sqlState" : "42803",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 43,
    "fragment" : "SELECT udf(id) FROM range(10) HAVING id > 0"
  } ]
}


-- !query
CREATE OR REPLACE TEMPORARY VIEW test_agg AS SELECT * FROM VALUES
  (1, true), (1, false),
  (2, true),
  (3, false), (3, null),
  (4, null), (4, null),
  (5, null), (5, true), (5, false) AS test_agg(k, v)
-- !query schema
struct<>
-- !query output



-- !query
SELECT udf(every(v)), udf(some(v)), any(v) FROM test_agg WHERE 1 = 0
-- !query schema
struct<udf(every(v)):boolean,udf(some(v)):boolean,any(v):boolean>
-- !query output
NULL	NULL	NULL


-- !query
SELECT udf(every(udf(v))), some(v), any(v) FROM test_agg WHERE k = 4
-- !query schema
struct<udf(every(udf(v))):boolean,some(v):boolean,any(v):boolean>
-- !query output
NULL	NULL	NULL


-- !query
SELECT every(v), udf(some(v)), any(v) FROM test_agg WHERE k = 5
-- !query schema
struct<every(v):boolean,udf(some(v)):boolean,any(v):boolean>
-- !query output
false	true	true


-- !query
SELECT udf(k), every(v), udf(some(v)), any(v) FROM test_agg GROUP BY udf(k)
-- !query schema
struct<udf(k):int,every(v):boolean,udf(some(v)):boolean,any(v):boolean>
-- !query output
1	false	true	true
2	true	true	true
3	false	false	false
4	NULL	NULL	NULL
5	false	true	true


-- !query
SELECT udf(k), every(v) FROM test_agg GROUP BY k HAVING every(v) = false
-- !query schema
struct<udf(k):int,every(v):boolean>
-- !query output
1	false
3	false
5	false


-- !query
SELECT udf(k), udf(every(v)) FROM test_agg GROUP BY udf(k) HAVING every(v) IS NULL
-- !query schema
struct<udf(k):int,udf(every(v)):boolean>
-- !query output
4	NULL


-- !query
SELECT udf(k),
       udf(Every(v)) AS every
FROM   test_agg
WHERE  k = 2
       AND v IN (SELECT Any(v)
                 FROM   test_agg
                 WHERE  k = 1)
GROUP  BY udf(k)
-- !query schema
struct<udf(k):int,every:boolean>
-- !query output
2	true


-- !query
SELECT udf(udf(k)),
       Every(v) AS every
FROM   test_agg
WHERE  k = 2
       AND v IN (SELECT Every(v)
                 FROM   test_agg
                 WHERE  k = 1)
GROUP  BY udf(udf(k))
-- !query schema
struct<udf(udf(k)):int,every:boolean>
-- !query output



-- !query
SELECT every(udf(1))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"udf(1)\"",
    "inputType" : "\"INT\"",
    "paramIndex" : "first",
    "requiredType" : "\"BOOLEAN\"",
    "sqlExpr" : "\"every(udf(1))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 20,
    "fragment" : "every(udf(1))"
  } ]
}


-- !query
SELECT some(udf(1S))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"udf(1)\"",
    "inputType" : "\"SMALLINT\"",
    "paramIndex" : "first",
    "requiredType" : "\"BOOLEAN\"",
    "sqlExpr" : "\"some(udf(1))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 20,
    "fragment" : "some(udf(1S))"
  } ]
}


-- !query
SELECT any(udf(1L))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"udf(1)\"",
    "inputType" : "\"BIGINT\"",
    "paramIndex" : "first",
    "requiredType" : "\"BOOLEAN\"",
    "sqlExpr" : "\"any(udf(1))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 19,
    "fragment" : "any(udf(1L))"
  } ]
}


-- !query
SELECT udf(every("true"))
-- !query schema
struct<udf(every(true)):boolean>
-- !query output
true


-- !query
SELECT k, v, every(v) OVER (PARTITION BY k ORDER BY v) FROM test_agg
-- !query schema
struct<k:int,v:boolean,every(v) OVER (PARTITION BY k ORDER BY v ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):boolean>
-- !query output
1	false	false
1	true	false
2	true	true
3	NULL	NULL
3	false	false
4	NULL	NULL
4	NULL	NULL
5	NULL	NULL
5	false	false
5	true	false


-- !query
SELECT k, udf(udf(v)), some(v) OVER (PARTITION BY k ORDER BY v) FROM test_agg
-- !query schema
struct<k:int,udf(udf(v)):boolean,some(v) OVER (PARTITION BY k ORDER BY v ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):boolean>
-- !query output
1	false	false
1	true	true
2	true	true
3	NULL	NULL
3	false	false
4	NULL	NULL
4	NULL	NULL
5	NULL	NULL
5	false	false
5	true	true


-- !query
SELECT udf(udf(k)), v, any(v) OVER (PARTITION BY k ORDER BY v) FROM test_agg
-- !query schema
struct<udf(udf(k)):int,v:boolean,any(v) OVER (PARTITION BY k ORDER BY v ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):boolean>
-- !query output
1	false	false
1	true	true
2	true	true
3	NULL	NULL
3	false	false
4	NULL	NULL
4	NULL	NULL
5	NULL	NULL
5	false	false
5	true	true


-- !query
SELECT udf(count(*)) FROM test_agg HAVING count(*) > 1L
-- !query schema
struct<udf(count(1)):bigint>
-- !query output
10


-- !query
SELECT k, udf(max(v)) FROM test_agg GROUP BY k HAVING max(v) = true
-- !query schema
struct<k:int,udf(max(v)):boolean>
-- !query output
1	true
2	true
5	true


-- !query
SELECT * FROM (SELECT udf(COUNT(*)) AS cnt FROM test_agg) WHERE cnt > 1L
-- !query schema
struct<cnt:bigint>
-- !query output
10


-- !query
SELECT udf(count(*)) FROM test_agg WHERE count(*) > 1L
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INVALID_WHERE_CONDITION",
  "sqlState" : "42903",
  "messageParameters" : {
    "condition" : "\"(count(1) > 1)\"",
    "expressionList" : "count(1)"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 54,
    "fragment" : "SELECT udf(count(*)) FROM test_agg WHERE count(*) > 1L"
  } ]
}


-- !query
SELECT udf(count(*)) FROM test_agg WHERE count(*) + 1L > 1L
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INVALID_WHERE_CONDITION",
  "sqlState" : "42903",
  "messageParameters" : {
    "condition" : "\"((count(1) + 1) > 1)\"",
    "expressionList" : "count(1)"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 59,
    "fragment" : "SELECT udf(count(*)) FROM test_agg WHERE count(*) + 1L > 1L"
  } ]
}


-- !query
SELECT udf(count(*)) FROM test_agg WHERE k = 1 or k = 2 or count(*) + 1L > 1L or max(k) > 1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INVALID_WHERE_CONDITION",
  "sqlState" : "42903",
  "messageParameters" : {
    "condition" : "\"(((k = 1) OR (k = 2)) OR (((count(1) + 1) > 1) OR (max(k) > 1)))\"",
    "expressionList" : "count(1), max(test_agg.k)"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 1,
    "stopIndex" : 91,
    "fragment" : "SELECT udf(count(*)) FROM test_agg WHERE k = 1 or k = 2 or count(*) + 1L > 1L or max(k) > 1"
  } ]
}
