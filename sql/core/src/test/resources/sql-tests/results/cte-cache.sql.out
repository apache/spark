-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 3


-- !query
CACHE TABLE cached_cte AS WITH cte1 AS ( SELECT 1 AS id, 'Alice' AS name UNION ALL SELECT 2 AS id, 'Bob' AS name ), cte2 AS ( SELECT 1 AS id, 10 AS score UNION ALL SELECT 2 AS id, 20 AS score ) SELECT cte1.id, cte1.name, cte2.score FROM cte1 JOIN cte2 ON cte1.id = cte2.id
-- !query schema
struct<>
-- !query output



-- !query
SELECT * FROM cached_cte
-- !query schema
struct<id:int,name:string,score:int>
-- !query output
1	Alice	10
2	Bob	20


-- !query
EXPLAIN EXTENDED SELECT * FROM cached_cte
-- !query schema
struct<plan:string>
-- !query output
== Parsed Logical Plan ==
'Project [*]
+- 'UnresolvedRelation [cached_cte], [], false

== Analyzed Logical Plan ==
id: int, name: string, score: int
Project [id#x, name#x, score#x]
+- SubqueryAlias cached_cte
   +- View (`cached_cte`, [id#x,name#x,score#x])
      +- Project [cast(id#x as int) AS id#x, cast(name#x as string) AS name#x, cast(score#x as int) AS score#x]
         +- WithCTE
            :- CTERelationDef 6, false
            :  +- SubqueryAlias cte1
            :     +- Union false, false
            :        :- Project [1 AS id#x, Alice AS name#x]
            :        :  +- OneRowRelation
            :        +- Project [2 AS id#x, Bob AS name#x]
            :           +- OneRowRelation
            :- CTERelationDef 7, false
            :  +- SubqueryAlias cte2
            :     +- Union false, false
            :        :- Project [1 AS id#x, 10 AS score#x]
            :        :  +- OneRowRelation
            :        +- Project [2 AS id#x, 20 AS score#x]
            :           +- OneRowRelation
            +- Project [id#x, name#x, score#x]
               +- Join Inner, (id#x = id#x)
                  :- SubqueryAlias cte1
                  :  +- CTERelationRef 6, true, [id#x, name#x]
                  +- SubqueryAlias cte2
                     +- CTERelationRef 7, true, [id#x, score#x]

== Optimized Logical Plan ==
InMemoryRelation [id#x, name#x, score#x], StorageLevel(disk, memory, deserialized, 1 replicas)
   +- *Project [id#x, name#x, score#x]
      +- *BroadcastHashJoin [id#x], [id#x], Inner, BuildRight, false
         :- Union
         :  :- *Project [1 AS id#x, Alice AS name#x]
         :  :  +- *Scan OneRowRelation[]
         :  +- *Project [2 AS id#x, Bob AS name#x]
         :     +- *Scan OneRowRelation[]
         +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=x]
            +- Union
               :- *Project [1 AS id#x, 10 AS score#x]
               :  +- *Scan OneRowRelation[]
               +- *Project [2 AS id#x, 20 AS score#x]
                  +- *Scan OneRowRelation[]

== Physical Plan ==
Scan In-memory table cached_cte [id#x, name#x, score#x]
   +- InMemoryRelation [id#x, name#x, score#x], StorageLevel(disk, memory, deserialized, 1 replicas)
         +- *Project [id#x, name#x, score#x]
            +- *BroadcastHashJoin [id#x], [id#x], Inner, BuildRight, false
               :- Union
               :  :- *Project [1 AS id#x, Alice AS name#x]
               :  :  +- *Scan OneRowRelation[]
               :  +- *Project [2 AS id#x, Bob AS name#x]
               :     +- *Scan OneRowRelation[]
               +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, false] as bigint)),false), [plan_id=x]
                  +- Union
                     :- *Project [1 AS id#x, 10 AS score#x]
                     :  +- *Scan OneRowRelation[]
                     +- *Project [2 AS id#x, 20 AS score#x]
                        +- *Scan OneRowRelation[]
