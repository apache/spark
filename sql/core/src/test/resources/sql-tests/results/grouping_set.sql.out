-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMPORARY VIEW grouping AS SELECT * FROM VALUES
  ("1", "2", "3", 1),
  ("4", "5", "6", 1),
  ("7", "8", "9", 1)
  as grouping(a, b, c, d)
-- !query schema
struct<>
-- !query output



-- !query
SELECT a, b, c, count(d) FROM grouping GROUP BY a, b, c GROUPING SETS (())
-- !query schema
struct<a:string,b:string,c:string,count(d):bigint>
-- !query output
NULL	NULL	NULL	3


-- !query
SELECT a, b, c, count(d) FROM grouping GROUP BY a, b, c GROUPING SETS ((a))
-- !query schema
struct<a:string,b:string,c:string,count(d):bigint>
-- !query output
1	NULL	NULL	1
4	NULL	NULL	1
7	NULL	NULL	1


-- !query
SELECT a, b, c, count(d) FROM grouping GROUP BY a, b, c GROUPING SETS ((c))
-- !query schema
struct<a:string,b:string,c:string,count(d):bigint>
-- !query output
NULL	NULL	3	1
NULL	NULL	6	1
NULL	NULL	9	1


-- !query
SELECT c1, sum(c2) FROM (VALUES ('x', 10, 0), ('y', 20, 0)) AS t (c1, c2, c3) GROUP BY GROUPING SETS (c1)
-- !query schema
struct<c1:string,sum(c2):bigint>
-- !query output
x	10
y	20


-- !query
SELECT c1, sum(c2), grouping(c1) FROM (VALUES ('x', 10, 0), ('y', 20, 0)) AS t (c1, c2, c3) GROUP BY GROUPING SETS (c1)
-- !query schema
struct<c1:string,sum(c2):bigint,grouping(c1):tinyint>
-- !query output
x	10	0
y	20	0


-- !query
SELECT c1, c2, Sum(c3), grouping__id
FROM   (VALUES ('x', 'a', 10), ('y', 'b', 20) ) AS t (c1, c2, c3)
GROUP  BY GROUPING SETS ( ( c1 ), ( c2 ) )
HAVING GROUPING__ID > 1
-- !query schema
struct<c1:string,c2:string,sum(c3):bigint,grouping__id:bigint>
-- !query output
NULL	a	10	2
NULL	b	20	2


-- !query
SELECT grouping(c1) FROM (VALUES ('x', 'a', 10), ('y', 'b', 20)) AS t (c1, c2, c3) GROUP BY GROUPING SETS (c1,c2)
-- !query schema
struct<grouping(c1):tinyint>
-- !query output
0
0
1
1


-- !query
SELECT -c1 AS c1 FROM (values (1,2), (3,2)) t(c1, c2) GROUP BY GROUPING SETS ((c1), (c1, c2))
-- !query schema
struct<c1:int>
-- !query output
-1
-1
-3
-3


-- !query
SELECT a + b, b, sum(c) FROM (VALUES (1,1,1),(2,2,2)) AS t(a,b,c) GROUP BY GROUPING SETS ( (a + b), (b))
-- !query schema
struct<(a + b):int,b:int,sum(c):bigint>
-- !query output
2	NULL	1
4	NULL	2
NULL	1	1
NULL	2	2


-- !query
SELECT a + b, b, sum(c) FROM (VALUES (1,1,1),(2,2,2)) AS t(a,b,c) GROUP BY GROUPING SETS ( (a + b), (b + a), (b))
-- !query schema
struct<(a + b):int,b:int,sum(c):bigint>
-- !query output
2	NULL	1
2	NULL	1
4	NULL	2
4	NULL	2
NULL	1	1
NULL	2	2


-- !query
SELECT c1 AS col1, c2 AS col2
FROM   (VALUES (1, 2), (3, 2)) t(c1, c2)
GROUP  BY GROUPING SETS ( ( c1 ), ( c1, c2 ) )
HAVING col2 IS NOT NULL
ORDER  BY -col1
-- !query schema
struct<col1:int,col2:int>
-- !query output
3	2
1	2


-- !query
SELECT a, b, c, count(d) FROM grouping GROUP BY WITH ROLLUP
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'ROLLUP'",
    "hint" : ": extra input 'ROLLUP'"
  }
}


-- !query
SELECT a, b, c, count(d) FROM grouping GROUP BY WITH CUBE
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'CUBE'",
    "hint" : ": extra input 'CUBE'"
  }
}


-- !query
SELECT c1 FROM (values (1,2), (3,2)) t(c1, c2) GROUP BY GROUPING SETS (())
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "MISSING_AGGREGATION",
  "sqlState" : "42803",
  "messageParameters" : {
    "expression" : "\"c1\"",
    "expressionAnyValue" : "\"any_value(c1)\""
  }
}


-- !query
SELECT k1, k2, avg(v) FROM (VALUES (1,1,1),(2,2,2)) AS t(k1,k2,v) GROUP BY GROUPING SETS ((k1),(k1,k2),(k2,k1))
-- !query schema
struct<k1:int,k2:int,avg(v):double>
-- !query output
1	1	1.0
1	1	1.0
1	NULL	1.0
2	2	2.0
2	2	2.0
2	NULL	2.0


-- !query
SELECT grouping__id, k1, k2, avg(v) FROM (VALUES (1,1,1),(2,2,2)) AS t(k1,k2,v) GROUP BY GROUPING SETS ((k1),(k1,k2),(k2,k1))
-- !query schema
struct<grouping__id:bigint,k1:int,k2:int,avg(v):double>
-- !query output
0	1	1	1.0
0	1	1	1.0
0	2	2	2.0
0	2	2	2.0
1	1	NULL	1.0
1	2	NULL	2.0


-- !query
SELECT grouping(k1), k1, k2, avg(v) FROM (VALUES (1,1,1),(2,2,2)) AS t(k1,k2,v) GROUP BY GROUPING SETS ((k1),(k1,k2),(k2,k1))
-- !query schema
struct<grouping(k1):tinyint,k1:int,k2:int,avg(v):double>
-- !query output
0	1	1	1.0
0	1	1	1.0
0	1	NULL	1.0
0	2	2	2.0
0	2	2	2.0
0	2	NULL	2.0


-- !query
SELECT grouping_id(k1, k2), avg(v) from (VALUES (1,1,1),(2,2,2)) AS t(k1,k2,v) GROUP BY k1, k2 GROUPING SETS ((k2, k1), k1)
-- !query schema
struct<grouping_id(k1, k2):bigint,avg(v):double>
-- !query output
0	1.0
0	2.0
1	1.0
1	2.0


-- !query
SELECT CASE WHEN a IS NULL THEN count(b) WHEN b IS NULL THEN count(c) END
FROM grouping
GROUP BY GROUPING SETS (a, b, c)
-- !query schema
struct<CASE WHEN (a IS NULL) THEN count(b) WHEN (b IS NULL) THEN count(c) END:bigint>
-- !query output
1
1
1
1
1
1
1
1
1
