-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE TEMP VIEW variant_test_data AS
SELECT
  parse_json('{ "price": 30 }') as int_price_variant,
  parse_json('{ "price": 12345.678 }') as double_price_variant,
  parse_json('{ "name": "John", "age": 30, "city": "New York", "active": true, "scores": [85, 92, 78] }') as multi_field_variant,
  parse_json('{ "item": [ { "model" : "basic", "price" : 6.12 }, { "model" : "medium", "price" : 9.24 } ] }') as array_value_variant,
  parse_json('[{ "id": 1, "name": "Alice" }, { "id": 2, "name": "Bob" }, { "id": 3, "name": "Charlie" }]') as array_variant,
  parse_json('{ "metadata": { "version": "1.0", "tags": ["important", "urgent"], "nested": { "level": 2, "value": "deep" } } }') as nested_variant,
  parse_json('{ "field-name": "value1", "field.name": "value2", "field_name": "value3" }') as special_chars_variant
-- !query schema
struct<>
-- !query output



-- !query
select int_price_variant:price from variant_test_data
-- !query schema
struct<price:variant>
-- !query output
30


-- !query
select int_price_variant:price::decimal(5, 2) from variant_test_data
-- !query schema
struct<price:decimal(5,2)>
-- !query output
30.00


-- !query
select int_price_variant:price::string from variant_test_data
-- !query schema
struct<price:string>
-- !query output
30


-- !query
select double_price_variant:price::decimal(3, 2) from variant_test_data
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkRuntimeException
{
  "errorClass" : "INVALID_VARIANT_CAST",
  "sqlState" : "22023",
  "messageParameters" : {
    "dataType" : "\"DECIMAL(3,2)\"",
    "value" : "12345.678"
  }
}


-- !query
select multi_field_variant:name, multi_field_variant:age, multi_field_variant:city from variant_test_data
-- !query schema
struct<name:variant,age:variant,city:variant>
-- !query output
"John"	30	"New York"


-- !query
select multi_field_variant:name::string, multi_field_variant:age::int, multi_field_variant:active::boolean from variant_test_data
-- !query schema
struct<name:string,age:int,active:boolean>
-- !query output
John	30	true


-- !query
select multi_field_variant:['name'] from variant_test_data
-- !query schema
struct<name:variant>
-- !query output
"John"


-- !query
select multi_field_variant:['age'] from variant_test_data
-- !query schema
struct<age:variant>
-- !query output
30


-- !query
select array_value_variant:item[0].model from variant_test_data
-- !query schema
struct<model:variant>
-- !query output
"basic"


-- !query
select array_value_variant:item[0].price from variant_test_data
-- !query schema
struct<price:variant>
-- !query output
6.12


-- !query
select array_value_variant:item[1].model from variant_test_data
-- !query schema
struct<model:variant>
-- !query output
"medium"


-- !query
select array_value_variant:item[1].price from variant_test_data
-- !query schema
struct<price:variant>
-- !query output
9.24


-- !query
select array_variant:[0].id from variant_test_data
-- !query schema
struct<id:variant>
-- !query output
1


-- !query
select array_variant:[0].name from variant_test_data
-- !query schema
struct<name:variant>
-- !query output
"Alice"


-- !query
select array_variant:[1].id from variant_test_data
-- !query schema
struct<id:variant>
-- !query output
2


-- !query
select array_variant:[1].name from variant_test_data
-- !query schema
struct<name:variant>
-- !query output
"Bob"


-- !query
select nested_variant:metadata.version from variant_test_data
-- !query schema
struct<version:variant>
-- !query output
"1.0"


-- !query
select nested_variant:metadata.tags[0] from variant_test_data
-- !query schema
struct<tags:variant>
-- !query output
"important"


-- !query
select nested_variant:metadata.nested.level from variant_test_data
-- !query schema
struct<level:variant>
-- !query output
2


-- !query
select nested_variant:metadata.nested.value from variant_test_data
-- !query schema
struct<value:variant>
-- !query output
"deep"


-- !query
select nested_variant:metadata['version'] from variant_test_data
-- !query schema
struct<version:variant>
-- !query output
"1.0"


-- !query
select nested_variant:metadata['tags'] from variant_test_data
-- !query schema
struct<tags:variant>
-- !query output
["important","urgent"]


-- !query
select special_chars_variant:`field-name`::string from variant_test_data
-- !query schema
struct<field-name:string>
-- !query output
value1


-- !query
select special_chars_variant:['field-name']::string from variant_test_data
-- !query schema
struct<field-name:string>
-- !query output
value1


-- !query
select special_chars_variant:field_name::string from variant_test_data
-- !query schema
struct<field_name:string>
-- !query output
value3


-- !query
select special_chars_variant:['field_name']::string from variant_test_data
-- !query schema
struct<field_name:string>
-- !query output
value3


-- !query
select special_chars_variant:`field.name`::string from variant_test_data
-- !query schema
struct<name:string>
-- !query output
NULL


-- !query
select special_chars_variant:['field.name']::string from variant_test_data
-- !query schema
struct<field.name:string>
-- !query output
value2


-- !query
select multi_field_variant:scores[0]::int + multi_field_variant:scores[1]::int from variant_test_data
-- !query schema
struct<(CAST(variant_get(multi_field_variant, $.scores[0]) AS scores AS INT) + CAST(variant_get(multi_field_variant, $.scores[1]) AS scores AS INT)):int>
-- !query output
177


-- !query
select count(*) from (select explode(cast(multi_field_variant:scores as array<int>)) as score from variant_test_data)
-- !query schema
struct<count(1):bigint>
-- !query output
3


-- !query
select * from variant_test_data
-- !query schema
struct<int_price_variant:variant,double_price_variant:variant,multi_field_variant:variant,array_value_variant:variant,array_variant:variant,nested_variant:variant,special_chars_variant:variant>
-- !query output
{"price":30}	{"price":12345.678}	{"active":true,"age":30,"city":"New York","name":"John","scores":[85,92,78]}	{"item":[{"model":"basic","price":6.12},{"model":"medium","price":9.24}]}	[{"id":1,"name":"Alice"},{"id":2,"name":"Bob"},{"id":3,"name":"Charlie"}]	{"metadata":{"nested":{"level":2,"value":"deep"},"tags":["important","urgent"],"version":"1.0"}}	{"field-name":"value1","field.name":"value2","field_name":"value3"}


-- !query
select multi_field_variant:* from variant_test_data
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'*'",
    "hint" : ""
  }
}


-- !query
select typeof(multi_field_variant:name) from variant_test_data
-- !query schema
struct<typeof(variant_get(multi_field_variant, $.name) AS name):string>
-- !query output
variant


-- !query
select typeof(multi_field_variant:age) from variant_test_data
-- !query schema
struct<typeof(variant_get(multi_field_variant, $.age) AS age):string>
-- !query output
variant


-- !query
select typeof(multi_field_variant:active) from variant_test_data
-- !query schema
struct<typeof(variant_get(multi_field_variant, $.active) AS active):string>
-- !query output
variant


-- !query
select typeof(multi_field_variant:scores) from variant_test_data
-- !query schema
struct<typeof(variant_get(multi_field_variant, $.scores) AS scores):string>
-- !query output
variant


-- !query
select isnull(multi_field_variant:missing_field) from variant_test_data
-- !query schema
struct<(variant_get(multi_field_variant, $.missing_field) AS missing_field IS NULL):boolean>
-- !query output
true


-- !query
select isnotnull(multi_field_variant:name) from variant_test_data
-- !query schema
struct<(variant_get(multi_field_variant, $.name) AS name IS NOT NULL):boolean>
-- !query output
true


-- !query
select coalesce(multi_field_variant:missing_field, 'default_value') from variant_test_data
-- !query schema
struct<coalesce(variant_get(multi_field_variant, $.missing_field) AS missing_field, default_value):variant>
-- !query output
"default_value"
