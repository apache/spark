-- Automatically generated by SQLQueryTestSuite
-- !query
create table t as
  select named_struct('u', named_struct('member0', member0, 'member1', member1)) as s
  from values (1, null), (null,  'a') tab(member0, member1)
-- !query schema
struct<>
-- !query output



-- !query
declare avro_schema string
-- !query schema
struct<>
-- !query output



-- !query
set variable avro_schema =
  '{ "type": "record", "name": "struct", "fields": [{ "name": "u", "type": ["int","string"] }] }'
-- !query schema
struct<>
-- !query output



-- !query
select from_avro(s, 42, map()) from t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.TYPE_CHECK_FAILURE_WITH_HINT",
  "sqlState" : "42K09",
  "messageParameters" : {
    "hint" : "",
    "msg" : "The second argument of the FROM_AVRO SQL function must be a constant string containing the JSON representation of the schema to use for converting the value from AVRO format",
    "sqlExpr" : "\"from_avro(s, 42, map())\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 30,
    "fragment" : "from_avro(s, 42, map())"
  } ]
}


-- !query
select from_avro(s, avro_schema, 42) from t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.TYPE_CHECK_FAILURE_WITH_HINT",
  "sqlState" : "42K09",
  "messageParameters" : {
    "hint" : "",
    "msg" : "The third argument of the FROM_AVRO SQL function must be a constant map of strings to strings containing the options to use for converting the value from AVRO format",
    "sqlExpr" : "\"from_avro(s, variablereference(system.session.avro_schema='{ \"type\": \"record\", \"name\": \"struct\", \"fields\": [{ \"name\": \"u\", \"type\": [\"int\",\"string\"] }] }'), 42)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 36,
    "fragment" : "from_avro(s, avro_schema, 42)"
  } ]
}


-- !query
select to_avro(s, 42) from t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.TYPE_CHECK_FAILURE_WITH_HINT",
  "sqlState" : "42K09",
  "messageParameters" : {
    "hint" : "",
    "msg" : "The second argument of the TO_AVRO SQL function must be a constant string containing the JSON representation of the schema to use for converting the value to AVRO format",
    "sqlExpr" : "\"to_avro(s, 42)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 21,
    "fragment" : "to_avro(s, 42)"
  } ]
}


-- !query
select to_avro(s, avro_schema) as result from t
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AVRO_NOT_LOADED_SQL_FUNCTIONS_UNUSABLE",
  "sqlState" : "22KD3",
  "messageParameters" : {
    "functionName" : "TO_AVRO"
  }
}


-- !query
select from_avro(result, avro_schema, map()).u from (select null as result)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "AVRO_NOT_LOADED_SQL_FUNCTIONS_UNUSABLE",
  "sqlState" : "22KD3",
  "messageParameters" : {
    "functionName" : "FROM_AVRO"
  }
}


-- !query
drop temporary variable avro_schema
-- !query schema
struct<>
-- !query output



-- !query
drop table t
-- !query schema
struct<>
-- !query output

