-- Automatically generated by SQLQueryTestSuite
-- !query
create table t1(s string, utf8_binary string collate utf8_binary, utf8_lcase string collate utf8_lcase) using parquet
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('Spark', 'Spark', 'SQL')
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('aaAaAAaA', 'aaAaAAaA', 'aaAaAAaA')
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('aaAaAAaA', 'aaAaAAaA', 'aaAaaAaA')
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('aaAaAAaA', 'aaAaAAaA', 'aaAaaAaAaaAaaAaAaaAaaAaA')
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('bbAbaAbA', 'bbAbAAbA', 'a')
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('İo', 'İo', 'İo')
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('İo', 'İo', 'İo ')
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('İo', 'İo ', 'İo')
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('İo', 'İo', 'i̇o')
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('efd2', 'efd2', 'efd2')
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('Hello, world! Nice day.', 'Hello, world! Nice day.', 'Hello, world! Nice day.')
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('Something else. Nothing here.', 'Something else. Nothing here.', 'Something else. Nothing here.')
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('kitten', 'kitten', 'sitTing')
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('abc', 'abc', 'abc')
-- !query schema
struct<>
-- !query output



-- !query
insert into t1 values ('abcdcba', 'abcdcba', 'aBcDCbA')
-- !query schema
struct<>
-- !query output



-- !query
select rpad(utf8_binary, 8, utf8_lcase) from t1
-- !query schema
struct<rpad(utf8_binary, 8, utf8_lcase):string collate null>
-- !query output
Hello, w
Somethin
SparkSQL
aaAaAAaA
aaAaAAaA
aaAaAAaA
abcabcab
abcdcbaa
bbAbAAbA
efd2efd2
kittensi
İo İoİoİ
İoi̇oi̇o
İoİo İo 
İoİoİoİo


-- !query
select rpad(s, 8, utf8_binary) from t1
-- !query schema
struct<rpad(s, 8, utf8_binary):string>
-- !query output
Hello, w
Somethin
SparkSpa
aaAaAAaA
aaAaAAaA
aaAaAAaA
abcabcab
abcdcbaa
bbAbaAbA
efd2efd2
kittenki
İoİo İo 
İoİoİoİo
İoİoİoİo
İoİoİoİo


-- !query
select rpad(utf8_binary collate utf8_binary, 8, s collate utf8_lcase) from t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "COLLATION_MISMATCH.EXPLICIT",
  "sqlState" : "42P21",
  "messageParameters" : {
    "explicitTypes" : "\"STRING\", \"STRING COLLATE UTF8_LCASE\""
  }
}


-- !query
select rpad(utf8_binary, 8, utf8_lcase collate utf8_binary) from t1
-- !query schema
struct<rpad(utf8_binary, 8, collate(utf8_lcase, utf8_binary)):string>
-- !query output
Hello, w
Somethin
SparkSQL
aaAaAAaA
aaAaAAaA
aaAaAAaA
abcabcab
abcdcbaa
bbAbAAbA
efd2efd2
kittensi
İo İoİoİ
İoi̇oi̇o
İoİo İo 
İoİoİoİo


-- !query
select rpad(utf8_binary collate utf8_lcase, 8, utf8_lcase collate utf8_lcase) from t1
-- !query schema
struct<rpad(collate(utf8_binary, utf8_lcase), 8, collate(utf8_lcase, utf8_lcase)):string collate UTF8_LCASE>
-- !query output
Hello, w
Somethin
SparkSQL
aaAaAAaA
aaAaAAaA
aaAaAAaA
abcabcab
abcdcbaa
bbAbAAbA
efd2efd2
kittensi
İo İoİoİ
İoi̇oi̇o
İoİo İo 
İoİoİoİo


-- !query
select lpad(utf8_binary collate utf8_binary_rtrim, 8, utf8_lcase collate utf8_binary_rtrim) from t1
-- !query schema
struct<lpad(collate(utf8_binary, utf8_binary_rtrim), 8, collate(utf8_lcase, utf8_binary_rtrim)):string collate UTF8_BINARY_RTRIM>
-- !query output
Hello, w
SQLSpark
Somethin
aaAaAAaA
aaAaAAaA
aaAaAAaA
aabcdcba
abcababc
bbAbAAbA
efd2efd2
i̇oi̇oİo
sikitten
İo İo İo
İoİoİoİo
İoİoİİo


-- !query
select rpad(utf8_binary, 8, 'a'), rpad(utf8_lcase, 8, 'a') from t1
-- !query schema
struct<rpad(utf8_binary, 8, a):string,rpad(utf8_lcase, 8, 'a' collate UTF8_LCASE):string collate UTF8_LCASE>
-- !query output
Hello, w	Hello, w
Somethin	Somethin
Sparkaaa	SQLaaaaa
aaAaAAaA	aaAaAAaA
aaAaAAaA	aaAaaAaA
aaAaAAaA	aaAaaAaA
abcaaaaa	abcaaaaa
abcdcbaa	aBcDCbAa
bbAbAAbA	aaaaaaaa
efd2aaaa	efd2aaaa
kittenaa	sitTinga
İo aaaaa	İoaaaaaa
İoaaaaaa	i̇oaaaaa
İoaaaaaa	İo aaaaa
İoaaaaaa	İoaaaaaa


-- !query
select rpad(utf8_binary, 8, 'AaAA' collate utf8_lcase), rpad(utf8_lcase, 8, 'AAa' collate utf8_binary) from t1
-- !query schema
struct<rpad(utf8_binary, 8, collate(AaAA, utf8_lcase)):string collate UTF8_LCASE,rpad(utf8_lcase, 8, collate(AAa, utf8_binary)):string>
-- !query output
Hello, w	Hello, w
Somethin	Somethin
SparkAaA	SQLAAaAA
aaAaAAaA	aaAaAAaA
aaAaAAaA	aaAaaAaA
aaAaAAaA	aaAaaAaA
abcAaAAA	abcAAaAA
abcdcbaA	aBcDCbAA
bbAbAAbA	aAAaAAaA
efd2AaAA	efd2AAaA
kittenAa	sitTingA
İo AaAAA	İoAAaAAa
İoAaAAAa	i̇oAAaAA
İoAaAAAa	İo AAaAA
İoAaAAAa	İoAAaAAa


-- !query
select lpad(utf8_binary, 8, utf8_lcase) from t1
-- !query schema
struct<lpad(utf8_binary, 8, utf8_lcase):string collate null>
-- !query output
Hello, w
SQLSpark
Somethin
aaAaAAaA
aaAaAAaA
aaAaAAaA
aabcdcba
abcababc
bbAbAAbA
efd2efd2
i̇oi̇oİo
sikitten
İo İo İo
İoİoİoİo
İoİoİİo


-- !query
select lpad(s, 8, utf8_binary) from t1
-- !query schema
struct<lpad(s, 8, utf8_binary):string>
-- !query output
Hello, w
Somethin
SpaSpark
aaAaAAaA
aaAaAAaA
aaAaAAaA
aabcdcba
abcababc
bbAbaAbA
efd2efd2
kikitten
İo İo İo
İoİoİoİo
İoİoİoİo
İoİoİoİo


-- !query
select lpad(utf8_binary collate utf8_binary, 8, s collate utf8_lcase) from t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "COLLATION_MISMATCH.EXPLICIT",
  "sqlState" : "42P21",
  "messageParameters" : {
    "explicitTypes" : "\"STRING\", \"STRING COLLATE UTF8_LCASE\""
  }
}


-- !query
select lpad(utf8_binary, 8, utf8_lcase collate utf8_binary) from t1
-- !query schema
struct<lpad(utf8_binary, 8, collate(utf8_lcase, utf8_binary)):string>
-- !query output
Hello, w
SQLSpark
Somethin
aaAaAAaA
aaAaAAaA
aaAaAAaA
aabcdcba
abcababc
bbAbAAbA
efd2efd2
i̇oi̇oİo
sikitten
İo İo İo
İoİoİoİo
İoİoİİo


-- !query
select lpad(utf8_binary collate utf8_lcase, 8, utf8_lcase collate utf8_lcase) from t1
-- !query schema
struct<lpad(collate(utf8_binary, utf8_lcase), 8, collate(utf8_lcase, utf8_lcase)):string collate UTF8_LCASE>
-- !query output
Hello, w
SQLSpark
Somethin
aaAaAAaA
aaAaAAaA
aaAaAAaA
aabcdcba
abcababc
bbAbAAbA
efd2efd2
i̇oi̇oİo
sikitten
İo İo İo
İoİoİoİo
İoİoİİo


-- !query
select lpad(utf8_binary collate utf8_binary_rtrim, 8, utf8_lcase collate utf8_binary_rtrim) from t1
-- !query schema
struct<lpad(collate(utf8_binary, utf8_binary_rtrim), 8, collate(utf8_lcase, utf8_binary_rtrim)):string collate UTF8_BINARY_RTRIM>
-- !query output
Hello, w
SQLSpark
Somethin
aaAaAAaA
aaAaAAaA
aaAaAAaA
aabcdcba
abcababc
bbAbAAbA
efd2efd2
i̇oi̇oİo
sikitten
İo İo İo
İoİoİoİo
İoİoİİo


-- !query
select lpad(utf8_binary, 8, 'a'), lpad(utf8_lcase, 8, 'a') from t1
-- !query schema
struct<lpad(utf8_binary, 8, a):string,lpad(utf8_lcase, 8, 'a' collate UTF8_LCASE):string collate UTF8_LCASE>
-- !query output
Hello, w	Hello, w
Somethin	Somethin
aaAaAAaA	aaAaAAaA
aaAaAAaA	aaAaaAaA
aaAaAAaA	aaAaaAaA
aaaSpark	aaaaaSQL
aaaaaabc	aaaaaabc
aaaaaaİo	aaaaaaİo
aaaaaaİo	aaaaai̇o
aaaaaaİo	aaaaaİo 
aaaaaİo 	aaaaaaİo
aaaaefd2	aaaaefd2
aabcdcba	aaBcDCbA
aakitten	asitTing
bbAbAAbA	aaaaaaaa


-- !query
select lpad(utf8_binary, 8, 'AaAA' collate utf8_lcase), lpad(utf8_lcase, 8, 'AAa' collate utf8_binary) from t1
-- !query schema
struct<lpad(utf8_binary, 8, collate(AaAA, utf8_lcase)):string collate UTF8_LCASE,lpad(utf8_lcase, 8, collate(AAa, utf8_binary)):string>
-- !query output
AaAAAabc	AAaAAabc
AaAAAaİo	AAaAAaİo
AaAAAaİo	AAaAAi̇o
AaAAAaİo	AAaAAİo 
AaAAAİo 	AAaAAaİo
AaAAefd2	AAaAefd2
AaASpark	AAaAASQL
Aabcdcba	AaBcDCbA
Aakitten	AsitTing
Hello, w	Hello, w
Somethin	Somethin
aaAaAAaA	aaAaAAaA
aaAaAAaA	aaAaaAaA
aaAaAAaA	aaAaaAaA
bbAbAAbA	AAaAAaAa


-- !query
select TRIM(utf8_binary, utf8_lcase) from t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INDETERMINATE_COLLATION_IN_EXPRESSION",
  "sqlState" : "42P22",
  "messageParameters" : {
    "expr" : "\"TRIM(BOTH utf8_binary FROM utf8_lcase)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 36,
    "fragment" : "TRIM(utf8_binary, utf8_lcase)"
  } ]
}


-- !query
select TRIM(s, utf8_binary) from t1
-- !query schema
struct<TRIM(BOTH s FROM utf8_binary):string>
-- !query output



-- !query
select TRIM(utf8_binary collate utf8_binary, s collate utf8_lcase) from t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "COLLATION_MISMATCH.EXPLICIT",
  "sqlState" : "42P21",
  "messageParameters" : {
    "explicitTypes" : "\"STRING COLLATE UTF8_LCASE\", \"STRING\""
  }
}


-- !query
select TRIM(utf8_binary, utf8_lcase collate utf8_binary) from t1
-- !query schema
struct<TRIM(BOTH utf8_binary FROM collate(utf8_lcase, utf8_binary)):string>
-- !query output









 
BcDCbA
QL
a
i̇
sitTing


-- !query
select TRIM(utf8_binary collate utf8_lcase, utf8_lcase collate utf8_lcase) from t1
-- !query schema
struct<TRIM(BOTH collate(utf8_binary, utf8_lcase) FROM collate(utf8_lcase, utf8_lcase)):string collate UTF8_LCASE>
-- !query output












 
QL
sitTing


-- !query
select TRIM(utf8_binary collate unicode_ai, utf8_lcase collate unicode_ai) from t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"collate(utf8_lcase, unicode_ai)\"",
    "inputType" : "\"STRING COLLATE UNICODE_AI\"",
    "paramIndex" : "first",
    "requiredType" : "\"STRING\"",
    "sqlExpr" : "\"TRIM(BOTH collate(utf8_binary, unicode_ai) FROM collate(utf8_lcase, unicode_ai))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 74,
    "fragment" : "TRIM(utf8_binary collate unicode_ai, utf8_lcase collate unicode_ai)"
  } ]
}


-- !query
select TRIM(utf8_binary collate utf8_binary_rtrim, utf8_lcase collate utf8_binary_rtrim) from t1
-- !query schema
struct<TRIM(BOTH collate(utf8_binary, utf8_binary_rtrim) FROM collate(utf8_lcase, utf8_binary_rtrim)):string collate UTF8_BINARY_RTRIM>
-- !query output









 
BcDCbA
QL
a
i̇
sitTing


-- !query
select TRIM('ABc', utf8_binary), TRIM('ABc', utf8_lcase) from t1
-- !query schema
struct<TRIM(BOTH ABc FROM utf8_binary):string,TRIM(BOTH 'ABc' collate UTF8_LCASE FROM utf8_lcase):string collate UTF8_LCASE>
-- !query output
Hello, world! Nice day.	Hello, world! Nice day.
Something else. Nothing here.	Something else. Nothing here.
Spark	SQL
aaAaAAa	
aaAaAAa	
aaAaAAa	
ab	
abcdcba	D
bbAbAAb	
efd2	efd2
kitten	sitTing
İo	i̇o
İo	İo
İo	İo 
İo 	İo


-- !query
select TRIM('ABc' collate utf8_lcase, utf8_binary), TRIM('AAa' collate utf8_binary, utf8_lcase) from t1
-- !query schema
struct<TRIM(BOTH collate(ABc, utf8_lcase) FROM utf8_binary):string collate UTF8_LCASE,TRIM(BOTH collate(AAa, utf8_binary) FROM utf8_lcase):string>
-- !query output
	
	
	
	
	bc
Hello, world! Nice day.	Hello, world! Nice day.
Something else. Nothing here.	Something else. Nothing here.
Spark	SQL
d	BcDCb
efd2	efd2
kitten	sitTing
İo	i̇o
İo	İo
İo	İo 
İo 	İo


-- !query
select BTRIM(utf8_binary, utf8_lcase) from t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INDETERMINATE_COLLATION_IN_EXPRESSION",
  "sqlState" : "42P22",
  "messageParameters" : {
    "expr" : "\"TRIM(BOTH utf8_lcase FROM utf8_binary)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 37,
    "fragment" : "BTRIM(utf8_binary, utf8_lcase)"
  } ]
}


-- !query
select BTRIM(s, utf8_binary) from t1
-- !query schema
struct<btrim(s, utf8_binary):string>
-- !query output














a


-- !query
select BTRIM(utf8_binary collate utf8_binary, s collate utf8_lcase) from t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "COLLATION_MISMATCH.EXPLICIT",
  "sqlState" : "42P21",
  "messageParameters" : {
    "explicitTypes" : "\"STRING\", \"STRING COLLATE UTF8_LCASE\""
  }
}


-- !query
select BTRIM(utf8_binary, utf8_lcase collate utf8_binary) from t1
-- !query schema
struct<btrim(utf8_binary, collate(utf8_lcase, utf8_binary)):string>
-- !query output









 
bbAbAAbA
d
kitte
park
İ


-- !query
select BTRIM(utf8_binary collate utf8_lcase, utf8_lcase collate utf8_lcase) from t1
-- !query schema
struct<btrim(collate(utf8_binary, utf8_lcase), collate(utf8_lcase, utf8_lcase)):string collate UTF8_LCASE>
-- !query output










 
bbAbAAb
kitte
park
İ


-- !query
select BTRIM(utf8_binary collate unicode_ai, utf8_lcase collate unicode_ai) from t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"collate(utf8_binary, unicode_ai)\"",
    "inputType" : "\"STRING COLLATE UNICODE_AI\"",
    "paramIndex" : "first",
    "requiredType" : "\"STRING\"",
    "sqlExpr" : "\"TRIM(BOTH collate(utf8_lcase, unicode_ai) FROM collate(utf8_binary, unicode_ai))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 75,
    "fragment" : "BTRIM(utf8_binary collate unicode_ai, utf8_lcase collate unicode_ai)"
  } ]
}


-- !query
select BTRIM(utf8_binary collate utf8_binary_rtrim, utf8_lcase collate utf8_binary_rtrim) from t1
-- !query schema
struct<btrim(collate(utf8_binary, utf8_binary_rtrim), collate(utf8_lcase, utf8_binary_rtrim)):string collate UTF8_BINARY_RTRIM>
-- !query output









 
bbAbAAbA
d
kitte
park
İ


-- !query
select BTRIM('ABc', utf8_binary), BTRIM('ABc', utf8_lcase) from t1
-- !query schema
struct<btrim(ABc, utf8_binary):string,btrim(ABc, utf8_lcase):string collate UTF8_LCASE>
-- !query output
AB	
AB	
AB	B
ABc	ABc
ABc	ABc
ABc	ABc
ABc	ABc
ABc	ABc
ABc	ABc
ABc	ABc
ABc	ABc
Bc	Bc
Bc	Bc
Bc	Bc
Bc	Bc


-- !query
select BTRIM('ABc' collate utf8_lcase, utf8_binary), BTRIM('AAa' collate utf8_binary, utf8_lcase) from t1
-- !query schema
struct<btrim(collate(ABc, utf8_lcase), utf8_binary):string collate UTF8_LCASE,btrim(collate(AAa, utf8_binary), utf8_lcase):string>
-- !query output
	
	AA
ABc	AAa
ABc	AAa
ABc	AAa
ABc	AAa
ABc	AAa
ABc	AAa
ABc	AAa
B	AA
Bc	
Bc	
Bc	
Bc	AAa
c	AA


-- !query
select LTRIM(utf8_binary, utf8_lcase) from t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INDETERMINATE_COLLATION_IN_EXPRESSION",
  "sqlState" : "42P22",
  "messageParameters" : {
    "expr" : "\"TRIM(LEADING utf8_binary FROM utf8_lcase)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 37,
    "fragment" : "LTRIM(utf8_binary, utf8_lcase)"
  } ]
}


-- !query
select LTRIM(s, utf8_binary) from t1
-- !query schema
struct<TRIM(LEADING s FROM utf8_binary):string>
-- !query output



-- !query
select LTRIM(utf8_binary collate utf8_binary, s collate utf8_lcase) from t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "COLLATION_MISMATCH.EXPLICIT",
  "sqlState" : "42P21",
  "messageParameters" : {
    "explicitTypes" : "\"STRING COLLATE UTF8_LCASE\", \"STRING\""
  }
}


-- !query
select LTRIM(utf8_binary, utf8_lcase collate utf8_binary) from t1
-- !query schema
struct<TRIM(LEADING utf8_binary FROM collate(utf8_lcase, utf8_binary)):string>
-- !query output









 
BcDCbA
QL
a
i̇o
sitTing


-- !query
select LTRIM(utf8_binary collate utf8_lcase, utf8_lcase collate utf8_lcase) from t1
-- !query schema
struct<TRIM(LEADING collate(utf8_binary, utf8_lcase) FROM collate(utf8_lcase, utf8_lcase)):string collate UTF8_LCASE>
-- !query output












 
QL
sitTing


-- !query
select LTRIM(utf8_binary collate unicode_ai, utf8_lcase collate unicode_ai) from t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"collate(utf8_lcase, unicode_ai)\"",
    "inputType" : "\"STRING COLLATE UNICODE_AI\"",
    "paramIndex" : "first",
    "requiredType" : "\"STRING\"",
    "sqlExpr" : "\"TRIM(LEADING collate(utf8_binary, unicode_ai) FROM collate(utf8_lcase, unicode_ai))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 75,
    "fragment" : "LTRIM(utf8_binary collate unicode_ai, utf8_lcase collate unicode_ai)"
  } ]
}


-- !query
select LTRIM(utf8_binary collate utf8_binary_rtrim, utf8_lcase collate utf8_binary_rtrim) from t1
-- !query schema
struct<TRIM(LEADING collate(utf8_binary, utf8_binary_rtrim) FROM collate(utf8_lcase, utf8_binary_rtrim)):string collate UTF8_BINARY_RTRIM>
-- !query output









 
BcDCbA
QL
a
i̇o
sitTing


-- !query
select LTRIM('ABc', utf8_binary), LTRIM('ABc', utf8_lcase) from t1
-- !query schema
struct<TRIM(LEADING ABc FROM utf8_binary):string,TRIM(LEADING 'ABc' collate UTF8_LCASE FROM utf8_lcase):string collate UTF8_LCASE>
-- !query output
Hello, world! Nice day.	Hello, world! Nice day.
Something else. Nothing here.	Something else. Nothing here.
Spark	SQL
aaAaAAaA	
aaAaAAaA	
aaAaAAaA	
abc	
abcdcba	DCbA
bbAbAAbA	
efd2	efd2
kitten	sitTing
İo	i̇o
İo	İo
İo	İo 
İo 	İo


-- !query
select LTRIM('ABc' collate utf8_lcase, utf8_binary), LTRIM('AAa' collate utf8_binary, utf8_lcase) from t1
-- !query schema
struct<TRIM(LEADING collate(ABc, utf8_lcase) FROM utf8_binary):string collate UTF8_LCASE,TRIM(LEADING collate(AAa, utf8_binary) FROM utf8_lcase):string>
-- !query output
	
	
	
	
	bc
Hello, world! Nice day.	Hello, world! Nice day.
Something else. Nothing here.	Something else. Nothing here.
Spark	SQL
dcba	BcDCbA
efd2	efd2
kitten	sitTing
İo	i̇o
İo	İo
İo	İo 
İo 	İo


-- !query
select RTRIM(utf8_binary, utf8_lcase) from t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INDETERMINATE_COLLATION_IN_EXPRESSION",
  "sqlState" : "42P22",
  "messageParameters" : {
    "expr" : "\"TRIM(TRAILING utf8_binary FROM utf8_lcase)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 37,
    "fragment" : "RTRIM(utf8_binary, utf8_lcase)"
  } ]
}


-- !query
select RTRIM(s, utf8_binary) from t1
-- !query schema
struct<TRIM(TRAILING s FROM utf8_binary):string>
-- !query output














İo


-- !query
select RTRIM(utf8_binary collate utf8_binary, s collate utf8_lcase) from t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "COLLATION_MISMATCH.EXPLICIT",
  "sqlState" : "42P21",
  "messageParameters" : {
    "explicitTypes" : "\"STRING COLLATE UTF8_LCASE\", \"STRING\""
  }
}


-- !query
select RTRIM(utf8_binary, utf8_lcase collate utf8_binary) from t1
-- !query schema
struct<TRIM(TRAILING utf8_binary FROM collate(utf8_lcase, utf8_binary)):string>
-- !query output









SQL
a
aBcDCbA
i̇
sitTing
İo


-- !query
select RTRIM(utf8_binary collate utf8_lcase, utf8_lcase collate utf8_lcase) from t1
-- !query schema
struct<TRIM(TRAILING collate(utf8_binary, utf8_lcase) FROM collate(utf8_lcase, utf8_lcase)):string collate UTF8_LCASE>
-- !query output












SQL
sitTing
İo


-- !query
select RTRIM(utf8_binary collate unicode_ai, utf8_lcase collate unicode_ai) from t1
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"collate(utf8_lcase, unicode_ai)\"",
    "inputType" : "\"STRING COLLATE UNICODE_AI\"",
    "paramIndex" : "first",
    "requiredType" : "\"STRING\"",
    "sqlExpr" : "\"TRIM(TRAILING collate(utf8_binary, unicode_ai) FROM collate(utf8_lcase, unicode_ai))\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 75,
    "fragment" : "RTRIM(utf8_binary collate unicode_ai, utf8_lcase collate unicode_ai)"
  } ]
}


-- !query
select RTRIM(utf8_binary collate utf8_binary_rtrim, utf8_lcase collate utf8_binary_rtrim) from t1
-- !query schema
struct<TRIM(TRAILING collate(utf8_binary, utf8_binary_rtrim) FROM collate(utf8_lcase, utf8_binary_rtrim)):string collate UTF8_BINARY_RTRIM>
-- !query output









 
SQL
a
aBcDCbA
i̇
sitTing


-- !query
select RTRIM('ABc', utf8_binary), RTRIM('ABc', utf8_lcase) from t1
-- !query schema
struct<TRIM(TRAILING ABc FROM utf8_binary):string,TRIM(TRAILING 'ABc' collate UTF8_LCASE FROM utf8_lcase):string collate UTF8_LCASE>
-- !query output
Hello, world! Nice day.	Hello, world! Nice day.
Something else. Nothing here.	Something else. Nothing here.
Spark	SQL
aaAaAAa	
aaAaAAa	
aaAaAAa	
ab	
abcdcba	aBcD
bbAbAAb	
efd2	efd2
kitten	sitTing
İo	i̇o
İo	İo
İo	İo 
İo 	İo


-- !query
select RTRIM('ABc' collate utf8_lcase, utf8_binary), RTRIM('AAa' collate utf8_binary, utf8_lcase) from t1
-- !query schema
struct<TRIM(TRAILING collate(ABc, utf8_lcase) FROM utf8_binary):string collate UTF8_LCASE,TRIM(TRAILING collate(AAa, utf8_binary) FROM utf8_lcase):string>
-- !query output
	
	
	
	
	abc
Hello, world! Nice day.	Hello, world! Nice day.
Something else. Nothing here.	Something else. Nothing here.
Spark	SQL
abcd	aBcDCb
efd2	efd2
kitten	sitTing
İo	i̇o
İo	İo
İo	İo 
İo 	İo


-- !query
drop table t1
-- !query schema
struct<>
-- !query output

