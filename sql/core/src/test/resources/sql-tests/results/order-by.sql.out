-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW testData AS SELECT * FROM VALUES
(1, 1), (1, 2), (2, 1), (2, 2), (3, 1), (3, 2), (null, 1), (3, null), (null, null)
AS testData(a, b)
-- !query schema
struct<>
-- !query output



-- !query
SELECT a FROM testData ORDER BY a
-- !query schema
struct<a:int>
-- !query output
NULL
NULL
1
1
2
2
3
3
3


-- !query
SELECT a FROM testData GROUP BY a, b ORDER BY a
-- !query schema
struct<a:int>
-- !query output
NULL
NULL
1
1
2
2
3
3
3


-- !query
SELECT b FROM testData WHERE a > 1 ORDER BY a
-- !query schema
struct<b:int>
-- !query output
1
2
1
2
NULL


-- !query
SELECT b FROM testData GROUP BY a, b ORDER BY a
-- !query schema
struct<b:int>
-- !query output
NULL
1
2
1
1
2
1
2
NULL


-- !query
SELECT col1 FROM VALUES (1, named_struct('f1', 1)) ORDER BY col2.f1
-- !query schema
struct<col1:int>
-- !query output
1


-- !query
SELECT col1 FROM VALUES (1, named_struct('f1', named_struct('f2', 1))) ORDER BY col2.f1.f2
-- !query schema
struct<col1:int>
-- !query output
1


-- !query
SELECT a, (SELECT b FROM testData GROUP BY b HAVING b > 1 ORDER BY a) FROM testData
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNSUPPORTED_SUBQUERY_EXPRESSION_CATEGORY.CORRELATED_REFERENCE",
  "sqlState" : "0A000",
  "messageParameters" : {
    "sqlExprs" : "\"a ASC NULLS FIRST\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 59,
    "stopIndex" : 68,
    "fragment" : "ORDER BY a"
  } ]
}


-- !query
SELECT a, (SELECT b FROM VALUES (1, 2) AS innerTestData (all, b) ORDER BY ALL) FROM testData
-- !query schema
struct<a:int,scalarsubquery():int>
-- !query output
1	2
1	2
2	2
2	2
3	2
3	2
3	2
NULL	2
NULL	2


-- !query
SELECT * FROM testData ORDER BY (SELECT a FROM testData ORDER BY b)
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkException
{
  "errorClass" : "SCALAR_SUBQUERY_TOO_MANY_ROWS",
  "sqlState" : "21000",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 33,
    "stopIndex" : 67,
    "fragment" : "(SELECT a FROM testData ORDER BY b)"
  } ]
}


-- !query
SELECT * FROM testData ORDER BY (SELECT * FROM testData ORDER BY (SELECT a FROM testData ORDER BY b))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "INVALID_SUBQUERY_EXPRESSION.SCALAR_SUBQUERY_RETURN_MORE_THAN_ONE_OUTPUT_COLUMN",
  "sqlState" : "42823",
  "messageParameters" : {
    "number" : "2"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 33,
    "stopIndex" : 101,
    "fragment" : "(SELECT * FROM testData ORDER BY (SELECT a FROM testData ORDER BY b))"
  } ]
}


-- !query
SELECT * FROM testData ORDER BY (SELECT a FROM VALUES (1))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNSUPPORTED_SUBQUERY_EXPRESSION_CATEGORY.UNSUPPORTED_CORRELATED_SCALAR_SUBQUERY",
  "sqlState" : "0A000",
  "messageParameters" : {
    "treeNode" : "Sort [scalar-subquery#x [a#x] ASC NULLS FIRST], true\n:  +- Project [outer(a#x)]\n:     +- LocalRelation [col1#x]\n+- Project [a#x, b#x]\n   +- SubqueryAlias testdata\n      +- View (`testData`, [a#x, b#x])\n         +- Project [cast(a#x as int) AS a#x, cast(b#x as int) AS b#x]\n            +- Project [a#x, b#x]\n               +- SubqueryAlias testData\n                  +- LocalRelation [a#x, b#x]\n"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 24,
    "stopIndex" : 58,
    "fragment" : "ORDER BY (SELECT a FROM VALUES (1))"
  } ]
}


-- !query
DROP VIEW IF EXISTS testData
-- !query schema
struct<>
-- !query output

