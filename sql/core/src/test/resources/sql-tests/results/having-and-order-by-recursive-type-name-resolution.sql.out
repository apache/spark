-- Automatically generated by SQLQueryTestSuite
-- !query
SELECT 'a' AS col1 FROM VALUES (NAMED_STRUCT('a', 1)) t (col1) GROUP BY col1 ORDER BY col1.a
-- !query schema
struct<col1:string>
-- !query output
a


-- !query
SELECT 'a' AS col1 FROM VALUES (NAMED_STRUCT('a', 1)) t (col1) GROUP BY col1 HAVING col1.a > 0
-- !query schema
struct<col1:string>
-- !query output
a


-- !query
SELECT 'a' AS col1 FROM VALUES (NAMED_STRUCT('a', 1)) t (col1) GROUP BY col1 HAVING col1.a > 0 ORDER BY col1.a
-- !query schema
struct<col1:string>
-- !query output
a


-- !query
SELECT NAMED_STRUCT('a', 1) AS col1 FROM VALUES ('a') t (col1) GROUP BY col1 ORDER BY col1.a
-- !query schema
struct<col1:struct<a:int>>
-- !query output
{"a":1}


-- !query
SELECT NAMED_STRUCT('a', 1) AS col1 FROM VALUES ('a') t (col1) GROUP BY col1 HAVING col1.a > 0
-- !query schema
struct<col1:struct<a:int>>
-- !query output
{"a":1}


-- !query
SELECT NAMED_STRUCT('a', 1) AS col1 FROM VALUES ('a') t (col1) GROUP BY col1 HAVING col1.a > 0 ORDER BY col1.a
-- !query schema
struct<col1:struct<a:int>>
-- !query output
{"a":1}


-- !query
SELECT NAMED_STRUCT('a', 1) AS col1 FROM VALUES (NAMED_STRUCT('a', 0)) t (col1) GROUP BY col1 ORDER BY col1.a
-- !query schema
struct<col1:struct<a:int>>
-- !query output
{"a":1}


-- !query
SELECT NAMED_STRUCT('a', 1) AS col1 FROM VALUES (NAMED_STRUCT('a', 0)) t (col1) GROUP BY col1 HAVING col1.a > 0
-- !query schema
struct<col1:struct<a:int>>
-- !query output



-- !query
SELECT NAMED_STRUCT('a', 1) AS col1 FROM VALUES (NAMED_STRUCT('a', 0)) t (col1) GROUP BY col1 HAVING col1.a > 0 ORDER BY col1.a
-- !query schema
struct<col1:struct<a:int>>
-- !query output



-- !query
SELECT 'a' AS col1 FROM VALUES (ARRAY(1)) t (col1) GROUP BY col1 ORDER BY col1[0]
-- !query schema
struct<col1:string>
-- !query output
a


-- !query
SELECT 'a' AS col1 FROM VALUES (ARRAY(1)) t (col1) GROUP BY col1 HAVING col1[0] > 0
-- !query schema
struct<col1:string>
-- !query output
a


-- !query
SELECT 'a' AS col1 FROM VALUES (ARRAY(1)) t (col1) GROUP BY col1 HAVING col1[0] > 0 ORDER BY col1[0]
-- !query schema
struct<col1:string>
-- !query output
a


-- !query
SELECT ARRAY(1) AS col1 FROM VALUES ('a') t (col1) GROUP BY col1 ORDER BY col1[0]
-- !query schema
struct<col1:array<int>>
-- !query output
[1]


-- !query
SELECT ARRAY(1) AS col1 FROM VALUES ('a') t (col1) GROUP BY col1 HAVING col1[0] > 0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_EXTRACT_BASE_FIELD_TYPE",
  "sqlState" : "42000",
  "messageParameters" : {
    "base" : "\"tempresolvedcolumn(col1)\"",
    "other" : "\"STRING\""
  }
}


-- !query
SELECT NAMED_STRUCT('a', NAMED_STRUCT('b', 1)) AS col1 FROM VALUES ('a') t (col1) GROUP BY col1 ORDER BY col1.a.b
-- !query schema
struct<col1:struct<a:struct<b:int>>>
-- !query output
{"a":{"b":1}}


-- !query
SELECT NAMED_STRUCT('a', NAMED_STRUCT('b', 1)) AS col1 FROM VALUES ('a') t (col1) GROUP BY col1 HAVING col1.a.b > 0
-- !query schema
struct<col1:struct<a:struct<b:int>>>
-- !query output
{"a":{"b":1}}


-- !query
SELECT NAMED_STRUCT('a', NAMED_STRUCT('b', 1)) AS col1 FROM VALUES ('a') t (col1) GROUP BY col1 HAVING col1.a.b > 0 ORDER BY col1.a.b
-- !query schema
struct<col1:struct<a:struct<b:int>>>
-- !query output
{"a":{"b":1}}


-- !query
SELECT ARRAY(NAMED_STRUCT('a', 1)) AS col1 FROM VALUES ('a') t (col1) GROUP BY col1 ORDER BY col1[0].a
-- !query schema
struct<col1:array<struct<a:int>>>
-- !query output
[{"a":1}]


-- !query
SELECT ARRAY(NAMED_STRUCT('a', 1)) AS col1 FROM VALUES ('a') t (col1) GROUP BY col1 HAVING col1[0].a > 0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_EXTRACT_BASE_FIELD_TYPE",
  "sqlState" : "42000",
  "messageParameters" : {
    "base" : "\"tempresolvedcolumn(col1)\"",
    "other" : "\"STRING\""
  }
}


-- !query
SELECT 'a' AS col1 FROM VALUES (MAP('key', 1)) t (col1) GROUP BY col1 ORDER BY col1['key']
-- !query schema
struct<col1:string>
-- !query output
a


-- !query
SELECT 'a' AS col1 FROM VALUES (MAP('key', 1)) t (col1) GROUP BY col1 HAVING col1['key'] > 0
-- !query schema
struct<col1:string>
-- !query output
a


-- !query
SELECT 'a' AS col1 FROM VALUES (MAP('key', 1)) t (col1) GROUP BY col1 HAVING col1['key'] > 0 ORDER BY col1['key']
-- !query schema
struct<col1:string>
-- !query output
a


-- !query
SELECT MAP('key', 1) AS col1 FROM VALUES ('a') t (col1) GROUP BY col1 ORDER BY col1['key']
-- !query schema
struct<col1:map<string,int>>
-- !query output
{"key":1}


-- !query
SELECT MAP('key', 1) AS col1 FROM VALUES ('a') t (col1) GROUP BY col1 HAVING col1['key'] > 0
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "INVALID_EXTRACT_BASE_FIELD_TYPE",
  "sqlState" : "42000",
  "messageParameters" : {
    "base" : "\"tempresolvedcolumn(col1)\"",
    "other" : "\"STRING\""
  }
}


-- !query
SELECT named_struct('a',1) as col, col1
FROM values(named_struct('a',1))
ORDER BY col1.a
-- !query schema
struct<col:struct<a:int>,col1:struct<a:int>>
-- !query output
{"a":1}	{"a":1}


-- !query
SELECT named_struct('a', 1) AS col1, col1
FROM values(named_struct('a', 1))
GROUP BY col1
HAVING col1.a > 0
-- !query schema
struct<col1:struct<a:int>,col1:struct<a:int>>
-- !query output
{"a":1}	{"a":1}


-- !query
SELECT array(1, 2, 3) AS col1, col1
FROM values(array(1, 2, 3))
ORDER BY col1[0]
-- !query schema
struct<col1:array<int>,col1:array<int>>
-- !query output
[1,2,3]	[1,2,3]


-- !query
SELECT array(1, 2, 3) AS col1, col1
FROM values(array(1, 2, 3))
GROUP BY col1
HAVING col1[1] > 1
-- !query schema
struct<col1:array<int>,col1:array<int>>
-- !query output
[1,2,3]	[1,2,3]


-- !query
SELECT map('a', 1, 'b', 2) AS col1, col1
FROM values(map('a', 1, 'b', 2))
ORDER BY col1['a']
-- !query schema
struct<col1:map<string,int>,col1:map<string,int>>
-- !query output
{"a":1,"b":2}	{"a":1,"b":2}


-- !query
SELECT map('a', 1, 'b', 2) AS col1, col1
FROM values(map('a', 1, 'b', 2))
GROUP BY col1
HAVING col1['b'] > 1
-- !query schema
struct<col1:map<string,int>,col1:map<string,int>>
-- !query output
{"a":1,"b":2}	{"a":1,"b":2}


-- !query
SELECT NAMED_STRUCT('b', 1) AS col1 FROM VALUES (NAMED_STRUCT('a', 0)) t (col1) GROUP BY col1 ORDER BY col1.a
-- !query schema
struct<col1:struct<b:int>>
-- !query output
{"b":1}


-- !query
SELECT NAMED_STRUCT('b', 1) AS col1 FROM VALUES (NAMED_STRUCT('a', 0)) t (col1) GROUP BY col1 HAVING col1.a > 0
-- !query schema
struct<col1:struct<b:int>>
-- !query output



-- !query
SELECT NAMED_STRUCT('b', 1) AS col1 FROM VALUES (NAMED_STRUCT('a', 0)) t (col1) GROUP BY col1 HAVING col1.a > 0 ORDER BY col1.a
-- !query schema
struct<col1:struct<b:int>>
-- !query output



-- !query
SELECT NAMED_STRUCT('b', 1) AS col1 FROM VALUES (NAMED_STRUCT('a', 0)) t (col1) GROUP BY col1 ORDER BY col1.b
-- !query schema
struct<col1:struct<b:int>>
-- !query output
{"b":1}


-- !query
SELECT NAMED_STRUCT('b', 1) AS col1 FROM VALUES (NAMED_STRUCT('a', 0)) t (col1) GROUP BY col1 HAVING col1.b > 0
-- !query schema
struct<col1:struct<b:int>>
-- !query output
{"b":1}


-- !query
SELECT NAMED_STRUCT('b', 1) AS col1 FROM VALUES (NAMED_STRUCT('a', 0)) t (col1) GROUP BY col1 HAVING col1.b > 0 ORDER BY col1.b
-- !query schema
struct<col1:struct<b:int>>
-- !query output
{"b":1}


-- !query
SELECT col1.name
FROM VALUES (NAMED_STRUCT('name', 'test', 'id', 1)) t (col1)
GROUP BY col1
HAVING col1.id > 0
ORDER BY col1.name
-- !query schema
struct<name:string>
-- !query output
test


-- !query
SELECT col1.items[0]
FROM VALUES (NAMED_STRUCT('items', ARRAY(1, 2, 3))) t (col1)
GROUP BY col1
HAVING col1.items[0] > 0
ORDER BY col1.items[0]
-- !query schema
struct<col1.items[0]:int>
-- !query output
1


-- !query
SELECT col1.data['key']
FROM VALUES (NAMED_STRUCT('data', MAP('key', 'value', 'num', '42'))) t (col1)
GROUP BY col1
HAVING col1.data['num'] IS NOT NULL
ORDER BY col1.data['key']
-- !query schema
struct<col1.data[key]:string>
-- !query output
value


-- !query
SELECT col1.users[0].name
FROM VALUES (
             NAMED_STRUCT('users', ARRAY(NAMED_STRUCT('name', 'John', 'age', 30)))
     ) t (col1)
GROUP BY col1
HAVING col1.users[0].age > 25
ORDER BY col1.users[0].name
-- !query schema
struct<col1.users[0].name:string>
-- !query output
John


-- !query
SELECT col1.person.address.city
FROM VALUES (
             NAMED_STRUCT('person', NAMED_STRUCT('address', NAMED_STRUCT('city', 'NYC', 'zip', 10001)))
     ) t (col1)
GROUP BY col1
HAVING col1.person.address.zip > 10000
ORDER BY col1.person.address.city
-- !query schema
struct<city:string>
-- !query output
NYC


-- !query
SELECT col1.matrix[0][1]
FROM VALUES (
             NAMED_STRUCT('matrix', ARRAY(ARRAY(1, 2), ARRAY(3, 4)))
     ) t (col1)
GROUP BY col1
HAVING col1.matrix[0][0] < 5
ORDER BY col1.matrix[0][1]
-- !query schema
struct<col1.matrix[0][1]:int>
-- !query output
2


-- !query
SELECT col1.data[0].props['status']
FROM VALUES (
             NAMED_STRUCT('data', ARRAY(NAMED_STRUCT('props', MAP('status', 'active'))))
     ) t (col1)
GROUP BY col1
HAVING col1.data[0].props['status'] = 'active'
-- !query schema
struct<col1.data[0].props[status]:string>
-- !query output
active


-- !query
SELECT col1.nums[0] + col1.nums[1] AS sum_val
FROM VALUES (NAMED_STRUCT('nums', ARRAY(10, 20))) t (col1)
GROUP BY col1
HAVING col1.nums[0] + col1.nums[1] > 25
ORDER BY col1.nums[0]
-- !query schema
struct<sum_val:int>
-- !query output
30
