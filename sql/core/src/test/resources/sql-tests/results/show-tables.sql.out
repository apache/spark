-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE DATABASE showdb
-- !query schema
struct<>
-- !query output



-- !query
USE showdb
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE show_t1(a String, b Int, c String, d String) USING parquet PARTITIONED BY (c, d)
-- !query schema
struct<>
-- !query output



-- !query
ALTER TABLE show_t1 ADD PARTITION (c='Us', d=1)
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE show_t2(b String, d Int) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE TEMPORARY VIEW show_t3(e int) USING parquet
-- !query schema
struct<>
-- !query output



-- !query
CREATE GLOBAL TEMP VIEW show_t4 AS SELECT 1 as col1
-- !query schema
struct<>
-- !query output



-- !query
SHOW TABLES
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean>
-- !query output
show_t1
show_t2
show_t3


-- !query
SHOW TABLES IN showdb
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean>
-- !query output
show_t1
show_t2
show_t3


-- !query
SHOW TABLES 'show_t*'
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean>
-- !query output
show_t1
show_t2
show_t3


-- !query
SHOW TABLES LIKE 'show_t1*|show_t2*'
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean>
-- !query output
show_t1
show_t2


-- !query
SHOW TABLES IN showdb 'show_t*'
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean>
-- !query output
show_t1
show_t2
show_t3


-- !query
SHOW TABLES IN showdb LIKE 'show_t*'
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean>
-- !query output
show_t1
show_t2
show_t3


-- !query
SHOW TABLE EXTENDED LIKE 'show_t*'
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean,information:string>
-- !query output
	show_t3	true	Table: show_t3
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: VIEW
View Schema Mode: BINDING
Schema: root
 |-- e: integer (nullable = true)


showdb	show_t1	false	Catalog: spark_catalog
Database: showdb
Table: show_t1
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: MANAGED
Provider: parquet
Location [not included in comparison]/{warehouse_dir}/showdb.db/show_t1
Partition Provider: Catalog
Partition Columns: [`c`, `d`]
Schema: root
 |-- a: string (nullable = true)
 |-- b: integer (nullable = true)
 |-- c: string (nullable = true)
 |-- d: string (nullable = true)


showdb	show_t2	false	Catalog: spark_catalog
Database: showdb
Table: show_t2
Created Time [not included in comparison]
Last Access [not included in comparison]
Created By [not included in comparison]
Type: MANAGED
Provider: parquet
Location [not included in comparison]/{warehouse_dir}/showdb.db/show_t2
Schema: root
 |-- b: string (nullable = true)
 |-- d: integer (nullable = true)


-- !query
SHOW TABLE EXTENDED
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "end of input",
    "hint" : ""
  }
}


-- !query
SHOW TABLE EXTENDED LIKE 'show_t1' PARTITION(c='Us', d=1)
-- !query schema
struct<namespace:string,tableName:string,isTemporary:boolean,information:string>
-- !query output
showdb	show_t1	false	Partition Values: [c=Us, d=1]
Location [not included in comparison]/{warehouse_dir}/showdb.db/show_t1/c=Us/d=1
Created Time [not included in comparison]
Last Access [not included in comparison]


-- !query
SHOW TABLE EXTENDED PARTITION(c='Us', d=1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "PARSE_SYNTAX_ERROR",
  "sqlState" : "42601",
  "messageParameters" : {
    "error" : "'PARTITION'",
    "hint" : ""
  }
}


-- !query
SHOW TABLE EXTENDED LIKE 'show_t*' PARTITION(c='Us', d=1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "TABLE_OR_VIEW_NOT_FOUND",
  "sqlState" : "42P01",
  "messageParameters" : {
    "relationName" : "`show_t*`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 26,
    "stopIndex" : 34,
    "fragment" : "'show_t*'"
  } ]
}


-- !query
SHOW TABLE EXTENDED LIKE 'show_t1' PARTITION(c='Us')
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_1232",
  "messageParameters" : {
    "partitionColumnNames" : "c, d",
    "specKeys" : "c",
    "tableName" : "`spark_catalog`.`showdb`.`show_t1`"
  }
}


-- !query
SHOW TABLE EXTENDED LIKE 'show_t1' PARTITION(a='Us', d=1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_1231",
  "messageParameters" : {
    "key" : "a",
    "tblName" : "`spark_catalog`.`showdb`.`show_t1`"
  }
}


-- !query
SHOW TABLE EXTENDED LIKE 'show_t1' PARTITION(c='Ch', d=1)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.analysis.NoSuchPartitionException
{
  "errorClass" : "PARTITIONS_NOT_FOUND",
  "sqlState" : "428FT",
  "messageParameters" : {
    "partitionList" : "PARTITION (`c` = Ch, `d` = 1)",
    "tableName" : "`showdb`.`show_t1`"
  }
}


-- !query
DROP TABLE show_t1
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE show_t2
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW  show_t3
-- !query schema
struct<>
-- !query output



-- !query
DROP VIEW  global_temp.show_t4
-- !query schema
struct<>
-- !query output



-- !query
USE default
-- !query schema
struct<>
-- !query output



-- !query
DROP DATABASE showdb
-- !query schema
struct<>
-- !query output

