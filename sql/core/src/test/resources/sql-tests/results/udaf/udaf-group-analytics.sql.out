-- Automatically generated by SQLQueryTestSuite
-- !query
CREATE OR REPLACE TEMPORARY VIEW testData AS SELECT * FROM VALUES
(1, 1), (1, 2), (2, 1), (2, 2), (3, 1), (3, 2)
AS testData(a, b)
-- !query schema
struct<>
-- !query output



-- !query
SELECT a + b, b, udaf(a - b) FROM testData GROUP BY a + b, b WITH CUBE
-- !query schema
struct<(a + b):int,b:int,udaf((a - b)):int>
-- !query output
2	1	1
2	NULL	1
3	1	1
3	2	1
3	NULL	2
4	1	1
4	2	1
4	NULL	2
5	2	1
5	NULL	1
NULL	1	3
NULL	2	3
NULL	NULL	6


-- !query
SELECT a, b, udaf(b) FROM testData GROUP BY a, b WITH CUBE
-- !query schema
struct<a:int,b:int,udaf(b):int>
-- !query output
1	1	1
1	2	1
1	NULL	2
2	1	1
2	2	1
2	NULL	2
3	1	1
3	2	1
3	NULL	2
NULL	1	3
NULL	2	3
NULL	NULL	6


-- !query
SELECT a + b, b, udaf(a - b) FROM testData GROUP BY a + b, b WITH ROLLUP
-- !query schema
struct<(a + b):int,b:int,udaf((a - b)):int>
-- !query output
2	1	1
2	NULL	1
3	1	1
3	2	1
3	NULL	2
4	1	1
4	2	1
4	NULL	2
5	2	1
5	NULL	1
NULL	NULL	6


-- !query
SELECT a, b, udaf(b) FROM testData GROUP BY a, b WITH ROLLUP
-- !query schema
struct<a:int,b:int,udaf(b):int>
-- !query output
1	1	1
1	2	1
1	NULL	2
2	1	1
2	2	1
2	NULL	2
3	1	1
3	2	1
3	NULL	2
NULL	NULL	6


-- !query
CREATE OR REPLACE TEMPORARY VIEW courseSales AS SELECT * FROM VALUES
("dotNET", 2012, 10000), ("Java", 2012, 20000), ("dotNET", 2012, 5000), ("dotNET", 2013, 48000), ("Java", 2013, 30000)
AS courseSales(course, year, earnings)
-- !query schema
struct<>
-- !query output



-- !query
SELECT course, year, udaf(earnings) FROM courseSales GROUP BY ROLLUP(course, year) ORDER BY course, year
-- !query schema
struct<course:string,year:int,udaf(earnings):int>
-- !query output
NULL	NULL	5
Java	NULL	2
Java	2012	1
Java	2013	1
dotNET	NULL	3
dotNET	2012	2
dotNET	2013	1


-- !query
SELECT course, year, udaf(earnings) FROM courseSales GROUP BY ROLLUP(course, year, (course, year)) ORDER BY course, year
-- !query schema
struct<course:string,year:int,udaf(earnings):int>
-- !query output
NULL	NULL	5
Java	NULL	2
Java	2012	1
Java	2012	1
Java	2013	1
Java	2013	1
dotNET	NULL	3
dotNET	2012	2
dotNET	2012	2
dotNET	2013	1
dotNET	2013	1


-- !query
SELECT course, year, udaf(earnings) FROM courseSales GROUP BY ROLLUP(course, year, (course, year), ()) ORDER BY course, year
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_0051",
  "messageParameters" : {
    "element" : "ROLLUP"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 54,
    "stopIndex" : 102,
    "fragment" : "GROUP BY ROLLUP(course, year, (course, year), ())"
  } ]
}


-- !query
SELECT course, year, udaf(earnings) FROM courseSales GROUP BY CUBE(course, year) ORDER BY course, year
-- !query schema
struct<course:string,year:int,udaf(earnings):int>
-- !query output
NULL	NULL	5
NULL	2012	3
NULL	2013	2
Java	NULL	2
Java	2012	1
Java	2013	1
dotNET	NULL	3
dotNET	2012	2
dotNET	2013	1


-- !query
SELECT course, year, udaf(earnings) FROM courseSales GROUP BY CUBE(course, year, (course, year)) ORDER BY course, year
-- !query schema
struct<course:string,year:int,udaf(earnings):int>
-- !query output
NULL	NULL	5
NULL	2012	3
NULL	2013	2
Java	NULL	2
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
dotNET	NULL	3
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1


-- !query
SELECT course, year, udaf(earnings) FROM courseSales GROUP BY CUBE(course, year, (course, year), ()) ORDER BY course, year
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.parser.ParseException
{
  "errorClass" : "_LEGACY_ERROR_TEMP_0051",
  "messageParameters" : {
    "element" : "CUBE"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 54,
    "stopIndex" : 100,
    "fragment" : "GROUP BY CUBE(course, year, (course, year), ())"
  } ]
}


-- !query
SELECT course, year, udaf(earnings) FROM courseSales GROUP BY course, year GROUPING SETS(course, year)
-- !query schema
struct<course:string,year:int,udaf(earnings):int>
-- !query output
Java	NULL	2
NULL	2012	3
NULL	2013	2
dotNET	NULL	3


-- !query
SELECT course, year, udaf(earnings) FROM courseSales GROUP BY course, year GROUPING SETS(course, year, ())
-- !query schema
struct<course:string,year:int,udaf(earnings):int>
-- !query output
Java	NULL	2
NULL	2012	3
NULL	2013	2
NULL	NULL	5
dotNET	NULL	3


-- !query
SELECT course, year, udaf(earnings) FROM courseSales GROUP BY course, year GROUPING SETS(course)
-- !query schema
struct<course:string,year:int,udaf(earnings):int>
-- !query output
Java	NULL	2
dotNET	NULL	3


-- !query
SELECT course, year, udaf(earnings) FROM courseSales GROUP BY course, year GROUPING SETS(year)
-- !query schema
struct<course:string,year:int,udaf(earnings):int>
-- !query output
NULL	2012	3
NULL	2013	2


-- !query
SELECT course, year, udaf(earnings) FROM courseSales GROUP BY course, CUBE(course, year) ORDER BY course, year
-- !query schema
struct<course:string,year:int,udaf(earnings):int>
-- !query output
Java	NULL	2
Java	NULL	2
Java	2012	1
Java	2012	1
Java	2013	1
Java	2013	1
dotNET	NULL	3
dotNET	NULL	3
dotNET	2012	2
dotNET	2012	2
dotNET	2013	1
dotNET	2013	1


-- !query
SELECT course, year, udaf(earnings) FROM courseSales GROUP BY CUBE(course, year), ROLLUP(course, year) ORDER BY course, year
-- !query schema
struct<course:string,year:int,udaf(earnings):int>
-- !query output
NULL	NULL	5
NULL	2012	3
NULL	2013	2
Java	NULL	2
Java	NULL	2
Java	NULL	2
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
dotNET	NULL	3
dotNET	NULL	3
dotNET	NULL	3
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1


-- !query
SELECT course, year, udaf(earnings) FROM courseSales GROUP BY CUBE(course, year), ROLLUP(course, year), GROUPING SETS(course, year) ORDER BY course, year
-- !query schema
struct<course:string,year:int,udaf(earnings):int>
-- !query output
NULL	2012	3
NULL	2012	3
NULL	2013	2
NULL	2013	2
Java	NULL	2
Java	NULL	2
Java	NULL	2
Java	NULL	2
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2012	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
Java	2013	1
dotNET	NULL	3
dotNET	NULL	3
dotNET	NULL	3
dotNET	NULL	3
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2012	2
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1
dotNET	2013	1


-- !query
SELECT course, udaf(earnings) AS sum FROM courseSales
GROUP BY course, earnings GROUPING SETS((), (course), (course, earnings)) ORDER BY course, sum
-- !query schema
struct<course:string,sum:int>
-- !query output
NULL	5
Java	1
Java	1
Java	2
dotNET	1
dotNET	1
dotNET	1
dotNET	3


-- !query
SELECT course, udaf(earnings) AS sum, GROUPING_ID(course, earnings) FROM courseSales
GROUP BY course, earnings GROUPING SETS((), (course), (course, earnings)) ORDER BY course, sum
-- !query schema
struct<course:string,sum:int,grouping_id(course, earnings):bigint>
-- !query output
NULL	5	3
Java	1	0
Java	1	0
Java	2	1
dotNET	1	0
dotNET	1	0
dotNET	1	0
dotNET	3	1


-- !query
SELECT a + b AS k1, b AS k2, udaf(a - b) FROM testData GROUP BY CUBE(k1, k2)
-- !query schema
struct<k1:int,k2:int,udaf((a - b)):int>
-- !query output
2	1	1
2	NULL	1
3	1	1
3	2	1
3	NULL	2
4	1	1
4	2	1
4	NULL	2
5	2	1
5	NULL	1
NULL	1	3
NULL	2	3
NULL	NULL	6


-- !query
SELECT a + b AS k, b, udaf(a - b) FROM testData GROUP BY ROLLUP(k, b)
-- !query schema
struct<k:int,b:int,udaf((a - b)):int>
-- !query output
2	1	1
2	NULL	1
3	1	1
3	2	1
3	NULL	2
4	1	1
4	2	1
4	NULL	2
5	2	1
5	NULL	1
NULL	NULL	6


-- !query
SELECT a + b, b AS k, udaf(a - b) FROM testData GROUP BY a + b, k GROUPING SETS(k)
-- !query schema
struct<(a + b):int,k:int,udaf((a - b)):int>
-- !query output
NULL	1	3
NULL	2	3


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY a, b, CUBE(a, b)
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	2	1
2	1	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	2	1
3	1	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	2	1


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY a, b, ROLLUP(a, b)
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY CUBE(a, b), ROLLUP(a, b)
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2
3	NULL	2
NULL	1	3
NULL	2	3
NULL	NULL	6


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY a, CUBE(a, b), ROLLUP(b)
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY a, GROUPING SETS((a, b), (a), ())
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	2	1
1	NULL	2
1	NULL	2
2	1	1
2	2	1
2	NULL	2
2	NULL	2
3	1	1
3	2	1
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY a, CUBE(a, b), GROUPING SETS((a, b), (a), ())
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY a, CUBE(a, b), ROLLUP(a, b), GROUPING SETS((a, b), (a), ())
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY a, GROUPING SETS(ROLLUP(a, b))
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	2	1
1	NULL	2
1	NULL	2
2	1	1
2	2	1
2	NULL	2
2	NULL	2
3	1	1
3	2	1
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY a, GROUPING SETS(GROUPING SETS((a, b), (a), ()))
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	2	1
1	NULL	2
1	NULL	2
2	1	1
2	2	1
2	NULL	2
2	NULL	2
3	1	1
3	2	1
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY a, GROUPING SETS((a, b), GROUPING SETS(ROLLUP(a, b)))
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	1	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY a, GROUPING SETS((a, b, a, b), (a, b, a), (a, b))
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY a, GROUPING SETS(GROUPING SETS((a, b, a, b), (a, b, a), (a, b)))
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY a, GROUPING SETS(ROLLUP(a, b), CUBE(a, b))
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY a, GROUPING SETS(GROUPING SETS((a, b), (a), ()), GROUPING SETS((a, b), (a), (b), ()))
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2


-- !query
SELECT a, b, udaf(1) FROM testData GROUP BY a, GROUPING SETS((a, b), (a), (), (a, b), (a), (b), ())
-- !query schema
struct<a:int,b:int,udaf(1):int>
-- !query output
1	1	1
1	1	1
1	1	1
1	2	1
1	2	1
1	2	1
1	NULL	2
1	NULL	2
1	NULL	2
1	NULL	2
2	1	1
2	1	1
2	1	1
2	2	1
2	2	1
2	2	1
2	NULL	2
2	NULL	2
2	NULL	2
2	NULL	2
3	1	1
3	1	1
3	1	1
3	2	1
3	2	1
3	2	1
3	NULL	2
3	NULL	2
3	NULL	2
3	NULL	2
