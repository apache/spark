-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view data as select * from values
  (0, 1),
  (0, 2),
  (1, 3),
  (1, NULL)
  as data(g, i)
-- !query schema
struct<>
-- !query output



-- !query
select g from data order by all
-- !query schema
struct<g:int>
-- !query output
0
0
1
1


-- !query
select * from data order by all
-- !query schema
struct<g:int,i:int>
-- !query output
0	1
0	2
1	NULL
1	3


-- !query
select * from data order by aLl
-- !query schema
struct<g:int,i:int>
-- !query output
0	1
0	2
1	NULL
1	3


-- !query
select * from data order by all asc
-- !query schema
struct<g:int,i:int>
-- !query output
0	1
0	2
1	NULL
1	3


-- !query
select * from data order by all desc
-- !query schema
struct<g:int,i:int>
-- !query output
1	3
1	NULL
0	2
0	1


-- !query
select * from data order by all nulls first
-- !query schema
struct<g:int,i:int>
-- !query output
0	1
0	2
1	NULL
1	3


-- !query
select * from data order by all nulls last
-- !query schema
struct<g:int,i:int>
-- !query output
0	1
0	2
1	3
1	NULL


-- !query
select * from data order by all asc nulls first
-- !query schema
struct<g:int,i:int>
-- !query output
0	1
0	2
1	NULL
1	3


-- !query
select * from data order by all desc nulls first
-- !query schema
struct<g:int,i:int>
-- !query output
1	NULL
1	3
0	2
0	1


-- !query
select * from data order by all asc nulls last
-- !query schema
struct<g:int,i:int>
-- !query output
0	1
0	2
1	3
1	NULL


-- !query
select * from data order by all desc nulls last
-- !query schema
struct<g:int,i:int>
-- !query output
1	3
1	NULL
0	2
0	1


-- !query
select * from data union all select * from data order by all
-- !query schema
struct<g:int,i:int>
-- !query output
0	1
0	1
0	2
0	2
1	NULL
1	NULL
1	3
1	3


-- !query
select * from data union select * from data order by all
-- !query schema
struct<g:int,i:int>
-- !query output
0	1
0	2
1	NULL
1	3


-- !query
select * from data order by all limit 2
-- !query schema
struct<g:int,i:int>
-- !query output
0	1
0	2


-- !query
select * from values("z", 1), ("y", 2), ("x", 3) AS T(col1, all) order by all
-- !query schema
struct<col1:string,all:int>
-- !query output
z	1
y	2
x	3


-- !query
select name, dept, rank() over (partition by dept order by all) as rank
from values('Lisa', 'Sales', 10000, 35) as T(name, dept, salary, age)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNRESOLVED_COLUMN.WITH_SUGGESTION",
  "sqlState" : "42703",
  "messageParameters" : {
    "objectName" : "`all`",
    "proposal" : "`age`, `name`, `dept`, `salary`"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 60,
    "stopIndex" : 62,
    "fragment" : "all"
  } ]
}


-- !query
SELECT all, (SELECT col2 FROM VALUES (2, 2) ORDER BY ALL) FROM VALUES (1) AS t1 (all)
-- !query schema
struct<all:int,scalarsubquery():int>
-- !query output
1	2
