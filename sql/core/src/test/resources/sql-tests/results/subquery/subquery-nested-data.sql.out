-- Automatically generated by SQLQueryTestSuite
-- !query
drop table if exists x
-- !query schema
struct<>
-- !query output



-- !query
drop table if exists y
-- !query schema
struct<>
-- !query output



-- !query
create table x(xm map<int, int>, x2 int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
insert into x values (map(1, 2), 3), (map(1, 4), 5), (map(2, 3), 4), (map(5, 6), 7)
-- !query schema
struct<>
-- !query output



-- !query
create table y(ym map<int, int>, y2 int) using parquet
-- !query schema
struct<>
-- !query output



-- !query
insert into y values (map(1, 2), 10), (map(1, 3), 20), (map(2, 3), 20), (map(8, 3), 20)
-- !query schema
struct<>
-- !query output



-- !query
select * from x where (select sum(y2) from y where xm[1] = ym[1]) > 2
-- !query schema
struct<xm:map<int,int>,x2:int>
-- !query output
{1:2}	3


-- !query
select * from x where exists (select * from y where xm[1] = ym[1])
-- !query schema
struct<xm:map<int,int>,x2:int>
-- !query output
{1:2}	3


-- !query
select * from x where exists (select * from y where xm[1] = ym[1] limit 1)
-- !query schema
struct<xm:map<int,int>,x2:int>
-- !query output
{1:2}	3


-- !query
select * from x join lateral (select * from y where xm[1] = ym[1])
-- !query schema
struct<xm:map<int,int>,x2:int,ym:map<int,int>,y2:int>
-- !query output
{1:2}	3	{1:2}	10


-- !query
select * from x join lateral (select * from y where xm[1] = ym[1] union all select * from y where xm[1] = ym[1] + 1)
-- !query schema
struct<xm:map<int,int>,x2:int,ym:map<int,int>,y2:int>
-- !query output
{1:2}	3	{1:2}	10
{1:4}	5	{1:3}	20


-- !query
select * from x join lateral (select * from y where xm[1] = ym[1] limit 1)
-- !query schema
struct<xm:map<int,int>,x2:int,ym:map<int,int>,y2:int>
-- !query output
{1:2}	3	{1:2}	10


-- !query
select * from x join lateral (select count(*) from y where xm[1] = ym[1] group by y2)
-- !query schema
struct<xm:map<int,int>,x2:int,count(1):bigint>
-- !query output
{1:2}	3	1


-- !query
select * from x where xm[1] in (select ym[1] from y)
-- !query schema
struct<xm:map<int,int>,x2:int>
-- !query output
{1:2}	3


-- !query
select * from x where xm[1] in (select sum(ym[1]) from y group by y2)
-- !query schema
struct<xm:map<int,int>,x2:int>
-- !query output
{1:2}	3


-- !query
select * from x where (select sum(y2) from y where xm[1] = ym[1] and xm[1] >= 1) > 2
-- !query schema
struct<xm:map<int,int>,x2:int>
-- !query output
{1:2}	3


-- !query
select * from x where (select sum(y2) from y where xm[1] = ym[1] and xm[2] >= ym[2]) > 2
-- !query schema
struct<xm:map<int,int>,x2:int>
-- !query output



-- !query
select * from x where (select sum(y2) from y where xm[1] = ym[1]) > 2 and (select count(y2) from y where xm[1] = ym[1]) < 3
-- !query schema
struct<xm:map<int,int>,x2:int>
-- !query output
{1:2}	3


-- !query
select * from x join lateral (select xm[1] - ym[1] from y)
-- !query schema
struct<xm:map<int,int>,x2:int,(outer(spark_catalog.default.x.xm)[1] - ym[1]):int>
-- !query output
{1:2}	3	-1
{1:2}	3	0
{1:2}	3	NULL
{1:2}	3	NULL
{1:4}	5	1
{1:4}	5	2
{1:4}	5	NULL
{1:4}	5	NULL
{2:3}	4	NULL
{2:3}	4	NULL
{2:3}	4	NULL
{2:3}	4	NULL
{5:6}	7	NULL
{5:6}	7	NULL
{5:6}	7	NULL
{5:6}	7	NULL


-- !query
select * from x join lateral (select xm[1], xm[1] as s1, xm[1] - ym[1] as s2 from y)
-- !query schema
struct<xm:map<int,int>,x2:int,outer(spark_catalog.default.x.xm)[1]:int,s1:int,s2:int>
-- !query output
{1:2}	3	2	2	-1
{1:2}	3	2	2	0
{1:2}	3	2	2	NULL
{1:2}	3	2	2	NULL
{1:4}	5	4	4	1
{1:4}	5	4	4	2
{1:4}	5	4	4	NULL
{1:4}	5	4	4	NULL
{2:3}	4	NULL	NULL	NULL
{2:3}	4	NULL	NULL	NULL
{2:3}	4	NULL	NULL	NULL
{2:3}	4	NULL	NULL	NULL
{5:6}	7	NULL	NULL	NULL
{5:6}	7	NULL	NULL	NULL
{5:6}	7	NULL	NULL	NULL
{5:6}	7	NULL	NULL	NULL


-- !query
select * from x join lateral (select xm[1], sum(ym[1]), xm[1] - sum(ym[1]) from y group by xm[1])
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "UNSUPPORTED_SUBQUERY_EXPRESSION_CATEGORY.CORRELATED_REFERENCE",
  "sqlState" : "0A000",
  "messageParameters" : {
    "sqlExprs" : "\"xm[1]\",\"xm[1] AS `outer(spark_catalog.default.x.xm)[1]`\",\"(xm[1] - sum(ym[1])) AS `(outer(spark_catalog.default.x.xm)[1] - sum(ym[1]))`\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 83,
    "stopIndex" : 96,
    "fragment" : "group by xm[1]"
  } ]
}


-- !query
select * from x where (select sum(y2) from y where xm[x2] = ym[1]) > 2
-- !query schema
struct<xm:map<int,int>,x2:int>
-- !query output



-- !query
select * from x where (select sum(y2) from y where xm[x2+1] = ym[1]) > 2
-- !query schema
struct<xm:map<int,int>,x2:int>
-- !query output



-- !query
select * from x where (select sum(y2) from y where xm[x2+1] = ym[1] and xm[1+x2] = ym[2]) > 2
-- !query schema
struct<xm:map<int,int>,x2:int>
-- !query output



-- !query
select * from x where (select sum(y2) from y where xm[y2] = ym[1]) > 2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_SUBQUERY_EXPRESSION_CATEGORY.UNSUPPORTED_CORRELATED_REFERENCE_DATA_TYPE",
  "sqlState" : "0A000",
  "messageParameters" : {
    "dataType" : "map",
    "expr" : "spark_catalog.default.x.xm"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 44,
    "stopIndex" : 44,
    "fragment" : "y"
  } ]
}


-- !query
set spark.sql.optimizer.pullOutNestedDataOuterRefExpressions.enabled = false
-- !query schema
struct<key:string,value:string>
-- !query output
spark.sql.optimizer.pullOutNestedDataOuterRefExpressions.enabled	false


-- !query
select * from x where (select sum(y2) from y where xm[1] = ym[1]) > 2
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.AnalysisException
{
  "errorClass" : "UNSUPPORTED_SUBQUERY_EXPRESSION_CATEGORY.UNSUPPORTED_CORRELATED_REFERENCE_DATA_TYPE",
  "sqlState" : "0A000",
  "messageParameters" : {
    "dataType" : "map",
    "expr" : "spark_catalog.default.x.xm"
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 44,
    "stopIndex" : 44,
    "fragment" : "y"
  } ]
}


-- !query
reset spark.sql.optimizer.rewriteNestedDataCorrelation.enabled
-- !query schema
struct<>
-- !query output



-- !query
drop table x
-- !query schema
struct<>
-- !query output



-- !query
drop table y
-- !query schema
struct<>
-- !query output

