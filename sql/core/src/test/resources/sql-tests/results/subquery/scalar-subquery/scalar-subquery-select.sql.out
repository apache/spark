-- Automatically generated by SQLQueryTestSuite
-- !query
create temporary view t1 as select * from values
  ('val1a', 6S, 8, 10L, float(15.0), 20D, 20E2, timestamp '2014-04-04 00:00:00.000', date '2014-04-04'),
  ('val1b', 8S, 16, 19L, float(17.0), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', date '2014-05-04'),
  ('val1a', 16S, 12, 21L, float(15.0), 20D, 20E2, timestamp '2014-06-04 01:02:00.001', date '2014-06-04'),
  ('val1a', 16S, 12, 10L, float(15.0), 20D, 20E2, timestamp '2014-07-04 01:01:00.000', date '2014-07-04'),
  ('val1c', 8S, 16, 19L, float(17.0), 25D, 26E2, timestamp '2014-05-04 01:02:00.001', date '2014-05-05'),
  ('val1d', null, 16, 22L, float(17.0), 25D, 26E2, timestamp '2014-06-04 01:01:00.000', null),
  ('val1d', null, 16, 19L, float(17.0), 25D, 26E2, timestamp '2014-07-04 01:02:00.001', null),
  ('val1e', 10S, null, 25L, float(17.0), 25D, 26E2, timestamp '2014-08-04 01:01:00.000', date '2014-08-04'),
  ('val1e', 10S, null, 19L, float(17.0), 25D, 26E2, timestamp '2014-09-04 01:02:00.001', date '2014-09-04'),
  ('val1d', 10S, null, 12L, float(17.0), 25D, 26E2, timestamp '2015-05-04 01:01:00.000', date '2015-05-04'),
  ('val1a', 6S, 8, 10L, float(15.0), 20D, 20E2, timestamp '2014-04-04 01:02:00.001', date '2014-04-04'),
  ('val1e', 10S, null, 19L, float(17.0), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', date '2014-05-04')
  as t1(t1a, t1b, t1c, t1d, t1e, t1f, t1g, t1h, t1i)
-- !query schema
struct<>
-- !query output



-- !query
create temporary view t2 as select * from values
  ('val2a', 6S, 12, 14L, float(15), 20D, 20E2, timestamp '2014-04-04 01:01:00.000', date '2014-04-04'),
  ('val1b', 10S, 12, 19L, float(17), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', date '2014-05-04'),
  ('val1b', 8S, 16, 119L, float(17), 25D, 26E2, timestamp '2015-05-04 01:01:00.000', date '2015-05-04'),
  ('val1c', 12S, 16, 219L, float(17), 25D, 26E2, timestamp '2016-05-04 01:01:00.000', date '2016-05-04'),
  ('val1b', null, 16, 319L, float(17), 25D, 26E2, timestamp '2017-05-04 01:01:00.000', null),
  ('val2e', 8S, null, 419L, float(17), 25D, 26E2, timestamp '2014-06-04 01:01:00.000', date '2014-06-04'),
  ('val1f', 19S, null, 519L, float(17), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', date '2014-05-04'),
  ('val1b', 10S, 12, 19L, float(17), 25D, 26E2, timestamp '2014-06-04 01:01:00.000', date '2014-06-04'),
  ('val1b', 8S, 16, 19L, float(17), 25D, 26E2, timestamp '2014-07-04 01:01:00.000', date '2014-07-04'),
  ('val1c', 12S, 16, 19L, float(17), 25D, 26E2, timestamp '2014-08-04 01:01:00.000', date '2014-08-05'),
  ('val1e', 8S, null, 19L, float(17), 25D, 26E2, timestamp '2014-09-04 01:01:00.000', date '2014-09-04'),
  ('val1f', 19S, null, 19L, float(17), 25D, 26E2, timestamp '2014-10-04 01:01:00.000', date '2014-10-04'),
  ('val1b', null, 16, 19L, float(17), 25D, 26E2, timestamp '2014-05-04 01:01:00.000', null)
  as t2(t2a, t2b, t2c, t2d, t2e, t2f, t2g, t2h, t2i)
-- !query schema
struct<>
-- !query output



-- !query
create temporary view t3 as select * from values
  ('val3a', 6S, 12, 110L, float(15), 20D, 20E2, timestamp '2014-04-04 01:02:00.000', date '2014-04-04'),
  ('val3a', 6S, 12, 10L, float(15), 20D, 20E2, timestamp '2014-05-04 01:02:00.000', date '2014-05-04'),
  ('val1b', 10S, 12, 219L, float(17), 25D, 26E2, timestamp '2014-05-04 01:02:00.000', date '2014-05-04'),
  ('val1b', 10S, 12, 19L, float(17), 25D, 26E2, timestamp '2014-05-04 01:02:00.000', date '2014-05-04'),
  ('val1b', 8S, 16, 319L, float(17), 25D, 26E2, timestamp '2014-06-04 01:02:00.000', date '2014-06-04'),
  ('val1b', 8S, 16, 19L, float(17), 25D, 26E2, timestamp '2014-07-04 01:02:00.000', date '2014-07-04'),
  ('val3c', 17S, 16, 519L, float(17), 25D, 26E2, timestamp '2014-08-04 01:02:00.000', date '2014-08-04'),
  ('val3c', 17S, 16, 19L, float(17), 25D, 26E2, timestamp '2014-09-04 01:02:00.000', date '2014-09-05'),
  ('val1b', null, 16, 419L, float(17), 25D, 26E2, timestamp '2014-10-04 01:02:00.000', null),
  ('val1b', null, 16, 19L, float(17), 25D, 26E2, timestamp '2014-11-04 01:02:00.000', null),
  ('val3b', 8S, null, 719L, float(17), 25D, 26E2, timestamp '2014-05-04 01:02:00.000', date '2014-05-04'),
  ('val3b', 8S, null, 19L, float(17), 25D, 26E2, timestamp '2015-05-04 01:02:00.000', date '2015-05-04')
  as t3(t3a, t3b, t3c, t3d, t3e, t3f, t3g, t3h, t3i)
-- !query schema
struct<>
-- !query output



-- !query
SELECT (SELECT min(t3d) FROM t3) min_t3d,
       (SELECT max(t2h) FROM t2) max_t2h
FROM   t1
WHERE  t1a = 'val1c'
-- !query schema
struct<min_t3d:bigint,max_t2h:timestamp>
-- !query output
10	2017-05-04 01:01:00


-- !query
SELECT   t1a, count(*)
FROM     t1
WHERE    t1c IN (SELECT   (SELECT min(t3c) FROM t3)
                 FROM     t2
                 GROUP BY t2g
                 HAVING   count(*) > 1)
GROUP BY t1a
-- !query schema
struct<t1a:string,count(1):bigint>
-- !query output
val1a	2


-- !query
SELECT (SELECT min(t3d) FROM t3) min_t3d,
       null
FROM   t1
WHERE  t1a = 'val1c'
UNION
SELECT null,
       (SELECT max(t2h) FROM t2) max_t2h
FROM   t1
WHERE  t1a = 'val1c'
-- !query schema
struct<min_t3d:bigint,NULL:timestamp>
-- !query output
10	NULL
NULL	2017-05-04 01:01:00


-- !query
SELECT (SELECT min(t3c) FROM t3) min_t3d
FROM   t1
WHERE  t1a = 'val1a'
INTERSECT
SELECT (SELECT min(t2c) FROM t2) min_t2d
FROM   t1
WHERE  t1a = 'val1d'
-- !query schema
struct<min_t3d:int>
-- !query output
12


-- !query
SELECT q1.t1a, q2.t2a, q1.min_t3d, q2.avg_t3d
FROM   (SELECT t1a, (SELECT min(t3d) FROM t3) min_t3d
        FROM   t1
        WHERE  t1a IN ('val1e', 'val1c')) q1
       FULL OUTER JOIN
       (SELECT t2a, (SELECT avg(t3d) FROM t3) avg_t3d
        FROM   t2
        WHERE  t2a IN ('val1c', 'val2a')) q2
ON     q1.t1a = q2.t2a
AND    q1.min_t3d < q2.avg_t3d
-- !query schema
struct<t1a:string,t2a:string,min_t3d:bigint,avg_t3d:double>
-- !query output
NULL	val2a	NULL	200.83333333333334
val1c	val1c	10	200.83333333333334
val1c	val1c	10	200.83333333333334
val1e	NULL	10	NULL
val1e	NULL	10	NULL
val1e	NULL	10	NULL


-- !query
SELECT (SELECT min(t3d) FROM t3 WHERE t3.t3a = t1.t1a) min_t3d,
       (SELECT max(t2h) FROM t2 WHERE t2.t2a = t1.t1a) max_t2h
FROM   t1
WHERE  t1a = 'val1b'
-- !query schema
struct<min_t3d:bigint,max_t2h:timestamp>
-- !query output
19	2017-05-04 01:01:00


-- !query
SELECT (SELECT min(t3d) FROM t3 WHERE t3a = t1a) min_t3d
FROM   t1
WHERE  t1a = 'val1b'
MINUS
SELECT (SELECT min(t3d) FROM t3) abs_min_t3d
FROM   t1
WHERE  t1a = 'val1b'
-- !query schema
struct<min_t3d:bigint>
-- !query output
19


-- !query
SELECT t1a, t1b
FROM   t1
WHERE  NOT EXISTS (SELECT (SELECT max(t2b)
                           FROM   t2 LEFT JOIN t1
                           ON     t2a = t1a
                           WHERE  t2c = t3c) dummy
                   FROM   t3
                   WHERE  t3b < (SELECT max(t2b)
                                 FROM   t2 LEFT JOIN t1
                                 ON     t2a = t1a
                                 WHERE  t2c = t3c)
                   AND    t3a = t1a)
-- !query schema
struct<t1a:string,t1b:smallint>
-- !query output
val1a	16
val1a	16
val1a	6
val1a	6
val1c	8
val1d	10
val1d	NULL
val1d	NULL
val1e	10
val1e	10
val1e	10


-- !query
SELECT t1a,
    (SELECT count(t2d) FROM t2 WHERE t2a = t1a) count_t2,
    (SELECT count_if(t2d > 0) FROM t2 WHERE t2a = t1a) count_if_t2,
    (SELECT approx_count_distinct(t2d) FROM t2 WHERE t2a = t1a) approx_count_distinct_t2,
    (SELECT collect_list(t2d) FROM t2 WHERE t2a = t1a) collect_list_t2,
    (SELECT sort_array(collect_set(t2d)) FROM t2 WHERE t2a = t1a) collect_set_t2,
    (SELECT hex(count_min_sketch(t2d, 0.5d, 0.5d, 1)) FROM t2 WHERE t2a = t1a) collect_set_t2
FROM t1
-- !query schema
struct<t1a:string,count_t2:bigint,count_if_t2:bigint,approx_count_distinct_t2:bigint,collect_list_t2:array<bigint>,collect_set_t2:array<bigint>,collect_set_t2:string>
-- !query output
val1a	0	0	0	[]	[]	0000000100000000000000000000000100000004000000005D8D6AB90000000000000000000000000000000000000000000000000000000000000000
val1a	0	0	0	[]	[]	0000000100000000000000000000000100000004000000005D8D6AB90000000000000000000000000000000000000000000000000000000000000000
val1a	0	0	0	[]	[]	0000000100000000000000000000000100000004000000005D8D6AB90000000000000000000000000000000000000000000000000000000000000000
val1a	0	0	0	[]	[]	0000000100000000000000000000000100000004000000005D8D6AB90000000000000000000000000000000000000000000000000000000000000000
val1b	6	6	3	[19,119,319,19,19,19]	[19,119,319]	0000000100000000000000060000000100000004000000005D8D6AB90000000000000000000000000000000400000000000000010000000000000001
val1c	2	2	2	[219,19]	[19,219]	0000000100000000000000020000000100000004000000005D8D6AB90000000000000000000000000000000100000000000000000000000000000001
val1d	0	0	0	[]	[]	0000000100000000000000000000000100000004000000005D8D6AB90000000000000000000000000000000000000000000000000000000000000000
val1d	0	0	0	[]	[]	0000000100000000000000000000000100000004000000005D8D6AB90000000000000000000000000000000000000000000000000000000000000000
val1d	0	0	0	[]	[]	0000000100000000000000000000000100000004000000005D8D6AB90000000000000000000000000000000000000000000000000000000000000000
val1e	1	1	1	[19]	[19]	0000000100000000000000010000000100000004000000005D8D6AB90000000000000000000000000000000100000000000000000000000000000000
val1e	1	1	1	[19]	[19]	0000000100000000000000010000000100000004000000005D8D6AB90000000000000000000000000000000100000000000000000000000000000000
val1e	1	1	1	[19]	[19]	0000000100000000000000010000000100000004000000005D8D6AB90000000000000000000000000000000100000000000000000000000000000000


-- !query
SELECT t1c, (SELECT t1c) FROM t1
-- !query schema
struct<t1c:int,scalarsubquery(t1c):int>
-- !query output
12	12
12	12
16	16
16	16
16	16
16	16
8	8
8	8
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT t1c, (SELECT t1c WHERE t1c = 8) FROM t1
-- !query schema
struct<t1c:int,scalarsubquery(t1c, t1c):int>
-- !query output
12	NULL
12	NULL
16	NULL
16	NULL
16	NULL
16	NULL
8	8
8	8
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT t1c, t1d, (SELECT c + d FROM (SELECT t1c AS c, t1d AS d)) FROM t1
-- !query schema
struct<t1c:int,t1d:bigint,scalarsubquery(t1c, t1d):bigint>
-- !query output
12	10	22
12	21	33
16	19	35
16	19	35
16	19	35
16	22	38
8	10	18
8	10	18
NULL	12	NULL
NULL	19	NULL
NULL	19	NULL
NULL	25	NULL


-- !query
SELECT t1c, (SELECT SUM(c) FROM (SELECT t1c AS c)) FROM t1
-- !query schema
struct<t1c:int,scalarsubquery(t1c):bigint>
-- !query output
12	12
12	12
16	16
16	16
16	16
16	16
8	8
8	8
NULL	NULL
NULL	NULL
NULL	NULL
NULL	NULL


-- !query
SELECT t1a, (SELECT SUM(t2b) FROM t2 JOIN (SELECT t1a AS a) ON t2a = a) FROM t1
-- !query schema
struct<t1a:string,scalarsubquery(t1a):bigint>
-- !query output
val1a	NULL
val1a	NULL
val1a	NULL
val1a	NULL
val1b	36
val1c	24
val1d	NULL
val1d	NULL
val1d	NULL
val1e	8
val1e	8
val1e	8


-- !query
CREATE OR REPLACE TEMPORARY VIEW t1 AS VALUES (0, 1), (1, 2) t1(c1, c2)
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE TEMPORARY VIEW t2 AS VALUES (0, 2), (0, 3) t2(c1, c2)
-- !query schema
struct<>
-- !query output



-- !query
SELECT c1, (WITH t AS (SELECT 1 AS a) SELECT a + c1 FROM t) FROM t1
-- !query schema
struct<c1:int,scalarsubquery(c1):int>
-- !query output
0	1
1	2


-- !query
SELECT c1, (WITH t AS (SELECT * FROM t2 WHERE c1 = t1.c1) SELECT SUM(c2) FROM t) FROM t1
-- !query schema
struct<c1:int,scalarsubquery(c1):bigint>
-- !query output
0	5
1	NULL


-- !query
SELECT c1, (
    WITH t3 AS (SELECT c1 + 1 AS c1, c2 + 1 AS c2 FROM t2),
    t4 AS (SELECT * FROM t3 WHERE t1.c1 = c1)
    SELECT SUM(c2) FROM t4
) FROM t1
-- !query schema
struct<c1:int,scalarsubquery(c1):bigint>
-- !query output
0	NULL
1	7


-- !query
SELECT c1, (
    WITH t AS (SELECT * FROM t2)
    SELECT SUM(c2) FROM (SELECT c1, c2 FROM t UNION SELECT c2, c1 FROM t) r(c1, c2)
    WHERE c1 = t1.c1
) FROM t1
-- !query schema
struct<c1:int,scalarsubquery(c1):bigint>
-- !query output
0	5
1	NULL


-- !query
WITH v AS (SELECT * FROM t2)
SELECT * FROM t1 WHERE c1 > (
    WITH t AS (SELECT * FROM t2)
    SELECT COUNT(*) FROM v WHERE c1 = t1.c1 AND c1 > (SELECT SUM(c2) FROM t WHERE c1 = v.c1)
)
-- !query schema
struct<c1:int,c2:int>
-- !query output
1	2


-- !query
WITH t AS (SELECT 1 AS a)
SELECT c1, (SELECT a FROM t WHERE a = c1) FROM t1
-- !query schema
struct<c1:int,scalarsubquery(c1):int>
-- !query output
0	NULL
1	1


-- !query
WITH
v1 AS (SELECT c1, c2, rand(0) c3 FROM t1),
v2 AS (SELECT c1, c2, rand(0) c4 FROM v1 WHERE c3 IN (SELECT c3 FROM v1))
SELECT c1, (
    WITH v3 AS (SELECT c1, c2, rand(0) c5 FROM t2)
    SELECT COUNT(*) FROM (
        SELECT * FROM v2 WHERE c1 > 0
        UNION SELECT * FROM v2 WHERE c2 > 0
        UNION SELECT * FROM v3 WHERE c2 > 0
    ) WHERE c1 = v1.c1
) FROM v1
-- !query schema
struct<c1:int,scalarsubquery(c1):bigint>
-- !query output
0	3
1	1


-- !query
SELECT (SELECT a FROM (SELECT 1 AS a UNION ALL SELECT 2 AS a) t) AS b
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkException
{
  "errorClass" : "SCALAR_SUBQUERY_TOO_MANY_ROWS",
  "sqlState" : "21000",
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 64,
    "fragment" : "(SELECT a FROM (SELECT 1 AS a UNION ALL SELECT 2 AS a) t)"
  } ]
}


-- !query
CREATE OR REPLACE TEMP VIEW t1(c1, c2) AS (VALUES (0, 1), (1, 2))
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE TEMP VIEW t2(c1, c2) AS (VALUES (0, 2), (0, 3))
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE TEMP VIEW students(id, name, major, year) AS (VALUES
    (0, 'A', 'CS', 2022),
    (1, 'B', 'CS', 2022),
    (2, 'C', 'Math', 2022))
-- !query schema
struct<>
-- !query output



-- !query
CREATE OR REPLACE TEMP VIEW exams(sid, course, curriculum, grade, date) AS (VALUES
    (0, 'C1', 'CS', 4, 2020),
    (0, 'C2', 'CS', 3, 2021),
    (1, 'C1', 'CS', 2, 2020),
    (1, 'C2', 'CS', 1, 2021))
-- !query schema
struct<>
-- !query output



-- !query
SELECT students.name, exams.course
FROM students, exams
WHERE students.id = exams.sid
  AND (students.major = 'CS' OR students.major = 'Games Eng')
  AND exams.grade >= (
        SELECT avg(exams.grade) + 1
        FROM exams
        WHERE students.id = exams.sid
           OR (exams.curriculum = students.major AND students.year > exams.date))
-- !query schema
struct<name:string,course:string>
-- !query output
A	C1


-- !query
SELECT (SELECT min(c2) FROM t2 WHERE t1.c1 > t2.c1) FROM t1
-- !query schema
struct<scalarsubquery(c1):int>
-- !query output
2
NULL


-- !query
SELECT (SELECT min(c2) FROM t2 WHERE t1.c1 >= t2.c1 AND t1.c2 < t2.c2) FROM t1
-- !query schema
struct<scalarsubquery(c1, c2):int>
-- !query output
2
3


-- !query
SELECT (SELECT count(*) FROM t2 WHERE t1.c1 > t2.c1) FROM t1
-- !query schema
struct<scalarsubquery(c1):bigint>
-- !query output
0
2


-- !query
SELECT c, (
    SELECT count(*)
    FROM (VALUES ('ab'), ('abc'), ('bc')) t2(c)
    WHERE t1.c = substring(t2.c, 1, 1)
) FROM (VALUES ('a'), ('b')) t1(c)
-- !query schema
struct<c:string,scalarsubquery(c):bigint>
-- !query output
a	2
b	1


-- !query
SELECT c, (
    SELECT count(*)
    FROM (VALUES (0, 6), (1, 5), (2, 4), (3, 3)) t1(a, b)
    WHERE a + b = c
) FROM (VALUES (6)) t2(c)
-- !query schema
struct<c:int,scalarsubquery(c):bigint>
-- !query output
6	4


-- !query
SELECT *, (SELECT count(1) is null FROM t2 WHERE t1.c1 = t2.c1) FROM t1
-- !query schema
struct<c1:int,c2:int,scalarsubquery(c1):boolean>
-- !query output
0	1	false
1	2	false


-- !query
select (select f from (select false as f, max(c2) from t1 where t1.c1 = t1.c1)) from t2
-- !query schema
struct<scalarsubquery():boolean>
-- !query output
false
false


-- !query
set spark.sql.optimizer.optimizeOneRowRelationSubquery.alwaysInline=false
-- !query schema
struct<key:string,value:string>
-- !query output
spark.sql.optimizer.optimizeOneRowRelationSubquery.alwaysInline	false


-- !query
WITH T AS (SELECT 1 AS a)
SELECT (SELECT sum(1) FROM T WHERE a = col OR upper(col)= 'Y')
FROM (SELECT null as col) as foo
-- !query schema
struct<scalarsubquery(col, col):bigint>
-- !query output
NULL


-- !query
set spark.sql.optimizer.optimizeOneRowRelationSubquery.alwaysInline=true
-- !query schema
struct<key:string,value:string>
-- !query output
spark.sql.optimizer.optimizeOneRowRelationSubquery.alwaysInline	true


-- !query
select * from (
 select t1.id c1, (
  select t2.id c from range (1, 2) t2
  where t1.id = t2.id  ) c2
 from range (1, 3) t1 ) t
where t.c2 is not null
-- !query schema
struct<c1:bigint,c2:bigint>
-- !query output
1	1


-- !query
SELECT c1, c2, (SELECT count(*) cnt FROM t1 t2 WHERE t1.c1 = t2.c1 HAVING cnt = 0) FROM t1
-- !query schema
struct<c1:int,c2:int,scalarsubquery(c1):bigint>
-- !query output
0	1	NULL
1	2	NULL
