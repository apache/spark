-- Automatically generated by SQLQueryTestSuite
-- !query
DROP TABLE IF EXISTS t_int
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t_int AS
SELECT * FROM VALUES 
  (13, 10), (1, 11), (14, 12), (2, 12), (2, 13), (3, 13), (4, 14) AS tab(col1, col2)
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t_long
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t_long AS
SELECT * FROM VALUES
  (203L, 200L), (101L, 201L), (102L, 202L), (202L, 202L), (103L, 203L) AS tab(col1, col2)
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t_double
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t_double AS
SELECT CAST(col1 AS DOUBLE) AS col1, CAST(col2 AS DOUBLE) AS col2
FROM VALUES
  (2.4, 2.1), (1.2, 2.2), (1.3, 2.3), (2.2, 2.2), (1.4, 2.4) AS tab(col1, col2)
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t_float
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t_float AS
SELECT CAST(col1 AS FLOAT) col1, CAST(col1 AS FLOAT) col2
FROM VALUES
  (2.1, 2.1), (1.2, 2.2), (1.3, 2.3), (2.4, 2.2), (1.4, 2.4) AS tab(col1, col2)
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t_string
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t_string AS
SELECT * FROM VALUES
  ('a', 'x'), ('b', 'y'), ('x', 'z'), ('b', 'y'), ('x', 'w') AS tab(col1, col2)
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t_binary
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t_binary AS 
SELECT * FROM VALUES 
  (X'AA', X'BB'), (X'BB', X'DD'), (X'EE', X'FF'), (X'22', X'DD'), (X'11', X'22') AS tab(col1, col2)
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t_array_int
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t_array_int AS
SELECT * FROM VALUES 
  (ARRAY(50, 60), ARRAY(10, 20)), 
  (ARRAY(10, 20), ARRAY(30, 40)), 
  (ARRAY(5, 6), ARRAY(50, 60)), 
  (ARRAY(3, 4), ARRAY(30, 40)) AS tab(col1, col2)
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t_array_long
-- !query schema
struct<>
-- !query output



-- !query
CREATE TABLE t_array_long AS
SELECT * FROM VALUES 
  (ARRAY(30L, 40L), ARRAY(10L, 20L)), 
  (ARRAY(10L, 20L), ARRAY(30L, 40L)), 
  (ARRAY(5L, 6L), ARRAY(50L, 60L)), 
  (ARRAY(3L, 4L), ARRAY(30L, 40L)) AS tab(col1, col2)
-- !query schema
struct<>
-- !query output



-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col1)) AS result FROM t_int
-- !query schema
struct<result:bigint>
-- !query output
6


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col1)) FROM t_array_int
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(col1, 12)):bigint>
-- !query output
4


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col2)) FROM t_array_long
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(col2, 12)):bigint>
-- !query output
3


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col1)) FROM t_binary
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(col1, 12)):bigint>
-- !query output
5


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col1)) FROM t_double
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(col1, 12)):bigint>
-- !query output
5


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col2)) FROM t_float
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(col2, 12)):bigint>
-- !query output
5


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col1, 22)) FROM t_int
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(col1, 22)):bigint>
-- !query output
6


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col1)) FROM t_long
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(col1, 12)):bigint>
-- !query output
5


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col1)) FROM t_string
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(col1, 12)):bigint>
-- !query output
3


-- !query
SELECT theta_sketch_estimate(
  theta_union(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2))) FROM t_int
-- !query schema
struct<theta_sketch_estimate(theta_union(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
9


-- !query
SELECT theta_sketch_estimate(
  theta_union(
    theta_sketch_agg(col1, 15),
    theta_sketch_agg(col2))) FROM t_long
-- !query schema
struct<theta_sketch_estimate(theta_union(theta_sketch_agg(col1, 15), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
7


-- !query
SELECT theta_sketch_estimate(
  theta_union(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2))) FROM t_double
-- !query schema
struct<theta_sketch_estimate(theta_union(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
7


-- !query
SELECT theta_sketch_estimate(
  theta_union(
    theta_sketch_agg(col1, 6),
    theta_sketch_agg(col2, 15), 15)) FROM t_float
-- !query schema
struct<theta_sketch_estimate(theta_union(theta_sketch_agg(col1, 6), theta_sketch_agg(col2, 15), 15)):bigint>
-- !query output
5


-- !query
SELECT theta_sketch_estimate(
  theta_union(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2))) FROM t_string
-- !query schema
struct<theta_sketch_estimate(theta_union(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
6


-- !query
SELECT theta_sketch_estimate(
  theta_union(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2), 20)) FROM t_binary
-- !query schema
struct<theta_sketch_estimate(theta_union(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 20)):bigint>
-- !query output
7


-- !query
SELECT theta_sketch_estimate(
  theta_union(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2))) FROM t_array_int
-- !query schema
struct<theta_sketch_estimate(theta_union(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
5


-- !query
SELECT theta_sketch_estimate(
  theta_union(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2, 13))) FROM t_array_long
-- !query schema
struct<theta_sketch_estimate(theta_union(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 13), 12)):bigint>
-- !query output
5


-- !query
SELECT theta_sketch_estimate(
  theta_intersection(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2))) FROM t_int
-- !query schema
struct<theta_sketch_estimate(theta_intersection(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(
  theta_intersection(
    theta_sketch_agg(col1, 5),
    theta_sketch_agg(col2, 12), 15)) FROM t_long
-- !query schema
struct<theta_sketch_estimate(theta_intersection(theta_sketch_agg(col1, 5), theta_sketch_agg(col2, 12), 15)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(
  theta_intersection(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2))) FROM t_double
-- !query schema
struct<theta_sketch_estimate(theta_intersection(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(
  theta_intersection(
    theta_sketch_agg(col1, 5),
    theta_sketch_agg(col2))) FROM t_float
-- !query schema
struct<theta_sketch_estimate(theta_intersection(theta_sketch_agg(col1, 5), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
5


-- !query
SELECT theta_sketch_estimate(
  theta_intersection(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2))) FROM t_string
-- !query schema
struct<theta_sketch_estimate(theta_intersection(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
1


-- !query
SELECT theta_sketch_estimate(
  theta_intersection(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2), 22)) FROM t_binary
-- !query schema
struct<theta_sketch_estimate(theta_intersection(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 22)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(
  theta_intersection(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2))) FROM t_array_int
-- !query schema
struct<theta_sketch_estimate(theta_intersection(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(
  theta_intersection(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2, 10))) FROM t_array_long
-- !query schema
struct<theta_sketch_estimate(theta_intersection(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 10), 12)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(
  theta_difference(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2))) FROM t_int
-- !query schema
struct<theta_sketch_estimate(theta_difference(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
4


-- !query
SELECT theta_sketch_estimate(
  theta_difference(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2), 15)) FROM t_long
-- !query schema
struct<theta_sketch_estimate(theta_difference(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 15)):bigint>
-- !query output
3


-- !query
SELECT theta_sketch_estimate(
  theta_difference(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2))) FROM t_double
-- !query schema
struct<theta_sketch_estimate(theta_difference(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
3


-- !query
SELECT theta_sketch_estimate(
  theta_difference(
    theta_sketch_agg(col1, 12),
    theta_sketch_agg(col2))) FROM t_float
-- !query schema
struct<theta_sketch_estimate(theta_difference(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
0


-- !query
SELECT theta_sketch_estimate(
  theta_difference(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2))) FROM t_string
-- !query schema
struct<theta_sketch_estimate(theta_difference(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(
  theta_difference(
    theta_sketch_agg(col1, 6),
    theta_sketch_agg(col2, 8), 20)) FROM t_binary
-- !query schema
struct<theta_sketch_estimate(theta_difference(theta_sketch_agg(col1, 6), theta_sketch_agg(col2, 8), 20)):bigint>
-- !query output
3


-- !query
SELECT theta_sketch_estimate(
  theta_difference(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2))) FROM t_array_int
-- !query schema
struct<theta_sketch_estimate(theta_difference(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), 12)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(
  theta_difference(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2, 4))) FROM t_array_long
-- !query schema
struct<theta_sketch_estimate(theta_difference(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 4), 12)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(theta_union_agg(sketch, 15))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_int
          UNION ALL
          SELECT theta_sketch_agg(col2, 20) as sketch FROM t_int)
-- !query schema
struct<theta_sketch_estimate(theta_union_agg(sketch, 15)):bigint>
-- !query output
9


-- !query
SELECT theta_sketch_estimate(theta_union_agg(sketch, 12))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_double
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_double)
-- !query schema
struct<theta_sketch_estimate(theta_union_agg(sketch, 12)):bigint>
-- !query output
7


-- !query
SELECT theta_sketch_estimate(theta_union_agg(sketch, 14))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_string
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_string)
-- !query schema
struct<theta_sketch_estimate(theta_union_agg(sketch, 14)):bigint>
-- !query output
6


-- !query
SELECT theta_sketch_estimate(theta_union_agg(sketch, 10))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_long
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_long)
-- !query schema
struct<theta_sketch_estimate(theta_union_agg(sketch, 10)):bigint>
-- !query output
7


-- !query
SELECT theta_sketch_estimate(theta_union_agg(sketch, 6))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_float
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_float)
-- !query schema
struct<theta_sketch_estimate(theta_union_agg(sketch, 6)):bigint>
-- !query output
5


-- !query
SELECT theta_sketch_estimate(theta_union_agg(sketch))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_binary
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_binary)
-- !query schema
struct<theta_sketch_estimate(theta_union_agg(sketch, 12)):bigint>
-- !query output
7


-- !query
SELECT theta_sketch_estimate(theta_union_agg(sketch, 12))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_array_int
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_array_int)
-- !query schema
struct<theta_sketch_estimate(theta_union_agg(sketch, 12)):bigint>
-- !query output
5


-- !query
SELECT theta_sketch_estimate(theta_union_agg(sketch, 16))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_array_long
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_array_long)
-- !query schema
struct<theta_sketch_estimate(theta_union_agg(sketch, 16)):bigint>
-- !query output
5


-- !query
SELECT theta_sketch_estimate(theta_intersection_agg(sketch, 15))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_int
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_int)
-- !query schema
struct<theta_sketch_estimate(theta_intersection_agg(sketch, 15)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(theta_intersection_agg(sketch, 10))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_long
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_long)
-- !query schema
struct<theta_sketch_estimate(theta_intersection_agg(sketch, 10)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(theta_intersection_agg(sketch, 8))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_float
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_float)
-- !query schema
struct<theta_sketch_estimate(theta_intersection_agg(sketch, 8)):bigint>
-- !query output
5


-- !query
SELECT theta_sketch_estimate(theta_intersection_agg(sketch, 12))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_double
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_double)
-- !query schema
struct<theta_sketch_estimate(theta_intersection_agg(sketch, 12)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(theta_intersection_agg(sketch, 14))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_string
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_string)
-- !query schema
struct<theta_sketch_estimate(theta_intersection_agg(sketch, 14)):bigint>
-- !query output
1


-- !query
SELECT theta_sketch_estimate(theta_intersection_agg(sketch, 18))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_binary
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_binary)
-- !query schema
struct<theta_sketch_estimate(theta_intersection_agg(sketch, 18)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(theta_intersection_agg(sketch))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_array_int
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_array_int)
-- !query schema
struct<theta_sketch_estimate(theta_intersection_agg(sketch, 12)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(theta_intersection_agg(sketch, 9))
    FROM (SELECT theta_sketch_agg(col1) as sketch FROM t_array_long
          UNION ALL
          SELECT theta_sketch_agg(col2) as sketch FROM t_array_long)
-- !query schema
struct<theta_sketch_estimate(theta_intersection_agg(sketch, 9)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col))
FROM VALUES (1), (null), (2), (null), (3) tab(col)
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(col, 12)):bigint>
-- !query output
3


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col))
FROM VALUES ('test'), (null), ('null'), (null) tab(col)
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(col, 12)):bigint>
-- !query output
2


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col))
FROM VALUES (100L), (null), (200L), (null), (300L) tab(col)
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(col, 12)):bigint>
-- !query output
3


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(CAST(col AS DOUBLE)))
FROM VALUES (1.1), (null), (2.2), (null), (3.3) tab(col)
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(CAST(col AS DOUBLE), 12)):bigint>
-- !query output
3


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(CAST(col AS FLOAT)))
FROM VALUES (1.5), (null), (2.5), (null), (3.5) tab(col)
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(CAST(col AS FLOAT), 12)):bigint>
-- !query output
3


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col))
FROM VALUES (X'AA'), (null), (X'BB'), (null), (X'CC') tab(col)
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(col, 12)):bigint>
-- !query output
3


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col))
FROM VALUES (ARRAY(1, 2)), (null), (ARRAY(3, 4)), (null), (ARRAY(5, 6)) tab(col)
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(col, 12)):bigint>
-- !query output
3


-- !query
SELECT theta_sketch_estimate(theta_sketch_agg(col))
FROM VALUES (ARRAY(10L, 20L)), (null), (ARRAY(30L, 40L)), (null), (ARRAY(50L, 60L)) tab(col)
-- !query schema
struct<theta_sketch_estimate(theta_sketch_agg(col, 12)):bigint>
-- !query output
3


-- !query
WITH sketches AS (
  SELECT 'int_sketch' as sketch_type, theta_sketch_agg(col1, 12) as sketch FROM t_int
  UNION ALL
  SELECT 'long_sketch' as sketch_type, theta_sketch_agg(col1, 15) as sketch FROM t_long
  UNION ALL
  SELECT 'double_sketch' as sketch_type, theta_sketch_agg(col1, 10) as sketch FROM t_double
  UNION ALL
  SELECT 'string_sketch' as sketch_type, theta_sketch_agg(col1, 14) as sketch FROM t_string
),
union_result AS (
  SELECT theta_union_agg(sketch, 16) as union_sketch FROM sketches
),
individual_sketches AS (
  SELECT theta_sketch_agg(col1, 12) as sketch1, theta_sketch_agg(col2, 12) as sketch2 FROM t_int
)
SELECT 
  theta_sketch_estimate((SELECT union_sketch FROM union_result)) as union_estimate,
  theta_sketch_estimate(theta_union(sketch1, sketch2, 15)) as binary_union_estimate,
  theta_sketch_estimate(theta_intersection(sketch1, sketch2, 15)) as intersection_estimate,
  theta_sketch_estimate(theta_difference(sketch1, sketch2, 15)) as difference_estimate
FROM individual_sketches
-- !query schema
struct<union_estimate:bigint,binary_union_estimate:bigint,intersection_estimate:bigint,difference_estimate:bigint>
-- !query output
19	9	2	4


-- !query
SELECT theta_sketch_agg(col, 2)
FROM VALUES (50), (60), (60) tab(col)
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkRuntimeException
{
  "errorClass" : "THETA_INVALID_LG_NOM_ENTRIES",
  "sqlState" : "22546",
  "messageParameters" : {
    "max" : "26",
    "min" : "4",
    "value" : "2"
  }
}


-- !query
SELECT theta_sketch_agg(col, 40)
FROM VALUES (50), (60), (60) tab(col)
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkRuntimeException
{
  "errorClass" : "THETA_INVALID_LG_NOM_ENTRIES",
  "sqlState" : "22546",
  "messageParameters" : {
    "max" : "26",
    "min" : "4",
    "value" : "40"
  }
}


-- !query
SELECT theta_union_agg(sketch, 3)
FROM (SELECT theta_sketch_agg(col, 12) as sketch
        FROM VALUES (1) AS tab(col)
      UNION ALL
      SELECT theta_sketch_agg(col, 20) as sketch
        FROM VALUES (1) AS tab(col))
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkRuntimeException
{
  "errorClass" : "THETA_INVALID_LG_NOM_ENTRIES",
  "sqlState" : "22546",
  "messageParameters" : {
    "max" : "26",
    "min" : "4",
    "value" : "3"
  }
}


-- !query
SELECT theta_union_agg(sketch, 27)
FROM (SELECT theta_sketch_agg(col, 12) as sketch
        FROM VALUES (1) AS tab(col)
      UNION ALL
      SELECT theta_sketch_agg(col, 20) as sketch
        FROM VALUES (1) AS tab(col))
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkRuntimeException
{
  "errorClass" : "THETA_INVALID_LG_NOM_ENTRIES",
  "sqlState" : "22546",
  "messageParameters" : {
    "max" : "26",
    "min" : "4",
    "value" : "27"
  }
}


-- !query
SELECT theta_intersection_agg(sketch, 3)
FROM (SELECT theta_sketch_agg(col, 12) as sketch
        FROM VALUES (1) AS tab(col)
      UNION ALL
      SELECT theta_sketch_agg(col, 20) as sketch
        FROM VALUES (1) AS tab(col))
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkRuntimeException
{
  "errorClass" : "THETA_INVALID_LG_NOM_ENTRIES",
  "sqlState" : "22546",
  "messageParameters" : {
    "max" : "26",
    "min" : "4",
    "value" : "3"
  }
}


-- !query
SELECT theta_union(1, 2)
  FROM VALUES
    (1, 4),
    (2, 5),
    (3, 6) AS tab(col1, col2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"1\"",
    "inputType" : "\"INT\"",
    "paramIndex" : "first",
    "requiredType" : "\"BINARY\"",
    "sqlExpr" : "\"theta_union(1, 2, 12)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 24,
    "fragment" : "theta_union(1, 2)"
  } ]
}


-- !query
SELECT theta_intersection(1, 2)
  FROM VALUES
    (1, 4),
    (2, 5),
    (3, 6) AS tab(col1, col2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"1\"",
    "inputType" : "\"INT\"",
    "paramIndex" : "first",
    "requiredType" : "\"BINARY\"",
    "sqlExpr" : "\"theta_intersection(1, 2, 12)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 31,
    "fragment" : "theta_intersection(1, 2)"
  } ]
}


-- !query
SELECT theta_difference(1, 2)
  FROM VALUES
    (1, 4),
    (2, 5),
    (3, 6) AS tab(col1, col2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"1\"",
    "inputType" : "\"INT\"",
    "paramIndex" : "first",
    "requiredType" : "\"BINARY\"",
    "sqlExpr" : "\"theta_difference(1, 2, 12)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 29,
    "fragment" : "theta_difference(1, 2)"
  } ]
}


-- !query
SELECT theta_union(
    theta_sketch_agg(col1),
    theta_sketch_agg(col2), 'invalid')
  FROM VALUES
    (1, 4),
    (2, 5),
    (3, 6) AS tab(col1, col2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"invalid\"",
    "inputType" : "\"STRING\"",
    "paramIndex" : "third",
    "requiredType" : "\"INT\"",
    "sqlExpr" : "\"theta_union(theta_sketch_agg(col1, 12), theta_sketch_agg(col2, 12), invalid)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 86,
    "fragment" : "theta_union(\n    theta_sketch_agg(col1),\n    theta_sketch_agg(col2), 'invalid')"
  } ]
}


-- !query
SELECT theta_intersection(
    theta_sketch_agg(col1),
    'invalid_sketch')
  FROM VALUES
    (1, 4),
    (2, 5),
    (3, 6) AS tab(col1, col2)
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"invalid_sketch\"",
    "inputType" : "\"STRING\"",
    "paramIndex" : "second",
    "requiredType" : "\"BINARY\"",
    "sqlExpr" : "\"theta_intersection(theta_sketch_agg(col1, 12), invalid_sketch, 12)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 76,
    "fragment" : "theta_intersection(\n    theta_sketch_agg(col1),\n    'invalid_sketch')"
  } ]
}


-- !query
SELECT theta_intersection_agg(sketch, 'invalid')
FROM (SELECT theta_sketch_agg(col) as sketch
        FROM VALUES (1) AS tab(col))
-- !query schema
struct<>
-- !query output
org.apache.spark.sql.catalyst.ExtendedAnalysisException
{
  "errorClass" : "DATATYPE_MISMATCH.UNEXPECTED_INPUT_TYPE",
  "sqlState" : "42K09",
  "messageParameters" : {
    "inputSql" : "\"invalid\"",
    "inputType" : "\"STRING\"",
    "paramIndex" : "second",
    "requiredType" : "\"INT\"",
    "sqlExpr" : "\"theta_intersection_agg(sketch, invalid)\""
  },
  "queryContext" : [ {
    "objectType" : "",
    "objectName" : "",
    "startIndex" : 8,
    "stopIndex" : 48,
    "fragment" : "theta_intersection_agg(sketch, 'invalid')"
  } ]
}


-- !query
SELECT theta_sketch_estimate(CAST('abc' AS BINARY))
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkRuntimeException
{
  "errorClass" : "THETA_INVALID_INPUT_SKETCH_BUFFER",
  "sqlState" : "22546",
  "messageParameters" : {
    "function" : "`theta_sketch_estimate`"
  }
}


-- !query
SELECT theta_union(CAST('abc' AS BINARY), CAST('def' AS BINARY))
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkRuntimeException
{
  "errorClass" : "THETA_INVALID_INPUT_SKETCH_BUFFER",
  "sqlState" : "22546",
  "messageParameters" : {
    "function" : "`theta_union`"
  }
}


-- !query
SELECT theta_intersection(CAST('abc' AS BINARY), CAST('def' AS BINARY))
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkRuntimeException
{
  "errorClass" : "THETA_INVALID_INPUT_SKETCH_BUFFER",
  "sqlState" : "22546",
  "messageParameters" : {
    "function" : "`theta_intersection`"
  }
}


-- !query
SELECT theta_difference(CAST('abc' AS BINARY), CAST('def' AS BINARY))
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkRuntimeException
{
  "errorClass" : "THETA_INVALID_INPUT_SKETCH_BUFFER",
  "sqlState" : "22546",
  "messageParameters" : {
    "function" : "`theta_difference`"
  }
}


-- !query
SELECT theta_union_agg(buffer, 15)
FROM (SELECT CAST('abc' AS BINARY) AS buffer)
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkRuntimeException
{
  "errorClass" : "THETA_INVALID_INPUT_SKETCH_BUFFER",
  "sqlState" : "22546",
  "messageParameters" : {
    "function" : "`theta_union_agg`"
  }
}


-- !query
SELECT theta_intersection_agg(buffer, 15)
FROM (SELECT CAST('abc' AS BINARY) AS buffer)
-- !query schema
struct<>
-- !query output
org.apache.spark.SparkRuntimeException
{
  "errorClass" : "THETA_INVALID_INPUT_SKETCH_BUFFER",
  "sqlState" : "22546",
  "messageParameters" : {
    "function" : "`theta_intersection_agg`"
  }
}


-- !query
DROP TABLE IF EXISTS t_int
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t_long
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t_double
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t_float
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t_string
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t_binary
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t_array_int
-- !query schema
struct<>
-- !query output



-- !query
DROP TABLE IF EXISTS t_array_long
-- !query schema
struct<>
-- !query output

