memberSearchIndex = [{"p":"org.apache.spark.network.shuffle.protocol","c":"AbstractFetchShuffleBlocks","l":"AbstractFetchShuffleBlocks(String, String, int)","u":"%3Cinit%3E(java.lang.String,java.lang.String,int)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"algorithm"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FinalizeShuffleMerge","l":"appAttemptId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"appAttemptId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveShuffleMerge","l":"appAttemptId"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppAttemptId","l":"AppAttemptId(String, int)","u":"%3Cinit%3E(java.lang.String,int)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppAttemptShuffleMergeId","l":"AppAttemptShuffleMergeId(String, int, int, int)","u":"%3Cinit%3E(java.lang.String,int,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver.AppExecId","l":"AppExecId(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"appId"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver.AppExecId","l":"appId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"AbstractFetchShuffleBlocks","l":"appId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"appId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FinalizeShuffleMerge","l":"appId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"GetLocalDirsForExecutors","l":"appId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"OpenBlocks","l":"appId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"appId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RegisterExecutor","l":"appId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveBlocks","l":"appId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveShuffleMerge","l":"appId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlock","l":"appId"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppAttemptId","l":"appId"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppAttemptShuffleMergeId","l":"appId"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"applicationRemoved(String, boolean)","u":"applicationRemoved(java.lang.String,boolean)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver","l":"applicationRemoved(String, boolean)","u":"applicationRemoved(java.lang.String,boolean)"},{"p":"org.apache.spark.network.shuffle","c":"MergedShuffleFileManager","l":"applicationRemoved(String, boolean)","u":"applicationRemoved(java.lang.String,boolean)"},{"p":"org.apache.spark.network.shuffle","c":"NoOpMergedShuffleFileManager","l":"applicationRemoved(String, boolean)","u":"applicationRemoved(java.lang.String,boolean)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"applicationRemoved(String, boolean)","u":"applicationRemoved(java.lang.String,boolean)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppPathsInfo","l":"AppPathsInfo(String[], int)","u":"%3Cinit%3E(java.lang.String[],int)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShuffleMergePartitionsInfo","l":"AppShuffleMergePartitionsInfo(int, boolean)","u":"%3Cinit%3E(int,boolean)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"ATTEMPT_ID_KEY"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppAttemptId","l":"attemptId"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppAttemptShuffleMergeId","l":"attemptId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlocks","l":"batchFetchEnabled"},{"p":"org.apache.spark.network.shuffle.protocol","c":"MergeStatuses","l":"bitmaps"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlock","l":"blockData"},{"p":"org.apache.spark.network.shuffle","c":"ErrorHandler.BlockFetchErrorHandler","l":"BlockFetchErrorHandler()","u":"%3Cinit%3E()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlock","l":"blockId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlockStream","l":"blockId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"OpenBlocks","l":"blockIds"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveBlocks","l":"blockIds"},{"p":"org.apache.spark.network.shuffle","c":"ErrorHandler.BlockPushErrorHandler","l":"BlockPushErrorHandler()","u":"%3Cinit%3E()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockPushReturnCode","l":"BlockPushReturnCode(byte, String)","u":"%3Cinit%3E(byte,java.lang.String)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"BLOCKS_REMOVED"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlocksRemoved","l":"BlocksRemoved(int)","u":"%3Cinit%3E(int)"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"BlockStoreClient()","u":"%3Cinit%3E()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage","l":"BlockTransferMessage()","u":"%3Cinit%3E()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"CorruptionCause","l":"cause"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"channelActive(TransportClient)","u":"channelActive(org.apache.spark.network.client.TransportClient)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"channelInactive(TransportClient)","u":"channelInactive(org.apache.spark.network.client.TransportClient)"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"checkInit()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"checksum"},{"p":"org.apache.spark.network.shuffle.checksum","c":"ShuffleChecksumHelper","l":"CHECKSUM_CALCULATION_BUFFER"},{"p":"org.apache.spark.network.shuffle.checksum","c":"Cause","l":"CHECKSUM_VERIFY_PASS"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlockChunks","l":"chunkIds"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"clientFactory"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"close()"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockStoreClient","l":"close()"},{"p":"org.apache.spark.network.shuffle","c":"MergedShuffleFileManager","l":"close()"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"close()"},{"p":"org.apache.spark.network.shuffle","c":"DownloadFileWritableChannel","l":"closeAndRead()"},{"p":"org.apache.spark.network.shuffle","c":"Constants","l":"Constants()","u":"%3Cinit%3E()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"CORRUPTION_CAUSE"},{"p":"org.apache.spark.network.shuffle.protocol","c":"CorruptionCause","l":"CorruptionCause(Cause)","u":"%3Cinit%3E(org.apache.spark.network.shuffle.checksum.Cause)"},{"p":"org.apache.spark.network.shuffle","c":"RetryingBlockTransferor.BlockTransferStarter","l":"createAndStart(String[], BlockTransferListener)","u":"createAndStart(java.lang.String[],org.apache.spark.network.shuffle.BlockTransferListener)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"createErrorHandler()"},{"p":"org.apache.spark.network.shuffle.checksum","c":"ShuffleChecksumHelper","l":"createPartitionChecksums(int, String)","u":"createPartitionChecksums(int,java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"DownloadFileManager","l":"createTempFile(TransportConf)","u":"createTempFile(org.apache.spark.network.util.TransportConf)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShufflePartitionInfo","l":"dataChannel"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockPushReturnCode","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlocksRemoved","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"CorruptionCause","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"ExecutorShuffleInfo","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlockChunks","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlocks","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FinalizeShuffleMerge","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"GetLocalDirsForExecutors","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"LocalDirsForExecutors","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"MergeStatuses","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"OpenBlocks","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RegisterExecutor","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveBlocks","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveShuffleMerge","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"StreamHandle","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlock","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlockStream","l":"decode(ByteBuf)","u":"decode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Decoder","l":"Decoder()","u":"%3Cinit%3E()"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"DELETE_ALL_MERGED_SHUFFLE"},{"p":"org.apache.spark.network.shuffle","c":"DownloadFile","l":"delete()"},{"p":"org.apache.spark.network.shuffle","c":"SimpleDownloadFile","l":"delete()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"DIAGNOSE_CORRUPTION"},{"p":"org.apache.spark.network.shuffle.checksum","c":"ShuffleChecksumHelper","l":"diagnoseCorruption(String, File, int, ManagedBuffer, long)","u":"diagnoseCorruption(java.lang.String,java.io.File,int,org.apache.spark.network.buffer.ManagedBuffer,long)"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"diagnoseCorruption(String, int, String, int, long, int, long, String)","u":"diagnoseCorruption(java.lang.String,int,java.lang.String,int,long,int,long,java.lang.String)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"DiagnoseCorruption(String, String, int, long, int, long, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,int,long,int,long,java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver","l":"diagnoseShuffleBlockCorruption(String, String, int, long, int, long, String)","u":"diagnoseShuffleBlockCorruption(java.lang.String,java.lang.String,int,long,int,long,java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"AppsWithRecoveryDisabled","l":"disableRecoveryOfApp(String)","u":"disableRecoveryOfApp(java.lang.String)"},{"p":"org.apache.spark.network.shuffle.checksum","c":"Cause","l":"DISK_ISSUE"},{"p":"org.apache.spark.network.shuffle.checksum","c":"ShuffleChecksumHelper","l":"EMPTY_CHECKSUM"},{"p":"org.apache.spark.network.shuffle.checksum","c":"ShuffleChecksumHelper","l":"EMPTY_CHECKSUM_VALUE"},{"p":"org.apache.spark.network.shuffle.protocol","c":"AbstractFetchShuffleBlocks","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockPushReturnCode","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlocksRemoved","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"CorruptionCause","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"ExecutorShuffleInfo","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlockChunks","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlocks","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FinalizeShuffleMerge","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"GetLocalDirsForExecutors","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"LocalDirsForExecutors","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"MergeStatuses","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"OpenBlocks","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RegisterExecutor","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveBlocks","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveShuffleMerge","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"StreamHandle","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlock","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlockStream","l":"encode(ByteBuf)","u":"encode(io.netty.buffer.ByteBuf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"AbstractFetchShuffleBlocks","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockPushReturnCode","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlocksRemoved","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"CorruptionCause","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"ExecutorShuffleInfo","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlockChunks","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlocks","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FinalizeShuffleMerge","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"GetLocalDirsForExecutors","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"LocalDirsForExecutors","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"MergeStatuses","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"OpenBlocks","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RegisterExecutor","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveBlocks","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveShuffleMerge","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"StreamHandle","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlock","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlockStream","l":"encodedLength()"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver.AppExecId","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"AbstractFetchShuffleBlocks","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockPushReturnCode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlocksRemoved","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"CorruptionCause","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"ExecutorShuffleInfo","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlockChunks","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlocks","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FinalizeShuffleMerge","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"GetLocalDirsForExecutors","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"LocalDirsForExecutors","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"MergeStatuses","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"OpenBlocks","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RegisterExecutor","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveBlocks","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveShuffleMerge","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"StreamHandle","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlock","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlockStream","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppAttemptId","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppAttemptShuffleMergeId","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppPathsInfo","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleIndexRecord","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"exceptionCaught(Throwable, TransportClient)","u":"exceptionCaught(java.lang.Throwable,org.apache.spark.network.client.TransportClient)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver.AppExecId","l":"execId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"AbstractFetchShuffleBlocks","l":"execId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"execId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"OpenBlocks","l":"execId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RegisterExecutor","l":"execId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveBlocks","l":"execId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlock","l":"execId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"GetLocalDirsForExecutors","l":"execIds"},{"p":"org.apache.spark.network.shuffle","c":"ExecutorDiskUtils","l":"ExecutorDiskUtils()","u":"%3Cinit%3E()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RegisterExecutor","l":"executorInfo"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"executorRemoved(String, String)","u":"executorRemoved(java.lang.String,java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver","l":"executorRemoved(String, String)","u":"executorRemoved(java.lang.String,java.lang.String)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"ExecutorShuffleInfo","l":"ExecutorShuffleInfo(String[], int, String)","u":"%3Cinit%3E(java.lang.String[],int,java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"ExternalBlockHandler(OneForOneStreamManager, ExternalShuffleBlockResolver)","u":"%3Cinit%3E(org.apache.spark.network.server.OneForOneStreamManager,org.apache.spark.network.shuffle.ExternalShuffleBlockResolver)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"ExternalBlockHandler(OneForOneStreamManager, ExternalShuffleBlockResolver, MergedShuffleFileManager)","u":"%3Cinit%3E(org.apache.spark.network.server.OneForOneStreamManager,org.apache.spark.network.shuffle.ExternalShuffleBlockResolver,org.apache.spark.network.shuffle.MergedShuffleFileManager)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"ExternalBlockHandler(TransportConf, File)","u":"%3Cinit%3E(org.apache.spark.network.util.TransportConf,java.io.File)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"ExternalBlockHandler(TransportConf, File, MergedShuffleFileManager)","u":"%3Cinit%3E(org.apache.spark.network.util.TransportConf,java.io.File,org.apache.spark.network.shuffle.MergedShuffleFileManager)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockStoreClient","l":"ExternalBlockStoreClient(TransportConf, SecretKeyHolder, boolean, long)","u":"%3Cinit%3E(org.apache.spark.network.util.TransportConf,org.apache.spark.network.sasl.SecretKeyHolder,boolean,long)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver","l":"ExternalShuffleBlockResolver(TransportConf, File)","u":"%3Cinit%3E(org.apache.spark.network.util.TransportConf,java.io.File)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockPushReturnCode","l":"failureBlockId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"FETCH_SHUFFLE_BLOCK_CHUNKS"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"FETCH_SHUFFLE_BLOCKS"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"fetchBlocks(String, int, String, String[], BlockFetchingListener, DownloadFileManager)","u":"fetchBlocks(java.lang.String,int,java.lang.String,java.lang.String[],org.apache.spark.network.shuffle.BlockFetchingListener,org.apache.spark.network.shuffle.DownloadFileManager)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockStoreClient","l":"fetchBlocks(String, int, String, String[], BlockFetchingListener, DownloadFileManager)","u":"fetchBlocks(java.lang.String,int,java.lang.String,java.lang.String[],org.apache.spark.network.shuffle.BlockFetchingListener,org.apache.spark.network.shuffle.DownloadFileManager)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlockChunks","l":"FetchShuffleBlockChunks(String, String, int, int, int[], int[][])","u":"%3Cinit%3E(java.lang.String,java.lang.String,int,int,int[],int[][])"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlocks","l":"FetchShuffleBlocks(String, String, int, long[], int[][], boolean)","u":"%3Cinit%3E(java.lang.String,java.lang.String,int,long[],int[][],boolean)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"FINALIZE_SHUFFLE_MERGE"},{"p":"org.apache.spark.network.shuffle","c":"MergedShuffleFileManager","l":"finalizeShuffleMerge(FinalizeShuffleMerge)","u":"finalizeShuffleMerge(org.apache.spark.network.shuffle.protocol.FinalizeShuffleMerge)"},{"p":"org.apache.spark.network.shuffle","c":"NoOpMergedShuffleFileManager","l":"finalizeShuffleMerge(FinalizeShuffleMerge)","u":"finalizeShuffleMerge(org.apache.spark.network.shuffle.protocol.FinalizeShuffleMerge)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"finalizeShuffleMerge(FinalizeShuffleMerge)","u":"finalizeShuffleMerge(org.apache.spark.network.shuffle.protocol.FinalizeShuffleMerge)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FinalizeShuffleMerge","l":"FinalizeShuffleMerge(String, int, int, int)","u":"%3Cinit%3E(java.lang.String,int,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"finalizeShuffleMerge(String, int, int, int, MergeFinalizerListener)","u":"finalizeShuffleMerge(java.lang.String,int,int,int,org.apache.spark.network.shuffle.MergeFinalizerListener)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockStoreClient","l":"finalizeShuffleMerge(String, int, int, int, MergeFinalizerListener)","u":"finalizeShuffleMerge(java.lang.String,int,int,int,org.apache.spark.network.shuffle.MergeFinalizerListener)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Decoder","l":"fromByteBuffer(ByteBuffer)","u":"fromByteBuffer(java.nio.ByteBuffer)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"GET_LOCAL_DIRS_FOR_EXECUTORS"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"getAllMetrics()"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"getAppAttemptId()"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShuffleInfo","l":"getAppPathsInfo()"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver","l":"getBlockData(String, String, int, long, int)","u":"getBlockData(java.lang.String,java.lang.String,int,long,int)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"getBlockResolver()"},{"p":"org.apache.spark.network.shuffle.checksum","c":"ShuffleChecksumHelper","l":"getChecksumByAlgorithm(String)","u":"getChecksumByAlgorithm(java.lang.String)"},{"p":"org.apache.spark.network.shuffle.checksum","c":"ShuffleChecksumHelper","l":"getChecksumFileName(String, String)","u":"getChecksumFileName(java.lang.String,java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"MergedBlockMeta","l":"getChunksBitmapBuffer()"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver","l":"getContinuousBlocksData(String, String, int, long, int, int)","u":"getContinuousBlocksData(java.lang.String,java.lang.String,int,long,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShufflePartitionInfo","l":"getDataFilePos()"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleTransportContext","l":"getDecoder()"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver","l":"getDiskPersistedRddBlockData(ExecutorShuffleInfo, int, int)","u":"getDiskPersistedRddBlockData(org.apache.spark.network.shuffle.protocol.ExecutorShuffleInfo,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.MergeShuffleFile","l":"getDos()"},{"p":"org.apache.spark.network.shuffle","c":"ExecutorDiskUtils","l":"getFilePath(String[], int, String)","u":"getFilePath(java.lang.String[],int,java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"getHostLocalDirs(String, int, String[], CompletableFuture<Map<String, String[]>>)","u":"getHostLocalDirs(java.lang.String,int,java.lang.String[],java.util.concurrent.CompletableFuture)"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleIndexInformation","l":"getIndex(int)"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleIndexInformation","l":"getIndex(int, int)","u":"getIndex(int,int)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver","l":"getLocalDirs(String, Set<String>)","u":"getLocalDirs(java.lang.String,java.util.Set)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"LocalDirsForExecutors","l":"getLocalDirsByExec()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"GetLocalDirsForExecutors","l":"GetLocalDirsForExecutors(String, String[])","u":"%3Cinit%3E(java.lang.String,java.lang.String[])"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShufflePartitionInfo","l":"getMapTracker()"},{"p":"org.apache.spark.network.shuffle","c":"MergedShuffleFileManager","l":"getMergedBlockData(String, int, int, int, int)","u":"getMergedBlockData(java.lang.String,int,int,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"NoOpMergedShuffleFileManager","l":"getMergedBlockData(String, int, int, int, int)","u":"getMergedBlockData(java.lang.String,int,int,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"getMergedBlockData(String, int, int, int, int)","u":"getMergedBlockData(java.lang.String,int,int,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"MergedShuffleFileManager","l":"getMergedBlockDirs(String)","u":"getMergedBlockDirs(java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"NoOpMergedShuffleFileManager","l":"getMergedBlockDirs(String)","u":"getMergedBlockDirs(java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"getMergedBlockDirs(String)","u":"getMergedBlockDirs(java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"MergedShuffleFileManager","l":"getMergedBlockMeta(String, int, int, int)","u":"getMergedBlockMeta(java.lang.String,int,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"NoOpMergedShuffleFileManager","l":"getMergedBlockMeta(String, int, int, int)","u":"getMergedBlockMeta(java.lang.String,int,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"getMergedBlockMeta(String, int, int, int)","u":"getMergedBlockMeta(java.lang.String,int,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"getMergedBlockMeta(String, int, int, int, int, MergedBlocksMetaListener)","u":"getMergedBlockMeta(java.lang.String,int,int,int,int,org.apache.spark.network.shuffle.MergedBlocksMetaListener)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockStoreClient","l":"getMergedBlockMeta(String, int, int, int, int, MergedBlocksMetaListener)","u":"getMergedBlockMeta(java.lang.String,int,int,int,int,org.apache.spark.network.shuffle.MergedBlocksMetaListener)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"getMergedBlockMetaReqHandler()"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShuffleInfo","l":"getMergedShuffleDataFile(int, int, int)","u":"getMergedShuffleDataFile(int,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShuffleInfo","l":"getMergedShuffleIndexFilePath(int, int, int)","u":"getMergedShuffleIndexFilePath(int,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShuffleInfo","l":"getMergedShuffleMetaFile(int, int, int)","u":"getMergedShuffleMetaFile(int,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler.ShuffleMetrics","l":"getMetrics()"},{"p":"org.apache.spark.network.shuffle","c":"MergedShuffleFileManager","l":"getMetrics()"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"getMetrics()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"AbstractFetchShuffleBlocks","l":"getNumBlocks()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlockChunks","l":"getNumBlocks()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlocks","l":"getNumBlocks()"},{"p":"org.apache.spark.network.shuffle","c":"MergedBlockMeta","l":"getNumChunks()"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver","l":"getRddBlockData(String, String, int, int)","u":"getRddBlockData(java.lang.String,java.lang.String,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShuffleMergePartitionsInfo","l":"getReduceIds()"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver","l":"getRegisteredExecutorsSize()"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleIndexInformation","l":"getRetainedMemorySize()"},{"p":"org.apache.spark.network.shuffle","c":"RetryingBlockTransferor","l":"getRetryCount()"},{"p":"org.apache.spark.network.sasl","c":"ShuffleSecretManager","l":"getSaslUser(String)","u":"getSaslUser(java.lang.String)"},{"p":"org.apache.spark.network.sasl","c":"ShuffleSecretManager","l":"getSecretKey(String)","u":"getSecretKey(java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShuffleMergePartitionsInfo","l":"getShuffleMergePartitions()"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShuffleInfo","l":"getShuffles()"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"getStreamManager()"},{"p":"org.apache.spark.network.shuffle","c":"BlockFetchingListener","l":"getTransferType()"},{"p":"org.apache.spark.network.shuffle","c":"BlockPushingListener","l":"getTransferType()"},{"p":"org.apache.spark.network.shuffle","c":"BlockTransferListener","l":"getTransferType()"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"handleMessage(BlockTransferMessage, TransportClient, RpcResponseCallback)","u":"handleMessage(org.apache.spark.network.shuffle.protocol.BlockTransferMessage,org.apache.spark.network.client.TransportClient,org.apache.spark.network.client.RpcResponseCallback)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver.AppExecId","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"AbstractFetchShuffleBlocks","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockPushReturnCode","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlocksRemoved","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"CorruptionCause","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"ExecutorShuffleInfo","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlockChunks","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlocks","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FinalizeShuffleMerge","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"GetLocalDirsForExecutors","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"LocalDirsForExecutors","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"MergeStatuses","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"OpenBlocks","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RegisterExecutor","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveBlocks","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveShuffleMerge","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"StreamHandle","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlock","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlockStream","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppAttemptId","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppAttemptShuffleMergeId","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppPathsInfo","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleIndexRecord","l":"hashCode()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"HEARTBEAT"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"id()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"index"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockStoreClient","l":"init(String)","u":"init(java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleTransportContext","l":"initializePipeline(SocketChannel, boolean)","u":"initializePipeline(io.netty.channel.socket.SocketChannel,boolean)"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleTransportContext","l":"initializePipeline(SocketChannel, RpcHandler, boolean)","u":"initializePipeline(io.netty.channel.socket.SocketChannel,org.apache.spark.network.server.RpcHandler,boolean)"},{"p":"org.apache.spark.network.shuffle","c":"ErrorHandler.BlockPushErrorHandler","l":"IOEXCEPTIONS_EXCEEDED_THRESHOLD_PREFIX"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShuffleMergePartitionsInfo","l":"isFinalized()"},{"p":"org.apache.spark.network.shuffle","c":"AppsWithRecoveryDisabled","l":"isRecoveryEnabledForApp(String)","u":"isRecoveryEnabledForApp(java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleIndexRecord","l":"length()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"LOCAL_DIRS_FOR_EXECUTORS"},{"p":"org.apache.spark.network.shuffle.protocol","c":"ExecutorShuffleInfo","l":"localDirs"},{"p":"org.apache.spark.network.shuffle.protocol","c":"LocalDirsForExecutors","l":"LocalDirsForExecutors(Map<String, String[]>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"logger"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"mapId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlocks","l":"mapIds"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"mapIndex"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"MERGE_DIR_KEY"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"MERGE_STATUSES"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"MERGED_SHUFFLE_FILE_NAME_PREFIX"},{"p":"org.apache.spark.network.shuffle","c":"MergedBlockMeta","l":"MergedBlockMeta(int, ManagedBuffer)","u":"%3Cinit%3E(int,org.apache.spark.network.buffer.ManagedBuffer)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"MergeStatuses","l":"MergeStatuses(int, int, RoaringBitmap[], int[], long[])","u":"%3Cinit%3E(int,int,org.roaringbitmap.RoaringBitmap[],int[],long[])"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlock","l":"metadata"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlockStream","l":"metadata"},{"p":"org.apache.spark.network.shuffle.checksum","c":"Cause","l":"NETWORK_ISSUE"},{"p":"org.apache.spark.network.shuffle","c":"ErrorHandler","l":"NOOP_ERROR_HANDLER"},{"p":"org.apache.spark.network.shuffle","c":"NoOpMergedShuffleFileManager","l":"NoOpMergedShuffleFileManager(TransportConf, File)","u":"%3Cinit%3E(org.apache.spark.network.util.TransportConf,java.io.File)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"StreamHandle","l":"numChunks"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlocksRemoved","l":"numRemovedBlocks"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleIndexRecord","l":"offset()"},{"p":"org.apache.spark.network.shuffle","c":"BlockFetchingListener","l":"onBlockFetchFailure(String, Throwable)","u":"onBlockFetchFailure(java.lang.String,java.lang.Throwable)"},{"p":"org.apache.spark.network.shuffle","c":"BlockFetchingListener","l":"onBlockFetchSuccess(String, ManagedBuffer)","u":"onBlockFetchSuccess(java.lang.String,org.apache.spark.network.buffer.ManagedBuffer)"},{"p":"org.apache.spark.network.shuffle","c":"BlockPushingListener","l":"onBlockPushFailure(String, Throwable)","u":"onBlockPushFailure(java.lang.String,java.lang.Throwable)"},{"p":"org.apache.spark.network.shuffle","c":"BlockPushingListener","l":"onBlockPushSuccess(String, ManagedBuffer)","u":"onBlockPushSuccess(java.lang.String,org.apache.spark.network.buffer.ManagedBuffer)"},{"p":"org.apache.spark.network.shuffle","c":"BlockFetchingListener","l":"onBlockTransferFailure(String, Throwable)","u":"onBlockTransferFailure(java.lang.String,java.lang.Throwable)"},{"p":"org.apache.spark.network.shuffle","c":"BlockPushingListener","l":"onBlockTransferFailure(String, Throwable)","u":"onBlockTransferFailure(java.lang.String,java.lang.Throwable)"},{"p":"org.apache.spark.network.shuffle","c":"BlockTransferListener","l":"onBlockTransferFailure(String, Throwable)","u":"onBlockTransferFailure(java.lang.String,java.lang.Throwable)"},{"p":"org.apache.spark.network.shuffle","c":"BlockFetchingListener","l":"onBlockTransferSuccess(String, ManagedBuffer)","u":"onBlockTransferSuccess(java.lang.String,org.apache.spark.network.buffer.ManagedBuffer)"},{"p":"org.apache.spark.network.shuffle","c":"BlockPushingListener","l":"onBlockTransferSuccess(String, ManagedBuffer)","u":"onBlockTransferSuccess(java.lang.String,org.apache.spark.network.buffer.ManagedBuffer)"},{"p":"org.apache.spark.network.shuffle","c":"BlockTransferListener","l":"onBlockTransferSuccess(String, ManagedBuffer)","u":"onBlockTransferSuccess(java.lang.String,org.apache.spark.network.buffer.ManagedBuffer)"},{"p":"org.apache.spark.network.shuffle","c":"OneForOneBlockFetcher","l":"OneForOneBlockFetcher(TransportClient, String, String, String[], BlockFetchingListener, TransportConf)","u":"%3Cinit%3E(org.apache.spark.network.client.TransportClient,java.lang.String,java.lang.String,java.lang.String[],org.apache.spark.network.shuffle.BlockFetchingListener,org.apache.spark.network.util.TransportConf)"},{"p":"org.apache.spark.network.shuffle","c":"OneForOneBlockFetcher","l":"OneForOneBlockFetcher(TransportClient, String, String, String[], BlockFetchingListener, TransportConf, DownloadFileManager)","u":"%3Cinit%3E(org.apache.spark.network.client.TransportClient,java.lang.String,java.lang.String,java.lang.String[],org.apache.spark.network.shuffle.BlockFetchingListener,org.apache.spark.network.util.TransportConf,org.apache.spark.network.shuffle.DownloadFileManager)"},{"p":"org.apache.spark.network.shuffle","c":"OneForOneBlockPusher","l":"OneForOneBlockPusher(TransportClient, String, int, String[], BlockPushingListener, Map<String, ManagedBuffer>)","u":"%3Cinit%3E(org.apache.spark.network.client.TransportClient,java.lang.String,int,java.lang.String[],org.apache.spark.network.shuffle.BlockPushingListener,java.util.Map)"},{"p":"org.apache.spark.network.shuffle","c":"MergedBlocksMetaListener","l":"onFailure(int, int, int, Throwable)","u":"onFailure(int,int,int,java.lang.Throwable)"},{"p":"org.apache.spark.network.shuffle","c":"MergeFinalizerListener","l":"onShuffleMergeFailure(Throwable)","u":"onShuffleMergeFailure(java.lang.Throwable)"},{"p":"org.apache.spark.network.shuffle","c":"MergeFinalizerListener","l":"onShuffleMergeSuccess(MergeStatuses)","u":"onShuffleMergeSuccess(org.apache.spark.network.shuffle.protocol.MergeStatuses)"},{"p":"org.apache.spark.network.shuffle","c":"MergedBlocksMetaListener","l":"onSuccess(int, int, int, MergedBlockMeta)","u":"onSuccess(int,int,int,org.apache.spark.network.shuffle.MergedBlockMeta)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"OPEN_BLOCKS"},{"p":"org.apache.spark.network.shuffle.protocol","c":"OpenBlocks","l":"OpenBlocks(String, String, String[])","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String[])"},{"p":"org.apache.spark.network.shuffle","c":"DownloadFile","l":"openForWriting()"},{"p":"org.apache.spark.network.shuffle","c":"SimpleDownloadFile","l":"openForWriting()"},{"p":"org.apache.spark.network.shuffle","c":"DownloadFile","l":"path()"},{"p":"org.apache.spark.network.shuffle","c":"SimpleDownloadFile","l":"path()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"PUSH_BLOCK_RETURN_CODE"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"PUSH_BLOCK_STREAM"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"pushBlocks(String, int, String[], ManagedBuffer[], BlockPushingListener)","u":"pushBlocks(java.lang.String,int,java.lang.String[],org.apache.spark.network.buffer.ManagedBuffer[],org.apache.spark.network.shuffle.BlockPushingListener)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockStoreClient","l":"pushBlocks(String, int, String[], ManagedBuffer[], BlockPushingListener)","u":"pushBlocks(java.lang.String,int,java.lang.String[],org.apache.spark.network.buffer.ManagedBuffer[],org.apache.spark.network.shuffle.BlockPushingListener)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"PushBlockStream(String, int, int, int, int, int, int)","u":"%3Cinit%3E(java.lang.String,int,int,int,int,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"MergedBlockMeta","l":"readChunkBitmaps()"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"receive(TransportClient, ByteBuffer, RpcResponseCallback)","u":"receive(org.apache.spark.network.client.TransportClient,java.nio.ByteBuffer,org.apache.spark.network.client.RpcResponseCallback)"},{"p":"org.apache.spark.network.shuffle","c":"MergedShuffleFileManager","l":"receiveBlockDataAsStream(PushBlockStream)","u":"receiveBlockDataAsStream(org.apache.spark.network.shuffle.protocol.PushBlockStream)"},{"p":"org.apache.spark.network.shuffle","c":"NoOpMergedShuffleFileManager","l":"receiveBlockDataAsStream(PushBlockStream)","u":"receiveBlockDataAsStream(org.apache.spark.network.shuffle.protocol.PushBlockStream)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"receiveBlockDataAsStream(PushBlockStream)","u":"receiveBlockDataAsStream(org.apache.spark.network.shuffle.protocol.PushBlockStream)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"receiveMergeBlockMetaReq(TransportClient, MergedBlockMetaRequest, MergedBlockMetaResponseCallback)","u":"receiveMergeBlockMetaReq(org.apache.spark.network.client.TransportClient,org.apache.spark.network.protocol.MergedBlockMetaRequest,org.apache.spark.network.client.MergedBlockMetaResponseCallback)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler","l":"receiveStream(TransportClient, ByteBuffer, RpcResponseCallback)","u":"receiveStream(org.apache.spark.network.client.TransportClient,java.nio.ByteBuffer,org.apache.spark.network.client.RpcResponseCallback)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"reduceId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"reduceId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlockChunks","l":"reduceIds"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlocks","l":"reduceIds"},{"p":"org.apache.spark.network.shuffle.protocol","c":"MergeStatuses","l":"reduceIds"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"REGISTER_DRIVER"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"REGISTER_EXECUTOR"},{"p":"org.apache.spark.network.sasl","c":"ShuffleSecretManager","l":"registerApp(String, ByteBuffer)","u":"registerApp(java.lang.String,java.nio.ByteBuffer)"},{"p":"org.apache.spark.network.sasl","c":"ShuffleSecretManager","l":"registerApp(String, String)","u":"registerApp(java.lang.String,java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"MergedShuffleFileManager","l":"registerExecutor(String, ExecutorShuffleInfo)","u":"registerExecutor(java.lang.String,org.apache.spark.network.shuffle.protocol.ExecutorShuffleInfo)"},{"p":"org.apache.spark.network.shuffle","c":"NoOpMergedShuffleFileManager","l":"registerExecutor(String, ExecutorShuffleInfo)","u":"registerExecutor(java.lang.String,org.apache.spark.network.shuffle.protocol.ExecutorShuffleInfo)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"registerExecutor(String, ExecutorShuffleInfo)","u":"registerExecutor(java.lang.String,org.apache.spark.network.shuffle.protocol.ExecutorShuffleInfo)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver","l":"registerExecutor(String, String, ExecutorShuffleInfo)","u":"registerExecutor(java.lang.String,java.lang.String,org.apache.spark.network.shuffle.protocol.ExecutorShuffleInfo)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RegisterExecutor","l":"RegisterExecutor(String, String, ExecutorShuffleInfo)","u":"%3Cinit%3E(java.lang.String,java.lang.String,org.apache.spark.network.shuffle.protocol.ExecutorShuffleInfo)"},{"p":"org.apache.spark.network.shuffle","c":"DownloadFileManager","l":"registerTempFileToClean(DownloadFile)","u":"registerTempFileToClean(org.apache.spark.network.shuffle.DownloadFile)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockStoreClient","l":"registerWithShuffleServer(String, int, String, ExecutorShuffleInfo)","u":"registerWithShuffleServer(java.lang.String,int,java.lang.String,org.apache.spark.network.shuffle.protocol.ExecutorShuffleInfo)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"RemoteBlockPushResolver(TransportConf, File)","u":"%3Cinit%3E(org.apache.spark.network.util.TransportConf,java.io.File)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"REMOVE_BLOCKS"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"REMOVE_SHUFFLE_MERGE"},{"p":"org.apache.spark.network.shuffle","c":"AppsWithRecoveryDisabled","l":"removeApp(String)","u":"removeApp(java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockStoreClient","l":"removeBlocks(String, int, String, String[])","u":"removeBlocks(java.lang.String,int,java.lang.String,java.lang.String[])"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver","l":"removeBlocks(String, String, String[])","u":"removeBlocks(java.lang.String,java.lang.String,java.lang.String[])"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveBlocks","l":"RemoveBlocks(String, String, String[])","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String[])"},{"p":"org.apache.spark.network.shuffle","c":"MergedShuffleFileManager","l":"removeShuffleMerge(RemoveShuffleMerge)","u":"removeShuffleMerge(org.apache.spark.network.shuffle.protocol.RemoveShuffleMerge)"},{"p":"org.apache.spark.network.shuffle","c":"NoOpMergedShuffleFileManager","l":"removeShuffleMerge(RemoveShuffleMerge)","u":"removeShuffleMerge(org.apache.spark.network.shuffle.protocol.RemoveShuffleMerge)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"removeShuffleMerge(RemoveShuffleMerge)","u":"removeShuffleMerge(org.apache.spark.network.shuffle.protocol.RemoveShuffleMerge)"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"removeShuffleMerge(String, int, int, int)","u":"removeShuffleMerge(java.lang.String,int,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockStoreClient","l":"removeShuffleMerge(String, int, int, int)","u":"removeShuffleMerge(java.lang.String,int,int,int)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveShuffleMerge","l":"RemoveShuffleMerge(String, int, int, int)","u":"%3Cinit%3E(java.lang.String,int,int,int)"},{"p":"org.apache.spark.network.shuffle","c":"RetryingBlockTransferor","l":"RetryingBlockTransferor(TransportConf, RetryingBlockTransferor.BlockTransferStarter, String[], BlockFetchingListener)","u":"%3Cinit%3E(org.apache.spark.network.util.TransportConf,org.apache.spark.network.shuffle.RetryingBlockTransferor.BlockTransferStarter,java.lang.String[],org.apache.spark.network.shuffle.BlockFetchingListener)"},{"p":"org.apache.spark.network.shuffle","c":"RetryingBlockTransferor","l":"RetryingBlockTransferor(TransportConf, RetryingBlockTransferor.BlockTransferStarter, String[], BlockTransferListener, ErrorHandler)","u":"%3Cinit%3E(org.apache.spark.network.util.TransportConf,org.apache.spark.network.shuffle.RetryingBlockTransferor.BlockTransferStarter,java.lang.String[],org.apache.spark.network.shuffle.BlockTransferListener,org.apache.spark.network.shuffle.ErrorHandler)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockPushReturnCode","l":"returnCode"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"setAppAttemptId(String)","u":"setAppAttemptId(java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockStoreClient","l":"setAppAttemptId(String)","u":"setAppAttemptId(java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShufflePartitionInfo","l":"setDataFilePos(long)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShuffleMergePartitionsInfo","l":"setReduceIds(int[])"},{"p":"org.apache.spark.network.shuffle","c":"ErrorHandler.BlockFetchErrorHandler","l":"shouldLogError(Throwable)","u":"shouldLogError(java.lang.Throwable)"},{"p":"org.apache.spark.network.shuffle","c":"ErrorHandler.BlockPushErrorHandler","l":"shouldLogError(Throwable)","u":"shouldLogError(java.lang.Throwable)"},{"p":"org.apache.spark.network.shuffle","c":"ErrorHandler","l":"shouldLogError(Throwable)","u":"shouldLogError(java.lang.Throwable)"},{"p":"org.apache.spark.network.shuffle","c":"ErrorHandler.BlockFetchErrorHandler","l":"shouldRetryError(Throwable)","u":"shouldRetryError(java.lang.Throwable)"},{"p":"org.apache.spark.network.shuffle","c":"ErrorHandler.BlockPushErrorHandler","l":"shouldRetryError(Throwable)","u":"shouldRetryError(java.lang.Throwable)"},{"p":"org.apache.spark.network.shuffle","c":"ErrorHandler","l":"shouldRetryError(Throwable)","u":"shouldRetryError(java.lang.Throwable)"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"SHUFFLE_META_DELIMITER"},{"p":"org.apache.spark.network.shuffle","c":"OneForOneBlockPusher","l":"SHUFFLE_PUSH_BLOCK_PREFIX"},{"p":"org.apache.spark.network.shuffle","c":"Constants","l":"SHUFFLE_SERVICE_DB_BACKEND"},{"p":"org.apache.spark.network.shuffle","c":"Constants","l":"SHUFFLE_SERVICE_FETCH_RDD_ENABLED"},{"p":"org.apache.spark.network.shuffle.checksum","c":"ShuffleChecksumHelper","l":"ShuffleChecksumHelper()","u":"%3Cinit%3E()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"AbstractFetchShuffleBlocks","l":"shuffleId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"shuffleId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FinalizeShuffleMerge","l":"shuffleId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"MergeStatuses","l":"shuffleId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"shuffleId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveShuffleMerge","l":"shuffleId"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppAttemptShuffleMergeId","l":"shuffleId"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleIndexInformation","l":"ShuffleIndexInformation(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleIndexRecord","l":"ShuffleIndexRecord(long, long)","u":"%3Cinit%3E(long,long)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"ExecutorShuffleInfo","l":"shuffleManager"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlockChunks","l":"shuffleMergeId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FinalizeShuffleMerge","l":"shuffleMergeId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"MergeStatuses","l":"shuffleMergeId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"shuffleMergeId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveShuffleMerge","l":"shuffleMergeId"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppAttemptShuffleMergeId","l":"shuffleMergeId"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"shuffleMetrics()"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockStoreClient","l":"shuffleMetrics()"},{"p":"org.apache.spark.network.shuffle","c":"ExternalBlockHandler.ShuffleMetrics","l":"ShuffleMetrics()","u":"%3Cinit%3E()"},{"p":"org.apache.spark.network.sasl","c":"ShuffleSecretManager","l":"ShuffleSecretManager()","u":"%3Cinit%3E()"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleTransportContext","l":"ShuffleTransportContext(TransportConf, ExternalBlockHandler, boolean)","u":"%3Cinit%3E(org.apache.spark.network.util.TransportConf,org.apache.spark.network.shuffle.ExternalBlockHandler,boolean)"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleTransportContext","l":"ShuffleTransportContext(TransportConf, RpcHandler, boolean, boolean)","u":"%3Cinit%3E(org.apache.spark.network.util.TransportConf,org.apache.spark.network.server.RpcHandler,boolean,boolean)"},{"p":"org.apache.spark.network.shuffle","c":"SimpleDownloadFile","l":"SimpleDownloadFile(File, TransportConf)","u":"%3Cinit%3E(java.io.File,org.apache.spark.network.util.TransportConf)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"MergeStatuses","l":"sizes"},{"p":"org.apache.spark.network.shuffle","c":"ErrorHandler.BlockFetchErrorHandler","l":"STALE_SHUFFLE_BLOCK_FETCH"},{"p":"org.apache.spark.network.shuffle","c":"ErrorHandler.BlockPushErrorHandler","l":"STALE_SHUFFLE_FINALIZE_SUFFIX"},{"p":"org.apache.spark.network.shuffle","c":"OneForOneBlockFetcher","l":"start()"},{"p":"org.apache.spark.network.shuffle","c":"OneForOneBlockPusher","l":"start()"},{"p":"org.apache.spark.network.shuffle","c":"RetryingBlockTransferor","l":"start()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"STREAM_HANDLE"},{"p":"org.apache.spark.network.shuffle.protocol","c":"StreamHandle","l":"StreamHandle(long, int)","u":"%3Cinit%3E(long,int)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"StreamHandle","l":"streamId"},{"p":"org.apache.spark.network.shuffle.protocol","c":"ExecutorShuffleInfo","l":"subDirsPerLocalDir"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage","l":"toByteBuffer()"},{"p":"org.apache.spark.network.shuffle","c":"ExternalShuffleBlockResolver.AppExecId","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockPushReturnCode","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlocksRemoved","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"CorruptionCause","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"ExecutorShuffleInfo","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlockChunks","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlocks","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FinalizeShuffleMerge","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"GetLocalDirsForExecutors","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"LocalDirsForExecutors","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"MergeStatuses","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"OpenBlocks","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RegisterExecutor","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveBlocks","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveShuffleMerge","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"StreamHandle","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlock","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlockStream","l":"toString()"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppAttemptId","l":"toString()"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppAttemptShuffleMergeId","l":"toString()"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver.AppShufflePartitionInfo","l":"toString()"},{"p":"org.apache.spark.network.shuffle","c":"ShuffleIndexRecord","l":"toString()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"AbstractFetchShuffleBlocks","l":"toStringHelper()"},{"p":"org.apache.spark.network.shuffle","c":"BlockStoreClient","l":"transportConf"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockPushReturnCode","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlocksRemoved","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"CorruptionCause","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"DiagnoseCorruption","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlockChunks","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FetchShuffleBlocks","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"FinalizeShuffleMerge","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"GetLocalDirsForExecutors","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"LocalDirsForExecutors","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"MergeStatuses","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"OpenBlocks","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"PushBlockStream","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RegisterExecutor","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveBlocks","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"RemoveShuffleMerge","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"StreamHandle","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlock","l":"type()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlockStream","l":"type()"},{"p":"org.apache.spark.network.shuffle.checksum","c":"Cause","l":"UNKNOWN_ISSUE"},{"p":"org.apache.spark.network.sasl","c":"ShuffleSecretManager","l":"unregisterApp(String)","u":"unregisterApp(java.lang.String)"},{"p":"org.apache.spark.network.shuffle.checksum","c":"Cause","l":"UNSUPPORTED_CHECKSUM_ALGORITHM"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"UPLOAD_BLOCK"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"UPLOAD_BLOCK_STREAM"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlock","l":"UploadBlock(String, String, String, byte[], byte[])","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,byte[],byte[])"},{"p":"org.apache.spark.network.shuffle.protocol","c":"UploadBlockStream","l":"UploadBlockStream(String, byte[])","u":"%3Cinit%3E(java.lang.String,byte[])"},{"p":"org.apache.spark.network.shuffle","c":"RemoteBlockPushResolver","l":"validateAndGetAppShuffleInfo(String)","u":"validateAndGetAppShuffleInfo(java.lang.String)"},{"p":"org.apache.spark.network.shuffle.checksum","c":"Cause","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.apache.spark.network.shuffle.checksum","c":"Cause","l":"values()"},{"p":"org.apache.spark.network.shuffle.protocol","c":"BlockTransferMessage.Type","l":"values()"}];updateSearchResults();