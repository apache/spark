#!/usr/bin/env bash

#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

SCRIPT_DIR="$( cd "$( dirname "$0" )" && pwd )"
SPARK_ROOT_DIR="$(dirname $SCRIPT_DIR)"

"$SCRIPT_DIR/scalastyle" "$1"

# For Spark Connect, we actively enforce scalafmt and check that the produced diff is empty.
ERRORS=$(./build/mvn \
    -Pscala-2.13 \
    scalafmt:format \
    -Dscalafmt.skip=false \
    -Dscalafmt.validateOnly=true \
    -Dscalafmt.changedOnly=false \
    -pl sql/api \
    -pl sql/connect/common \
    -pl sql/connect/server \
    -pl connector/connect/client/jvm \
    2>&1 | grep -e "Unformatted files found" \
)

if test ! -z "$ERRORS"; then
  echo -e "The scalafmt check failed on sql/connect or connector/connect at following occurrences:\n\n$ERRORS\n"
  echo "Before submitting your change, please make sure to format your code using the following command:"
  echo "./build/mvn scalafmt:format -Dscalafmt.skip=false -Dscalafmt.validateOnly=false -Dscalafmt.changedOnly=false -pl sql/api -pl sql/connect/common -pl sql/connect/server -pl connector/connect/client/jvm"
  exit 1
else
  echo -e "Scalafmt checks passed."
fi
