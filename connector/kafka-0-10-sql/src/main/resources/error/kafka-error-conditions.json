{
  "MISMATCHED_TOPIC_PARTITIONS_BETWEEN_END_OFFSET_AND_PREFETCHED" : {
    "message" : [
      "Kafka data source in Trigger.AvailableNow should provide the same topic partitions in pre-fetched offset to end offset for each microbatch. The error could be transient - restart your query, and report if you still see the same issue.",
      "topic-partitions for pre-fetched offset: <tpsForPrefetched>, topic-partitions for end offset: <tpsForEndOffset>."
    ]
  },
  "MISMATCHED_TOPIC_PARTITIONS_BETWEEN_START_OFFSET_AND_END_OFFSET" : {
    "message" : [
      "The specified start offset and end offset should have the same topic-partitions.",
      "Topic-partitions for start offset: <tpsForStartOffset>, topic-partitions for end offset: <tpsForEndOffset>."
    ]
  },
  "END_OFFSET_HAS_GREATER_OFFSET_FOR_TOPIC_PARTITION_THAN_PREFETCHED" : {
    "message" : [
      "For Kafka data source with Trigger.AvailableNow, end offset should have lower or equal offset per each topic partition than pre-fetched offset. The error could be transient - restart your query, and report if you still see the same issue.",
      "pre-fetched offset: <prefetchedOffset>, end offset: <endOffset>."
    ]
  },
  "LOST_TOPIC_PARTITIONS_IN_END_OFFSET_WITH_TRIGGER_AVAILABLENOW" : {
    "message" : [
      "Some of partitions in Kafka topic(s) have been lost during running query with Trigger.AvailableNow. The error could be transient - restart your query, and report if you still see the same issue.",
      "topic-partitions for latest offset: <tpsForLatestOffset>, topic-partitions for end offset: <tpsForEndOffset>"
    ]
  },
  "END_OFFSET_HAS_GREATER_OFFSET_FOR_TOPIC_PARTITION_THAN_LATEST_WITH_TRIGGER_AVAILABLENOW" : {
    "message" : [
      "Some of partitions in Kafka topic(s) report available offset which is less than end offset during running query with Trigger.AvailableNow. The error could be transient - restart your query, and report if you still see the same issue.",
      "latest offset: <latestOffset>, end offset: <endOffset>"
    ]
  },
  "KAFKA_START_OFFSET_DOES_NOT_MATCH_ASSIGNED" : {
    "message" : [
      "Partitions specified for Kafka start offsets don't match what are assigned. Maybe topic partitions are created ",
      "or deleted while the query is running. Use -1 for latest, -2 for earliest.",
      "Specified: <specifiedPartitions> Assigned: <assignedPartitions>"
    ]
  },
  "KAFKA_TIMESTAMP_OFFSET_DOES_NOT_MATCH_ASSIGNED" : {
    "message" : [
      "Partitions specified for Kafka timestamp based <position> offsets don't match what are assigned. Maybe topic partitions are created ",
      "or deleted while the query is running, or you didn't specify all the partitions.",
      "Specified: <specifiedPartitions> Assigned: <assignedPartitions>"
    ]
  },
  "KAFKA_NULL_TOPIC_IN_DATA": {
    "message" : [
      "The Kafka message data sent to the producer contains a null topic. Use the `topic` option for setting a default topic."
    ]
  },
  "KAFKA_DATA_LOSS" : {
    "message" : [
      "Some data may have been lost because they are not available in Kafka any more;",
      "either the data was aged out by Kafka or the topic may have been deleted before all the data in the",
      "topic was processed.",
      "If you don't want your streaming query to fail on such cases, set the source option failOnDataLoss to false.",
      "Reason:"
    ],
    "subClass" : {
      "ADDED_PARTITION_DOES_NOT_START_FROM_OFFSET_ZERO" : {
        "message" : [
          "Added partition <topicPartition> starts from <startOffset> instead of 0."
        ]
      },
      "COULD_NOT_READ_OFFSET_RANGE" : {
        "message" : [
          "Could not read records in offset [<startOffset>, <endOffset>) for topic partition <topicPartition>",
          "with consumer group <groupId>."
        ]
      },
      "INITIAL_OFFSET_NOT_FOUND_FOR_PARTITIONS" : {
        "message" : [
          "Cannot find initial offsets for partitions <partitions>. They may have been deleted."
        ]
      },
      "PARTITIONS_DELETED" : {
        "message" : [
          "Partitions <partitions> have been deleted."
        ]
      },
      "PARTITIONS_DELETED_AND_GROUP_ID_CONFIG_PRESENT" : {
        "message" : [
          "Partitions <partitions> have been deleted.",
          "Kafka option 'kafka.<groupIdConfig>' has been set on this query, it is",
          "not recommended to set this option. This option is unsafe to use since multiple concurrent",
          "queries or sources using the same group id will interfere with each other as they are part",
          "of the same consumer group. Restarted queries may also suffer interference from the",
          "previous run having the same group id. The user should have only one query per group id,",
          "and/or set the option 'kafka.session.timeout.ms' to be very small so that the Kafka",
          "consumers from the previous query are marked dead by the Kafka group coordinator before the",
          "restarted query starts running."
        ]
      },
      "PARTITION_OFFSET_CHANGED" : {
        "message" : [
          "Partition <topicPartition> offset was changed from <prevOffset> to <newOffset>.",
          "This could be either 1) a user error that the start offset is set beyond available offset when starting query, or 2) the kafka topic-partition is deleted and re-created."
        ]
      },
      "START_OFFSET_RESET" : {
        "message" : [
          "Starting offset for <topicPartition> was <offset> but consumer reset to <fetchedOffset>."
        ]
      }
    },
    "sqlState" : "22000"
  },
  "RESOLVED_START_OFFSET_GREATER_THAN_END_OFFSET" : {
    "message" : [
      "The resolved start offset <startOffset> is greater than the resolved end offset <endOffset> for topic <topic> partition <partition>.",
      "Please investigate in this order:",
      "1. Check whether start offset is set beyond the end offset or the latest available offset after resolution. Possible inputs are:",
      "  (a) Start offset is set to a timestamp, and the end offset is set to an index of offset.",
      "  (b) Start offset is set to an index of offset, and the end offset is set to a timestamp.",
      "  (c) Start offset is set, and the end offset is set to latest.",
      "2. Check whether the Kafka topic-partition is deleted and re-created."
    ]
  },
  "UNRESOLVED_START_OFFSET_GREATER_THAN_END_OFFSET" : {
    "message" : [
      "The specified start <offsetType> <startOffset> is greater than the end <offsetType> <endOffset> for topic <topic> partition <partition>."
    ]
  }
}
