/* https://github.com/dagrejs/graphlib-dot/blob/v1.0.2/dist/graphlib-dot.min.js */
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){(function(global){(function(){
/*
 * Copyright (c) 2012-2013 Chris Pettitt
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
global.graphlibDot=require("./index")}).call(this)}).call(this,typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{})},{"./index":2}],2:[function(require,module,exports){var read=require("./lib/read-one");var readMany=require("./lib/read-many");var write=require("./lib/write-one");var version=require("./lib/version");module.exports={graphlib:require("@dagrejs/graphlib"),
// Parsing
read:read,readMany:readMany,
// Writing
write:write,
// Version
version:version,
// For levelup encoding
type:"dot",buffer:false}},{"./lib/read-many":5,"./lib/read-one":6,"./lib/version":7,"./lib/write-one":8,"@dagrejs/graphlib":9}],3:[function(require,module,exports){"use strict";var Graph=require("@dagrejs/graphlib").Graph;module.exports=buildGraph;function buildGraph(parseTree){var isDirected=parseTree.type!=="graph",isMultigraph=!parseTree.strict,defaultStack=[{node:{},edge:{}}],id=parseTree.id,g=new Graph({directed:isDirected,multigraph:isMultigraph,compound:true});g.setGraph(id===null?{}:{id:id});if(parseTree.stmts){parseTree.stmts.forEach(stmt=>handleStmt(g,stmt,defaultStack))}return g}function handleStmt(g,stmt,defaultStack,sg){switch(stmt.type){case"node":handleNodeStmt(g,stmt,defaultStack,sg);break;case"edge":handleEdgeStmt(g,stmt,defaultStack,sg);break;case"subgraph":handleSubgraphStmt(g,stmt,defaultStack,sg);break;case"attr":handleAttrStmt(g,stmt,defaultStack);break;case"inlineAttr":handleInlineAttrsStmt(g,stmt,defaultStack,sg);break}}function handleNodeStmt(g,stmt,defaultStack,sg){var v=stmt.id,attrs=stmt.attrs;maybeCreateNode(g,v,defaultStack,sg);Object.assign(g.node(v),attrs)}function handleEdgeStmt(g,stmt,defaultStack,sg){var attrs=stmt.attrs,prev,curr;stmt.elems.forEach(elem=>{handleStmt(g,elem,defaultStack,sg);switch(elem.type){case"node":curr=[elem.id];break;case"subgraph":curr=collectNodeIds(elem);break}if(prev){prev.forEach(v=>{curr.forEach(w=>{var name;if(g.hasEdge(v,w)&&g.isMultigraph()){name=uniqueId("edge")}if(!g.hasEdge(v,w,name)){g.setEdge(v,w,structuredClone(defaultStack[defaultStack.length-1].edge),name)}Object.assign(g.edge(v,w,name),attrs)})})}prev=curr})}function handleSubgraphStmt(g,stmt,defaultStack,sg){var id=stmt.id;if(id===undefined){id=generateSubgraphId(g)}defaultStack.push(structuredClone(defaultStack[defaultStack.length-1]));maybeCreateNode(g,id,defaultStack,sg);if(stmt.stmts){stmt.stmts.forEach(s=>{handleStmt(g,s,defaultStack,id)})}
// If there are no statements remove the subgraph
if(!g.children(id).length){g.removeNode(id)}defaultStack.pop()}function handleAttrStmt(g,stmt,defaultStack){Object.assign(defaultStack[defaultStack.length-1][stmt.attrType],stmt.attrs)}function handleInlineAttrsStmt(g,stmt,defaultStack,sg){Object.assign(sg?g.node(sg):g.graph(),stmt.attrs)}function generateSubgraphId(g){var id;do{id=uniqueId("sg")}while(g.hasNode(id));return id}function maybeCreateNode(g,v,defaultStack,sg){if(!g.hasNode(v)){g.setNode(v,structuredClone(defaultStack[defaultStack.length-1].node));g.setParent(v,sg)}}
// Collect all nodes involved in a subgraph statement
function collectNodeIds(stmt){var ids={},stack=[],curr;var push=stack.push.bind(stack);push(stmt);while(stack.length){curr=stack.pop();switch(curr.type){case"node":ids[curr.id]=true;break;case"edge":curr.elems.forEach(push);break;case"subgraph":curr.stmts.forEach(push);break}}return Object.keys(ids)}let idCounter=0;function uniqueId(prefix){var id=++idCounter;return toString(prefix)+id}},{"@dagrejs/graphlib":9}],4:[function(require,module,exports){module.exports=function(){
/*
   * Generated by PEG.js 0.8.0.
   *
   * http://pegjs.majda.cz/
   */
function peg$subclass(child,parent){function ctor(){this.constructor=child}ctor.prototype=parent.prototype;child.prototype=new ctor}function SyntaxError(message,expected,found,offset,line,column){this.message=message;this.expected=expected;this.found=found;this.offset=offset;this.line=line;this.column=column;this.name="SyntaxError"}peg$subclass(SyntaxError,Error);function parse(input){var options=arguments.length>1?arguments[1]:{},peg$FAILED={},peg$startRuleFunctions={start:peg$parsestart,graphStmt:peg$parsegraphStmt},peg$startRuleFunction=peg$parsestart,peg$c0=[],peg$c1=peg$FAILED,peg$c2=null,peg$c3="{",peg$c4={type:"literal",value:"{",description:'"{"'},peg$c5="}",peg$c6={type:"literal",value:"}",description:'"}"'},peg$c7=function(strict,type,id,stmts){return{type:type,id:id,strict:strict!==null,stmts:stmts}},peg$c8=";",peg$c9={type:"literal",value:";",description:'";"'},peg$c10=function(first,rest){var result=[first];for(var i=0;i<rest.length;++i){result.push(rest[i][1])}return result},peg$c11=function(type,attrs){return{type:"attr",attrType:type,attrs:attrs||{}}},peg$c12="=",peg$c13={type:"literal",value:"=",description:'"="'},peg$c14=function(k,v){var attrs={};attrs[k]=v;return{type:"inlineAttr",attrs:attrs}},peg$c15=function(id,attrs){return{type:"node",id:id,attrs:attrs||{}}},peg$c16=function(lhs,rhs,attrs){var elems=[lhs];for(var i=0;i<rhs.length;++i){elems.push(rhs[i])}return{type:"edge",elems:elems,attrs:attrs||{}}},peg$c17=function(id,stmts){id=id&&id[2]||[];return{type:"subgraph",id:id[0],stmts:stmts}},peg$c18=function(first,rest){var result=first;for(var i=0;i<rest.length;++i){Object.assign(result,rest[i][1])}return result},peg$c19="[",peg$c20={type:"literal",value:"[",description:'"["'},peg$c21="]",peg$c22={type:"literal",value:"]",description:'"]"'},peg$c23=function(aList){return aList},peg$c24=",",peg$c25={type:"literal",value:",",description:'","'},peg$c26=function(first,rest){var result=first;for(var i=0;i<rest.length;++i){Object.assign(result,rest[i][3])}return result},peg$c27="--",peg$c28={type:"literal",value:"--",description:'"--"'},peg$c29=function(){return directed},peg$c30=void 0,peg$c31="->",peg$c32={type:"literal",value:"->",description:'"->"'},peg$c33=function(rhs,rest){var result=[rhs];if(rest){for(var i=0;i<rest.length;++i){result.push(rest[i])}}return result},peg$c34=function(k,v){var result={};result[k]=v[3];return result},peg$c35=function(id){return{type:"node",id:id,attrs:{}}},peg$c36=function(id){return id},peg$c37=":",peg$c38={type:"literal",value:":",description:'":"'},peg$c39="ne",peg$c40={type:"literal",value:"ne",description:'"ne"'},peg$c41="se",peg$c42={type:"literal",value:"se",description:'"se"'},peg$c43="sw",peg$c44={type:"literal",value:"sw",description:'"sw"'},peg$c45="nw",peg$c46={type:"literal",value:"nw",description:'"nw"'},peg$c47="n",peg$c48={type:"literal",value:"n",description:'"n"'},peg$c49="e",peg$c50={type:"literal",value:"e",description:'"e"'},peg$c51="s",peg$c52={type:"literal",value:"s",description:'"s"'},peg$c53="w",peg$c54={type:"literal",value:"w",description:'"w"'},peg$c55="c",peg$c56={type:"literal",value:"c",description:'"c"'},peg$c57="_",peg$c58={type:"literal",value:"_",description:'"_"'},peg$c59={type:"other",description:"identifier"},peg$c60=/^[a-zA-Z\u0200-\u0377_]/,peg$c61={type:"class",value:"[a-zA-Z\\u0200-\\u0377_]",description:"[a-zA-Z\\u0200-\\u0377_]"},peg$c62=/^[a-zA-Z\u0200-\u0377_0-9]/,peg$c63={type:"class",value:"[a-zA-Z\\u0200-\\u0377_0-9]",description:"[a-zA-Z\\u0200-\\u0377_0-9]"},peg$c64=function(fst,rest){return fst+rest.join("")},peg$c65="-",peg$c66={type:"literal",value:"-",description:'"-"'},peg$c67=".",peg$c68={type:"literal",value:".",description:'"."'},peg$c69=/^[0-9]/,peg$c70={type:"class",value:"[0-9]",description:"[0-9]"},peg$c71=function(sign,dot,after){return(sign||"")+dot+after.join("")},peg$c72=function(sign,before,after){return(sign||"")+before.join("")+(after?after[0]:"")+(after?after[1].join(""):"")},peg$c73='"',peg$c74={type:"literal",value:'"',description:'"\\""'},peg$c75='\\"',peg$c76={type:"literal",value:'\\"',description:'"\\\\\\""'},peg$c77=function(){return'"'},peg$c78="\\",peg$c79={type:"literal",value:"\\",description:'"\\\\"'},peg$c80=/^[^"]/,peg$c81={type:"class",value:'[^"]',description:'[^"]'},peg$c82=function(ch){return"\\"+ch},peg$c83=function(id){return id.join("")},peg$c84="node",peg$c85={type:"literal",value:"node",description:'"node"'},peg$c86=function(k){return k.toLowerCase()},peg$c87="edge",peg$c88={type:"literal",value:"edge",description:'"edge"'},peg$c89="graph",peg$c90={type:"literal",value:"graph",description:'"graph"'},peg$c91="digraph",peg$c92={type:"literal",value:"digraph",description:'"digraph"'},peg$c93="subgraph",peg$c94={type:"literal",value:"subgraph",description:'"subgraph"'},peg$c95="strict",peg$c96={type:"literal",value:"strict",description:'"strict"'},peg$c97=function(graph){directed=graph==="digraph";return graph},peg$c98={type:"other",description:"whitespace"},peg$c99=/^[ \t\r\n]/,peg$c100={type:"class",value:"[ \\t\\r\\n]",description:"[ \\t\\r\\n]"},peg$c101={type:"other",description:"comment"},peg$c102="//",peg$c103={type:"literal",value:"//",description:'"//"'},peg$c104=/^[^\n]/,peg$c105={type:"class",value:"[^\\n]",description:"[^\\n]"},peg$c106="/*",peg$c107={type:"literal",value:"/*",description:'"/*"'},peg$c108="*/",peg$c109={type:"literal",value:"*/",description:'"*/"'},peg$c110={type:"any",description:"any character"},peg$currPos=0,peg$reportedPos=0,peg$cachedPos=0,peg$cachedPosDetails={line:1,column:1,seenCR:false},peg$maxFailPos=0,peg$maxFailExpected=[],peg$silentFails=0,peg$result;if("startRule"in options){if(!(options.startRule in peg$startRuleFunctions)){throw new Error("Can't start parsing from rule \""+options.startRule+'".')}peg$startRuleFunction=peg$startRuleFunctions[options.startRule]}function text(){return input.substring(peg$reportedPos,peg$currPos)}function offset(){return peg$reportedPos}function line(){return peg$computePosDetails(peg$reportedPos).line}function column(){return peg$computePosDetails(peg$reportedPos).column}function expected(description){throw peg$buildException(null,[{type:"other",description:description}],peg$reportedPos)}function error(message){throw peg$buildException(message,null,peg$reportedPos)}function peg$computePosDetails(pos){function advance(details,startPos,endPos){var p,ch;for(p=startPos;p<endPos;p++){ch=input.charAt(p);if(ch==="\n"){if(!details.seenCR){details.line++}details.column=1;details.seenCR=false}else if(ch==="\r"||ch==="\u2028"||ch==="\u2029"){details.line++;details.column=1;details.seenCR=true}else{details.column++;details.seenCR=false}}}if(peg$cachedPos!==pos){if(peg$cachedPos>pos){peg$cachedPos=0;peg$cachedPosDetails={line:1,column:1,seenCR:false}}advance(peg$cachedPosDetails,peg$cachedPos,pos);peg$cachedPos=pos}return peg$cachedPosDetails}function peg$fail(expected){if(peg$currPos<peg$maxFailPos){return}if(peg$currPos>peg$maxFailPos){peg$maxFailPos=peg$currPos;peg$maxFailExpected=[]}peg$maxFailExpected.push(expected)}function peg$buildException(message,expected,pos){function cleanupExpected(expected){var i=1;expected.sort(function(a,b){if(a.description<b.description){return-1}else if(a.description>b.description){return 1}else{return 0}});while(i<expected.length){if(expected[i-1]===expected[i]){expected.splice(i,1)}else{i++}}}function buildMessage(expected,found){function stringEscape(s){function hex(ch){return ch.charCodeAt(0).toString(16).toUpperCase()}return s.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\x08/g,"\\b").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\f/g,"\\f").replace(/\r/g,"\\r").replace(/[\x00-\x07\x0B\x0E\x0F]/g,function(ch){return"\\x0"+hex(ch)}).replace(/[\x10-\x1F\x80-\xFF]/g,function(ch){return"\\x"+hex(ch)}).replace(/[\u0180-\u0FFF]/g,function(ch){return"\\u0"+hex(ch)}).replace(/[\u1080-\uFFFF]/g,function(ch){return"\\u"+hex(ch)})}var expectedDescs=new Array(expected.length),expectedDesc,foundDesc,i;for(i=0;i<expected.length;i++){expectedDescs[i]=expected[i].description}expectedDesc=expected.length>1?expectedDescs.slice(0,-1).join(", ")+" or "+expectedDescs[expected.length-1]:expectedDescs[0];foundDesc=found?'"'+stringEscape(found)+'"':"end of input";return"Expected "+expectedDesc+" but "+foundDesc+" found."}var posDetails=peg$computePosDetails(pos),found=pos<input.length?input.charAt(pos):null;if(expected!==null){cleanupExpected(expected)}return new SyntaxError(message!==null?message:buildMessage(expected,found),expected,found,pos,posDetails.line,posDetails.column)}function peg$parsestart(){var s0,s1;s0=[];s1=peg$parsegraphStmt();if(s1!==peg$FAILED){while(s1!==peg$FAILED){s0.push(s1);s1=peg$parsegraphStmt()}}else{s0=peg$c1}return s0}function peg$parsegraphStmt(){var s0,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13;s0=peg$currPos;s1=[];s2=peg$parse_();while(s2!==peg$FAILED){s1.push(s2);s2=peg$parse_()}if(s1!==peg$FAILED){s2=peg$currPos;s3=peg$parsestrict();if(s3!==peg$FAILED){s4=peg$parse_();if(s4!==peg$FAILED){s3=[s3,s4];s2=s3}else{peg$currPos=s2;s2=peg$c1}}else{peg$currPos=s2;s2=peg$c1}if(s2===peg$FAILED){s2=peg$c2}if(s2!==peg$FAILED){s3=peg$parsegraphType();if(s3!==peg$FAILED){s4=[];s5=peg$parse_();while(s5!==peg$FAILED){s4.push(s5);s5=peg$parse_()}if(s4!==peg$FAILED){s5=peg$parseid();if(s5===peg$FAILED){s5=peg$c2}if(s5!==peg$FAILED){s6=[];s7=peg$parse_();while(s7!==peg$FAILED){s6.push(s7);s7=peg$parse_()}if(s6!==peg$FAILED){if(input.charCodeAt(peg$currPos)===123){s7=peg$c3;peg$currPos++}else{s7=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c4)}}if(s7!==peg$FAILED){s8=[];s9=peg$parse_();while(s9!==peg$FAILED){s8.push(s9);s9=peg$parse_()}if(s8!==peg$FAILED){s9=peg$parsestmtList();if(s9===peg$FAILED){s9=peg$c2}if(s9!==peg$FAILED){s10=[];s11=peg$parse_();while(s11!==peg$FAILED){s10.push(s11);s11=peg$parse_()}if(s10!==peg$FAILED){if(input.charCodeAt(peg$currPos)===125){s11=peg$c5;peg$currPos++}else{s11=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c6)}}if(s11!==peg$FAILED){s12=[];s13=peg$parse_();while(s13!==peg$FAILED){s12.push(s13);s13=peg$parse_()}if(s12!==peg$FAILED){peg$reportedPos=s0;s1=peg$c7(s2,s3,s5,s9);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}return s0}function peg$parsestmtList(){var s0,s1,s2,s3,s4,s5,s6,s7,s8,s9;s0=peg$currPos;s1=peg$parsestmt();if(s1!==peg$FAILED){s2=[];s3=peg$parse_();while(s3!==peg$FAILED){s2.push(s3);s3=peg$parse_()}if(s2!==peg$FAILED){if(input.charCodeAt(peg$currPos)===59){s3=peg$c8;peg$currPos++}else{s3=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c9)}}if(s3===peg$FAILED){s3=peg$c2}if(s3!==peg$FAILED){s4=[];s5=peg$currPos;s6=[];s7=peg$parse_();while(s7!==peg$FAILED){s6.push(s7);s7=peg$parse_()}if(s6!==peg$FAILED){s7=peg$parsestmt();if(s7!==peg$FAILED){s8=[];s9=peg$parse_();while(s9!==peg$FAILED){s8.push(s9);s9=peg$parse_()}if(s8!==peg$FAILED){if(input.charCodeAt(peg$currPos)===59){s9=peg$c8;peg$currPos++}else{s9=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c9)}}if(s9===peg$FAILED){s9=peg$c2}if(s9!==peg$FAILED){s6=[s6,s7,s8,s9];s5=s6}else{peg$currPos=s5;s5=peg$c1}}else{peg$currPos=s5;s5=peg$c1}}else{peg$currPos=s5;s5=peg$c1}}else{peg$currPos=s5;s5=peg$c1}while(s5!==peg$FAILED){s4.push(s5);s5=peg$currPos;s6=[];s7=peg$parse_();while(s7!==peg$FAILED){s6.push(s7);s7=peg$parse_()}if(s6!==peg$FAILED){s7=peg$parsestmt();if(s7!==peg$FAILED){s8=[];s9=peg$parse_();while(s9!==peg$FAILED){s8.push(s9);s9=peg$parse_()}if(s8!==peg$FAILED){if(input.charCodeAt(peg$currPos)===59){s9=peg$c8;peg$currPos++}else{s9=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c9)}}if(s9===peg$FAILED){s9=peg$c2}if(s9!==peg$FAILED){s6=[s6,s7,s8,s9];s5=s6}else{peg$currPos=s5;s5=peg$c1}}else{peg$currPos=s5;s5=peg$c1}}else{peg$currPos=s5;s5=peg$c1}}else{peg$currPos=s5;s5=peg$c1}}if(s4!==peg$FAILED){peg$reportedPos=s0;s1=peg$c10(s1,s4);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}return s0}function peg$parsestmt(){var s0;s0=peg$parseattrStmt();if(s0===peg$FAILED){s0=peg$parseedgeStmt();if(s0===peg$FAILED){s0=peg$parsesubgraphStmt();if(s0===peg$FAILED){s0=peg$parseinlineAttrStmt();if(s0===peg$FAILED){s0=peg$parsenodeStmt()}}}}return s0}function peg$parseattrStmt(){var s0,s1,s2,s3;s0=peg$currPos;s1=peg$parsegraph();if(s1===peg$FAILED){s1=peg$parsenode();if(s1===peg$FAILED){s1=peg$parseedge()}}if(s1!==peg$FAILED){s2=[];s3=peg$parse_();while(s3!==peg$FAILED){s2.push(s3);s3=peg$parse_()}if(s2!==peg$FAILED){s3=peg$parseattrList();if(s3!==peg$FAILED){peg$reportedPos=s0;s1=peg$c11(s1,s3);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}return s0}function peg$parseinlineAttrStmt(){var s0,s1,s2,s3,s4,s5;s0=peg$currPos;s1=peg$parseid();if(s1!==peg$FAILED){s2=[];s3=peg$parse_();while(s3!==peg$FAILED){s2.push(s3);s3=peg$parse_()}if(s2!==peg$FAILED){if(input.charCodeAt(peg$currPos)===61){s3=peg$c12;peg$currPos++}else{s3=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c13)}}if(s3!==peg$FAILED){s4=[];s5=peg$parse_();while(s5!==peg$FAILED){s4.push(s5);s5=peg$parse_()}if(s4!==peg$FAILED){s5=peg$parseid();if(s5!==peg$FAILED){peg$reportedPos=s0;s1=peg$c14(s1,s5);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}return s0}function peg$parsenodeStmt(){var s0,s1,s2,s3;s0=peg$currPos;s1=peg$parsenodeId();if(s1!==peg$FAILED){s2=[];s3=peg$parse_();while(s3!==peg$FAILED){s2.push(s3);s3=peg$parse_()}if(s2!==peg$FAILED){s3=peg$parseattrList();if(s3===peg$FAILED){s3=peg$c2}if(s3!==peg$FAILED){peg$reportedPos=s0;s1=peg$c15(s1,s3);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}return s0}function peg$parseedgeStmt(){var s0,s1,s2,s3,s4,s5;s0=peg$currPos;s1=peg$parsenodeIdOrSubgraph();if(s1!==peg$FAILED){s2=[];s3=peg$parse_();while(s3!==peg$FAILED){s2.push(s3);s3=peg$parse_()}if(s2!==peg$FAILED){s3=peg$parseedgeRHS();if(s3!==peg$FAILED){s4=[];s5=peg$parse_();while(s5!==peg$FAILED){s4.push(s5);s5=peg$parse_()}if(s4!==peg$FAILED){s5=peg$parseattrList();if(s5===peg$FAILED){s5=peg$c2}if(s5!==peg$FAILED){peg$reportedPos=s0;s1=peg$c16(s1,s3,s5);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}return s0}function peg$parsesubgraphStmt(){var s0,s1,s2,s3,s4,s5,s6,s7;s0=peg$currPos;s1=peg$currPos;s2=peg$parsesubgraph();if(s2!==peg$FAILED){s3=[];s4=peg$parse_();while(s4!==peg$FAILED){s3.push(s4);s4=peg$parse_()}if(s3!==peg$FAILED){s4=peg$currPos;s5=peg$parseid();if(s5!==peg$FAILED){s6=[];s7=peg$parse_();while(s7!==peg$FAILED){s6.push(s7);s7=peg$parse_()}if(s6!==peg$FAILED){s5=[s5,s6];s4=s5}else{peg$currPos=s4;s4=peg$c1}}else{peg$currPos=s4;s4=peg$c1}if(s4===peg$FAILED){s4=peg$c2}if(s4!==peg$FAILED){s2=[s2,s3,s4];s1=s2}else{peg$currPos=s1;s1=peg$c1}}else{peg$currPos=s1;s1=peg$c1}}else{peg$currPos=s1;s1=peg$c1}if(s1===peg$FAILED){s1=peg$c2}if(s1!==peg$FAILED){if(input.charCodeAt(peg$currPos)===123){s2=peg$c3;peg$currPos++}else{s2=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c4)}}if(s2!==peg$FAILED){s3=[];s4=peg$parse_();while(s4!==peg$FAILED){s3.push(s4);s4=peg$parse_()}if(s3!==peg$FAILED){s4=peg$parsestmtList();if(s4===peg$FAILED){s4=peg$c2}if(s4!==peg$FAILED){s5=[];s6=peg$parse_();while(s6!==peg$FAILED){s5.push(s6);s6=peg$parse_()}if(s5!==peg$FAILED){if(input.charCodeAt(peg$currPos)===125){s6=peg$c5;peg$currPos++}else{s6=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c6)}}if(s6!==peg$FAILED){peg$reportedPos=s0;s1=peg$c17(s1,s4);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}return s0}function peg$parseattrList(){var s0,s1,s2,s3,s4,s5;s0=peg$currPos;s1=peg$parseattrListBlock();if(s1!==peg$FAILED){s2=[];s3=peg$currPos;s4=[];s5=peg$parse_();while(s5!==peg$FAILED){s4.push(s5);s5=peg$parse_()}if(s4!==peg$FAILED){s5=peg$parseattrListBlock();if(s5!==peg$FAILED){s4=[s4,s5];s3=s4}else{peg$currPos=s3;s3=peg$c1}}else{peg$currPos=s3;s3=peg$c1}while(s3!==peg$FAILED){s2.push(s3);s3=peg$currPos;s4=[];s5=peg$parse_();while(s5!==peg$FAILED){s4.push(s5);s5=peg$parse_()}if(s4!==peg$FAILED){s5=peg$parseattrListBlock();if(s5!==peg$FAILED){s4=[s4,s5];s3=s4}else{peg$currPos=s3;s3=peg$c1}}else{peg$currPos=s3;s3=peg$c1}}if(s2!==peg$FAILED){peg$reportedPos=s0;s1=peg$c18(s1,s2);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}return s0}function peg$parseattrListBlock(){var s0,s1,s2,s3,s4,s5;s0=peg$currPos;if(input.charCodeAt(peg$currPos)===91){s1=peg$c19;peg$currPos++}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c20)}}if(s1!==peg$FAILED){s2=[];s3=peg$parse_();while(s3!==peg$FAILED){s2.push(s3);s3=peg$parse_()}if(s2!==peg$FAILED){s3=peg$parseaList();if(s3===peg$FAILED){s3=peg$c2}if(s3!==peg$FAILED){s4=[];s5=peg$parse_();while(s5!==peg$FAILED){s4.push(s5);s5=peg$parse_()}if(s4!==peg$FAILED){if(input.charCodeAt(peg$currPos)===93){s5=peg$c21;peg$currPos++}else{s5=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c22)}}if(s5!==peg$FAILED){peg$reportedPos=s0;s1=peg$c23(s3);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}return s0}function peg$parseaList(){var s0,s1,s2,s3,s4,s5,s6,s7;s0=peg$currPos;s1=peg$parseidDef();if(s1!==peg$FAILED){s2=[];s3=peg$currPos;s4=[];s5=peg$parse_();while(s5!==peg$FAILED){s4.push(s5);s5=peg$parse_()}if(s4!==peg$FAILED){if(input.charCodeAt(peg$currPos)===44){s5=peg$c24;peg$currPos++}else{s5=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c25)}}if(s5===peg$FAILED){s5=peg$c2}if(s5!==peg$FAILED){s6=[];s7=peg$parse_();while(s7!==peg$FAILED){s6.push(s7);s7=peg$parse_()}if(s6!==peg$FAILED){s7=peg$parseidDef();if(s7!==peg$FAILED){s4=[s4,s5,s6,s7];s3=s4}else{peg$currPos=s3;s3=peg$c1}}else{peg$currPos=s3;s3=peg$c1}}else{peg$currPos=s3;s3=peg$c1}}else{peg$currPos=s3;s3=peg$c1}while(s3!==peg$FAILED){s2.push(s3);s3=peg$currPos;s4=[];s5=peg$parse_();while(s5!==peg$FAILED){s4.push(s5);s5=peg$parse_()}if(s4!==peg$FAILED){if(input.charCodeAt(peg$currPos)===44){s5=peg$c24;peg$currPos++}else{s5=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c25)}}if(s5===peg$FAILED){s5=peg$c2}if(s5!==peg$FAILED){s6=[];s7=peg$parse_();while(s7!==peg$FAILED){s6.push(s7);s7=peg$parse_()}if(s6!==peg$FAILED){s7=peg$parseidDef();if(s7!==peg$FAILED){s4=[s4,s5,s6,s7];s3=s4}else{peg$currPos=s3;s3=peg$c1}}else{peg$currPos=s3;s3=peg$c1}}else{peg$currPos=s3;s3=peg$c1}}else{peg$currPos=s3;s3=peg$c1}}if(s2!==peg$FAILED){peg$reportedPos=s0;s1=peg$c26(s1,s2);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}return s0}function peg$parseedgeRHS(){var s0,s1,s2,s3,s4,s5;s0=peg$currPos;s1=peg$currPos;if(input.substr(peg$currPos,2)===peg$c27){s2=peg$c27;peg$currPos+=2}else{s2=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c28)}}if(s2!==peg$FAILED){peg$reportedPos=peg$currPos;s3=peg$c29();if(s3){s3=peg$c1}else{s3=peg$c30}if(s3!==peg$FAILED){s2=[s2,s3];s1=s2}else{peg$currPos=s1;s1=peg$c1}}else{peg$currPos=s1;s1=peg$c1}if(s1===peg$FAILED){s1=peg$currPos;if(input.substr(peg$currPos,2)===peg$c31){s2=peg$c31;peg$currPos+=2}else{s2=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c32)}}if(s2!==peg$FAILED){peg$reportedPos=peg$currPos;s3=peg$c29();if(s3){s3=peg$c30}else{s3=peg$c1}if(s3!==peg$FAILED){s2=[s2,s3];s1=s2}else{peg$currPos=s1;s1=peg$c1}}else{peg$currPos=s1;s1=peg$c1}}if(s1!==peg$FAILED){s2=[];s3=peg$parse_();while(s3!==peg$FAILED){s2.push(s3);s3=peg$parse_()}if(s2!==peg$FAILED){s3=peg$parsenodeIdOrSubgraph();if(s3!==peg$FAILED){s4=[];s5=peg$parse_();while(s5!==peg$FAILED){s4.push(s5);s5=peg$parse_()}if(s4!==peg$FAILED){s5=peg$parseedgeRHS();if(s5===peg$FAILED){s5=peg$c2}if(s5!==peg$FAILED){peg$reportedPos=s0;s1=peg$c33(s3,s5);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}return s0}function peg$parseidDef(){var s0,s1,s2,s3,s4,s5,s6;s0=peg$currPos;s1=peg$parseid();if(s1!==peg$FAILED){s2=peg$currPos;s3=[];s4=peg$parse_();while(s4!==peg$FAILED){s3.push(s4);s4=peg$parse_()}if(s3!==peg$FAILED){if(input.charCodeAt(peg$currPos)===61){s4=peg$c12;peg$currPos++}else{s4=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c13)}}if(s4!==peg$FAILED){s5=[];s6=peg$parse_();while(s6!==peg$FAILED){s5.push(s6);s6=peg$parse_()}if(s5!==peg$FAILED){s6=peg$parseid();if(s6!==peg$FAILED){s3=[s3,s4,s5,s6];s2=s3}else{peg$currPos=s2;s2=peg$c1}}else{peg$currPos=s2;s2=peg$c1}}else{peg$currPos=s2;s2=peg$c1}}else{peg$currPos=s2;s2=peg$c1}if(s2===peg$FAILED){s2=peg$c2}if(s2!==peg$FAILED){peg$reportedPos=s0;s1=peg$c34(s1,s2);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}return s0}function peg$parsenodeIdOrSubgraph(){var s0,s1;s0=peg$parsesubgraphStmt();if(s0===peg$FAILED){s0=peg$currPos;s1=peg$parsenodeId();if(s1!==peg$FAILED){peg$reportedPos=s0;s1=peg$c35(s1)}s0=s1}return s0}function peg$parsenodeId(){var s0,s1,s2,s3;s0=peg$currPos;s1=peg$parseid();if(s1!==peg$FAILED){s2=[];s3=peg$parse_();while(s3!==peg$FAILED){s2.push(s3);s3=peg$parse_()}if(s2!==peg$FAILED){s3=peg$parseport();if(s3===peg$FAILED){s3=peg$c2}if(s3!==peg$FAILED){peg$reportedPos=s0;s1=peg$c36(s1);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}return s0}function peg$parseport(){var s0,s1,s2,s3,s4,s5,s6,s7,s8;s0=peg$currPos;if(input.charCodeAt(peg$currPos)===58){s1=peg$c37;peg$currPos++}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c38)}}if(s1!==peg$FAILED){s2=[];s3=peg$parse_();while(s3!==peg$FAILED){s2.push(s3);s3=peg$parse_()}if(s2!==peg$FAILED){s3=peg$parseid();if(s3!==peg$FAILED){s4=[];s5=peg$parse_();while(s5!==peg$FAILED){s4.push(s5);s5=peg$parse_()}if(s4!==peg$FAILED){s5=peg$currPos;if(input.charCodeAt(peg$currPos)===58){s6=peg$c37;peg$currPos++}else{s6=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c38)}}if(s6!==peg$FAILED){s7=[];s8=peg$parse_();while(s8!==peg$FAILED){s7.push(s8);s8=peg$parse_()}if(s7!==peg$FAILED){s8=peg$parsecompassPt();if(s8!==peg$FAILED){s6=[s6,s7,s8];s5=s6}else{peg$currPos=s5;s5=peg$c1}}else{peg$currPos=s5;s5=peg$c1}}else{peg$currPos=s5;s5=peg$c1}if(s5===peg$FAILED){s5=peg$c2}if(s5!==peg$FAILED){s1=[s1,s2,s3,s4,s5];s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}return s0}function peg$parsecompassPt(){var s0;if(input.substr(peg$currPos,2)===peg$c39){s0=peg$c39;peg$currPos+=2}else{s0=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c40)}}if(s0===peg$FAILED){if(input.substr(peg$currPos,2)===peg$c41){s0=peg$c41;peg$currPos+=2}else{s0=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c42)}}if(s0===peg$FAILED){if(input.substr(peg$currPos,2)===peg$c43){s0=peg$c43;peg$currPos+=2}else{s0=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c44)}}if(s0===peg$FAILED){if(input.substr(peg$currPos,2)===peg$c45){s0=peg$c45;peg$currPos+=2}else{s0=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c46)}}if(s0===peg$FAILED){if(input.charCodeAt(peg$currPos)===110){s0=peg$c47;peg$currPos++}else{s0=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c48)}}if(s0===peg$FAILED){if(input.charCodeAt(peg$currPos)===101){s0=peg$c49;peg$currPos++}else{s0=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c50)}}if(s0===peg$FAILED){if(input.charCodeAt(peg$currPos)===115){s0=peg$c51;peg$currPos++}else{s0=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c52)}}if(s0===peg$FAILED){if(input.charCodeAt(peg$currPos)===119){s0=peg$c53;peg$currPos++}else{s0=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c54)}}if(s0===peg$FAILED){if(input.charCodeAt(peg$currPos)===99){s0=peg$c55;peg$currPos++}else{s0=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c56)}}if(s0===peg$FAILED){if(input.charCodeAt(peg$currPos)===95){s0=peg$c57;peg$currPos++}else{s0=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c58)}}}}}}}}}}}return s0}function peg$parseid(){var s0,s1,s2,s3,s4,s5,s6;peg$silentFails++;s0=peg$currPos;if(peg$c60.test(input.charAt(peg$currPos))){s1=input.charAt(peg$currPos);peg$currPos++}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c61)}}if(s1!==peg$FAILED){s2=[];if(peg$c62.test(input.charAt(peg$currPos))){s3=input.charAt(peg$currPos);peg$currPos++}else{s3=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c63)}}while(s3!==peg$FAILED){s2.push(s3);if(peg$c62.test(input.charAt(peg$currPos))){s3=input.charAt(peg$currPos);peg$currPos++}else{s3=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c63)}}}if(s2!==peg$FAILED){peg$reportedPos=s0;s1=peg$c64(s1,s2);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}if(s0===peg$FAILED){s0=peg$currPos;if(input.charCodeAt(peg$currPos)===45){s1=peg$c65;peg$currPos++}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c66)}}if(s1===peg$FAILED){s1=peg$c2}if(s1!==peg$FAILED){if(input.charCodeAt(peg$currPos)===46){s2=peg$c67;peg$currPos++}else{s2=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c68)}}if(s2!==peg$FAILED){s3=[];if(peg$c69.test(input.charAt(peg$currPos))){s4=input.charAt(peg$currPos);peg$currPos++}else{s4=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c70)}}if(s4!==peg$FAILED){while(s4!==peg$FAILED){s3.push(s4);if(peg$c69.test(input.charAt(peg$currPos))){s4=input.charAt(peg$currPos);peg$currPos++}else{s4=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c70)}}}}else{s3=peg$c1}if(s3!==peg$FAILED){peg$reportedPos=s0;s1=peg$c71(s1,s2,s3);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}if(s0===peg$FAILED){s0=peg$currPos;if(input.charCodeAt(peg$currPos)===45){s1=peg$c65;peg$currPos++}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c66)}}if(s1===peg$FAILED){s1=peg$c2}if(s1!==peg$FAILED){s2=[];if(peg$c69.test(input.charAt(peg$currPos))){s3=input.charAt(peg$currPos);peg$currPos++}else{s3=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c70)}}if(s3!==peg$FAILED){while(s3!==peg$FAILED){s2.push(s3);if(peg$c69.test(input.charAt(peg$currPos))){s3=input.charAt(peg$currPos);peg$currPos++}else{s3=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c70)}}}}else{s2=peg$c1}if(s2!==peg$FAILED){s3=peg$currPos;if(input.charCodeAt(peg$currPos)===46){s4=peg$c67;peg$currPos++}else{s4=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c68)}}if(s4!==peg$FAILED){s5=[];if(peg$c69.test(input.charAt(peg$currPos))){s6=input.charAt(peg$currPos);peg$currPos++}else{s6=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c70)}}while(s6!==peg$FAILED){s5.push(s6);if(peg$c69.test(input.charAt(peg$currPos))){s6=input.charAt(peg$currPos);peg$currPos++}else{s6=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c70)}}}if(s5!==peg$FAILED){s4=[s4,s5];s3=s4}else{peg$currPos=s3;s3=peg$c1}}else{peg$currPos=s3;s3=peg$c1}if(s3===peg$FAILED){s3=peg$c2}if(s3!==peg$FAILED){peg$reportedPos=s0;s1=peg$c72(s1,s2,s3);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}if(s0===peg$FAILED){s0=peg$currPos;if(input.charCodeAt(peg$currPos)===34){s1=peg$c73;peg$currPos++}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c74)}}if(s1!==peg$FAILED){s2=[];s3=peg$currPos;if(input.substr(peg$currPos,2)===peg$c75){s4=peg$c75;peg$currPos+=2}else{s4=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c76)}}if(s4!==peg$FAILED){peg$reportedPos=s3;s4=peg$c77()}s3=s4;if(s3===peg$FAILED){s3=peg$currPos;if(input.charCodeAt(peg$currPos)===92){s4=peg$c78;peg$currPos++}else{s4=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c79)}}if(s4!==peg$FAILED){if(peg$c80.test(input.charAt(peg$currPos))){s5=input.charAt(peg$currPos);peg$currPos++}else{s5=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c81)}}if(s5!==peg$FAILED){peg$reportedPos=s3;s4=peg$c82(s5);s3=s4}else{peg$currPos=s3;s3=peg$c1}}else{peg$currPos=s3;s3=peg$c1}if(s3===peg$FAILED){if(peg$c80.test(input.charAt(peg$currPos))){s3=input.charAt(peg$currPos);peg$currPos++}else{s3=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c81)}}}}while(s3!==peg$FAILED){s2.push(s3);s3=peg$currPos;if(input.substr(peg$currPos,2)===peg$c75){s4=peg$c75;peg$currPos+=2}else{s4=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c76)}}if(s4!==peg$FAILED){peg$reportedPos=s3;s4=peg$c77()}s3=s4;if(s3===peg$FAILED){s3=peg$currPos;if(input.charCodeAt(peg$currPos)===92){s4=peg$c78;peg$currPos++}else{s4=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c79)}}if(s4!==peg$FAILED){if(peg$c80.test(input.charAt(peg$currPos))){s5=input.charAt(peg$currPos);peg$currPos++}else{s5=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c81)}}if(s5!==peg$FAILED){peg$reportedPos=s3;s4=peg$c82(s5);s3=s4}else{peg$currPos=s3;s3=peg$c1}}else{peg$currPos=s3;s3=peg$c1}if(s3===peg$FAILED){if(peg$c80.test(input.charAt(peg$currPos))){s3=input.charAt(peg$currPos);peg$currPos++}else{s3=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c81)}}}}}if(s2!==peg$FAILED){if(input.charCodeAt(peg$currPos)===34){s3=peg$c73;peg$currPos++}else{s3=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c74)}}if(s3!==peg$FAILED){peg$reportedPos=s0;s1=peg$c83(s2);s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}}}peg$silentFails--;if(s0===peg$FAILED){s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c59)}}return s0}function peg$parsenode(){var s0,s1;s0=peg$currPos;if(input.substr(peg$currPos,4).toLowerCase()===peg$c84){s1=input.substr(peg$currPos,4);peg$currPos+=4}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c85)}}if(s1!==peg$FAILED){peg$reportedPos=s0;s1=peg$c86(s1)}s0=s1;return s0}function peg$parseedge(){var s0,s1;s0=peg$currPos;if(input.substr(peg$currPos,4).toLowerCase()===peg$c87){s1=input.substr(peg$currPos,4);peg$currPos+=4}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c88)}}if(s1!==peg$FAILED){peg$reportedPos=s0;s1=peg$c86(s1)}s0=s1;return s0}function peg$parsegraph(){var s0,s1;s0=peg$currPos;if(input.substr(peg$currPos,5).toLowerCase()===peg$c89){s1=input.substr(peg$currPos,5);peg$currPos+=5}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c90)}}if(s1!==peg$FAILED){peg$reportedPos=s0;s1=peg$c86(s1)}s0=s1;return s0}function peg$parsedigraph(){var s0,s1;s0=peg$currPos;if(input.substr(peg$currPos,7).toLowerCase()===peg$c91){s1=input.substr(peg$currPos,7);peg$currPos+=7}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c92)}}if(s1!==peg$FAILED){peg$reportedPos=s0;s1=peg$c86(s1)}s0=s1;return s0}function peg$parsesubgraph(){var s0,s1;s0=peg$currPos;if(input.substr(peg$currPos,8).toLowerCase()===peg$c93){s1=input.substr(peg$currPos,8);peg$currPos+=8}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c94)}}if(s1!==peg$FAILED){peg$reportedPos=s0;s1=peg$c86(s1)}s0=s1;return s0}function peg$parsestrict(){var s0,s1;s0=peg$currPos;if(input.substr(peg$currPos,6).toLowerCase()===peg$c95){s1=input.substr(peg$currPos,6);peg$currPos+=6}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c96)}}if(s1!==peg$FAILED){peg$reportedPos=s0;s1=peg$c86(s1)}s0=s1;return s0}function peg$parsegraphType(){var s0,s1;s0=peg$parsegraph();if(s0===peg$FAILED){s0=peg$currPos;s1=peg$parsedigraph();if(s1!==peg$FAILED){peg$reportedPos=s0;s1=peg$c97(s1)}s0=s1}return s0}function peg$parsewhitespace(){var s0,s1;peg$silentFails++;s0=[];if(peg$c99.test(input.charAt(peg$currPos))){s1=input.charAt(peg$currPos);peg$currPos++}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c100)}}if(s1!==peg$FAILED){while(s1!==peg$FAILED){s0.push(s1);if(peg$c99.test(input.charAt(peg$currPos))){s1=input.charAt(peg$currPos);peg$currPos++}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c100)}}}}else{s0=peg$c1}peg$silentFails--;if(s0===peg$FAILED){s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c98)}}return s0}function peg$parsecomment(){var s0,s1,s2,s3,s4,s5;peg$silentFails++;s0=peg$currPos;if(input.substr(peg$currPos,2)===peg$c102){s1=peg$c102;peg$currPos+=2}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c103)}}if(s1!==peg$FAILED){s2=[];if(peg$c104.test(input.charAt(peg$currPos))){s3=input.charAt(peg$currPos);peg$currPos++}else{s3=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c105)}}while(s3!==peg$FAILED){s2.push(s3);if(peg$c104.test(input.charAt(peg$currPos))){s3=input.charAt(peg$currPos);peg$currPos++}else{s3=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c105)}}}if(s2!==peg$FAILED){s1=[s1,s2];s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}if(s0===peg$FAILED){s0=peg$currPos;if(input.substr(peg$currPos,2)===peg$c106){s1=peg$c106;peg$currPos+=2}else{s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c107)}}if(s1!==peg$FAILED){s2=[];s3=peg$currPos;s4=peg$currPos;peg$silentFails++;if(input.substr(peg$currPos,2)===peg$c108){s5=peg$c108;peg$currPos+=2}else{s5=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c109)}}peg$silentFails--;if(s5===peg$FAILED){s4=peg$c30}else{peg$currPos=s4;s4=peg$c1}if(s4!==peg$FAILED){if(input.length>peg$currPos){s5=input.charAt(peg$currPos);peg$currPos++}else{s5=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c110)}}if(s5!==peg$FAILED){s4=[s4,s5];s3=s4}else{peg$currPos=s3;s3=peg$c1}}else{peg$currPos=s3;s3=peg$c1}while(s3!==peg$FAILED){s2.push(s3);s3=peg$currPos;s4=peg$currPos;peg$silentFails++;if(input.substr(peg$currPos,2)===peg$c108){s5=peg$c108;peg$currPos+=2}else{s5=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c109)}}peg$silentFails--;if(s5===peg$FAILED){s4=peg$c30}else{peg$currPos=s4;s4=peg$c1}if(s4!==peg$FAILED){if(input.length>peg$currPos){s5=input.charAt(peg$currPos);peg$currPos++}else{s5=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c110)}}if(s5!==peg$FAILED){s4=[s4,s5];s3=s4}else{peg$currPos=s3;s3=peg$c1}}else{peg$currPos=s3;s3=peg$c1}}if(s2!==peg$FAILED){if(input.substr(peg$currPos,2)===peg$c108){s3=peg$c108;peg$currPos+=2}else{s3=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c109)}}if(s3!==peg$FAILED){s1=[s1,s2,s3];s0=s1}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}else{peg$currPos=s0;s0=peg$c1}}peg$silentFails--;if(s0===peg$FAILED){s1=peg$FAILED;if(peg$silentFails===0){peg$fail(peg$c101)}}return s0}function peg$parse_(){var s0;s0=peg$parsewhitespace();if(s0===peg$FAILED){s0=peg$parsecomment()}return s0}var directed;peg$result=peg$startRuleFunction();if(peg$result!==peg$FAILED&&peg$currPos===input.length){return peg$result}else{if(peg$result!==peg$FAILED&&peg$currPos<input.length){peg$fail({type:"end",description:"end of input"})}throw peg$buildException(null,peg$maxFailExpected,peg$maxFailPos)}}return{SyntaxError:SyntaxError,parse:parse}}()},{}],5:[function(require,module,exports){var grammar=require("./dot-grammar");var buildGraph=require("./build-graph");module.exports=function readMany(str){var parseTree=grammar.parse(str);return parseTree.map(buildGraph)}},{"./build-graph":3,"./dot-grammar":4}],6:[function(require,module,exports){var grammar=require("./dot-grammar");var buildGraph=require("./build-graph");module.exports=function readOne(str){var parseTree=grammar.parse(str,{startRule:"graphStmt"});return buildGraph(parseTree)}},{"./build-graph":3,"./dot-grammar":4}],7:[function(require,module,exports){module.exports="1.0.2"},{}],8:[function(require,module,exports){module.exports=writeOne;var UNESCAPED_ID_PATTERN=/^[a-zA-Z\200-\377_][a-zA-Z\200-\377_0-9]*$/;function writeOne(g){var ec=g.isDirected()?"->":"--";var writer=new Writer;if(!g.isMultigraph()){writer.write("strict ")}writer.writeLine((g.isDirected()?"digraph":"graph")+" {");writer.indent();var graphAttrs=g.graph();if(typeof graphAttrs==="object"){Object.entries(graphAttrs).forEach(([k,v])=>{writer.writeLine(id(k)+"="+id(v)+";")})}writeSubgraph(g,undefined,writer);g.edges().forEach(function(edge){writeEdge(g,edge,ec,writer)});writer.unindent();writer.writeLine("}");return writer.toString()}function writeSubgraph(g,v,writer){var children=g.isCompound()?g.children(v):g.nodes();children.forEach(w=>{if(!g.isCompound()||!g.children(w).length){writeNode(g,w,writer)}else{writer.writeLine("subgraph "+id(w)+" {");writer.indent();if(typeof g.node(w)==="object"){Object.entries(g.node(w)).map(([key,val])=>{writer.writeLine(id(key)+"="+id(val)+";")})}writeSubgraph(g,w,writer);writer.unindent();writer.writeLine("}")}})}function writeNode(g,v,writer){writer.write(id(v));writeAttrs(g.node(v),writer);writer.writeLine()}function writeEdge(g,edge,ec,writer){var v=edge.v;var w=edge.w;var attrs=g.edge(edge);writer.write(id(v)+" "+ec+" "+id(w));writeAttrs(attrs,writer);writer.writeLine()}function writeAttrs(attrs,writer){if(typeof attrs==="object"){var attrStrs=Object.entries(attrs).map(([key,val])=>id(key)+"="+id(val));if(attrStrs.length){writer.write(" ["+attrStrs.join(",")+"]")}}}function id(obj){if(typeof obj==="number"||obj.toString().match(UNESCAPED_ID_PATTERN)){return obj}return'"'+obj.toString().replace(/"/g,'\\"')+'"'}
// Helper object for making a pretty printer
function Writer(){this._indent="";this._content="";this._shouldIndent=true}Writer.prototype.INDENT="  ";Writer.prototype.indent=function(){this._indent+=this.INDENT};Writer.prototype.unindent=function(){this._indent=this._indent.slice(this.INDENT.length)};Writer.prototype.writeLine=function(line){this.write((line||"")+"\n");this._shouldIndent=true};Writer.prototype.write=function(str){if(this._shouldIndent){this._shouldIndent=false;this._content+=this._indent}this._content+=str};Writer.prototype.toString=function(){return this._content}},{}],9:[function(require,module,exports){
/**
 * Copyright (c) 2014, Chris Pettitt
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
var lib=require("./lib");module.exports={Graph:lib.Graph,json:require("./lib/json"),alg:require("./lib/alg"),version:lib.version}},{"./lib":25,"./lib/alg":16,"./lib/json":26}],10:[function(require,module,exports){module.exports=components;function components(g){var visited={};var cmpts=[];var cmpt;function dfs(v){if(visited.hasOwnProperty(v))return;visited[v]=true;cmpt.push(v);g.successors(v).forEach(dfs);g.predecessors(v).forEach(dfs)}g.nodes().forEach(function(v){cmpt=[];dfs(v);if(cmpt.length){cmpts.push(cmpt)}});return cmpts}},{}],11:[function(require,module,exports){module.exports=dfs;
/*
 * A helper that preforms a pre- or post-order traversal on the input graph
 * and returns the nodes in the order they were visited. If the graph is
 * undirected then this algorithm will navigate using neighbors. If the graph
 * is directed then this algorithm will navigate using successors.
 *
 * If the order is not "post", it will be treated as "pre".
 */function dfs(g,vs,order){if(!Array.isArray(vs)){vs=[vs]}var navigation=g.isDirected()?v=>g.successors(v):v=>g.neighbors(v);var orderFunc=order==="post"?postOrderDfs:preOrderDfs;var acc=[];var visited={};vs.forEach(v=>{if(!g.hasNode(v)){throw new Error("Graph does not have node: "+v)}orderFunc(v,navigation,visited,acc)});return acc}function postOrderDfs(v,navigation,visited,acc){var stack=[[v,false]];while(stack.length>0){var curr=stack.pop();if(curr[1]){acc.push(curr[0])}else{if(!visited.hasOwnProperty(curr[0])){visited[curr[0]]=true;stack.push([curr[0],true]);forEachRight(navigation(curr[0]),w=>stack.push([w,false]))}}}}function preOrderDfs(v,navigation,visited,acc){var stack=[v];while(stack.length>0){var curr=stack.pop();if(!visited.hasOwnProperty(curr)){visited[curr]=true;acc.push(curr);forEachRight(navigation(curr),w=>stack.push(w))}}}function forEachRight(array,iteratee){var length=array.length;while(length--){iteratee(array[length],length,array)}return array}},{}],12:[function(require,module,exports){var dijkstra=require("./dijkstra");module.exports=dijkstraAll;function dijkstraAll(g,weightFunc,edgeFunc){return g.nodes().reduce(function(acc,v){acc[v]=dijkstra(g,v,weightFunc,edgeFunc);return acc},{})}},{"./dijkstra":13}],13:[function(require,module,exports){var PriorityQueue=require("../data/priority-queue");module.exports=dijkstra;var DEFAULT_WEIGHT_FUNC=()=>1;function dijkstra(g,source,weightFn,edgeFn){return runDijkstra(g,String(source),weightFn||DEFAULT_WEIGHT_FUNC,edgeFn||function(v){return g.outEdges(v)})}function runDijkstra(g,source,weightFn,edgeFn){var results={};var pq=new PriorityQueue;var v,vEntry;var updateNeighbors=function(edge){var w=edge.v!==v?edge.v:edge.w;var wEntry=results[w];var weight=weightFn(edge);var distance=vEntry.distance+weight;if(weight<0){throw new Error("dijkstra does not allow negative edge weights. "+"Bad edge: "+edge+" Weight: "+weight)}if(distance<wEntry.distance){wEntry.distance=distance;wEntry.predecessor=v;pq.decrease(w,distance)}};g.nodes().forEach(function(v){var distance=v===source?0:Number.POSITIVE_INFINITY;results[v]={distance:distance};pq.add(v,distance)});while(pq.size()>0){v=pq.removeMin();vEntry=results[v];if(vEntry.distance===Number.POSITIVE_INFINITY){break}edgeFn(v).forEach(updateNeighbors)}return results}},{"../data/priority-queue":23}],14:[function(require,module,exports){var tarjan=require("./tarjan");module.exports=findCycles;function findCycles(g){return tarjan(g).filter(function(cmpt){return cmpt.length>1||cmpt.length===1&&g.hasEdge(cmpt[0],cmpt[0])})}},{"./tarjan":21}],15:[function(require,module,exports){module.exports=floydWarshall;var DEFAULT_WEIGHT_FUNC=()=>1;function floydWarshall(g,weightFn,edgeFn){return runFloydWarshall(g,weightFn||DEFAULT_WEIGHT_FUNC,edgeFn||function(v){return g.outEdges(v)})}function runFloydWarshall(g,weightFn,edgeFn){var results={};var nodes=g.nodes();nodes.forEach(function(v){results[v]={};results[v][v]={distance:0};nodes.forEach(function(w){if(v!==w){results[v][w]={distance:Number.POSITIVE_INFINITY}}});edgeFn(v).forEach(function(edge){var w=edge.v===v?edge.w:edge.v;var d=weightFn(edge);results[v][w]={distance:d,predecessor:v}})});nodes.forEach(function(k){var rowK=results[k];nodes.forEach(function(i){var rowI=results[i];nodes.forEach(function(j){var ik=rowI[k];var kj=rowK[j];var ij=rowI[j];var altDistance=ik.distance+kj.distance;if(altDistance<ij.distance){ij.distance=altDistance;ij.predecessor=kj.predecessor}})})});return results}},{}],16:[function(require,module,exports){module.exports={components:require("./components"),dijkstra:require("./dijkstra"),dijkstraAll:require("./dijkstra-all"),findCycles:require("./find-cycles"),floydWarshall:require("./floyd-warshall"),isAcyclic:require("./is-acyclic"),postorder:require("./postorder"),preorder:require("./preorder"),prim:require("./prim"),tarjan:require("./tarjan"),topsort:require("./topsort")}},{"./components":10,"./dijkstra":13,"./dijkstra-all":12,"./find-cycles":14,"./floyd-warshall":15,"./is-acyclic":17,"./postorder":18,"./preorder":19,"./prim":20,"./tarjan":21,"./topsort":22}],17:[function(require,module,exports){var topsort=require("./topsort");module.exports=isAcyclic;function isAcyclic(g){try{topsort(g)}catch(e){if(e instanceof topsort.CycleException){return false}throw e}return true}},{"./topsort":22}],18:[function(require,module,exports){var dfs=require("./dfs");module.exports=postorder;function postorder(g,vs){return dfs(g,vs,"post")}},{"./dfs":11}],19:[function(require,module,exports){var dfs=require("./dfs");module.exports=preorder;function preorder(g,vs){return dfs(g,vs,"pre")}},{"./dfs":11}],20:[function(require,module,exports){var Graph=require("../graph");var PriorityQueue=require("../data/priority-queue");module.exports=prim;function prim(g,weightFunc){var result=new Graph;var parents={};var pq=new PriorityQueue;var v;function updateNeighbors(edge){var w=edge.v===v?edge.w:edge.v;var pri=pq.priority(w);if(pri!==undefined){var edgeWeight=weightFunc(edge);if(edgeWeight<pri){parents[w]=v;pq.decrease(w,edgeWeight)}}}if(g.nodeCount()===0){return result}g.nodes().forEach(function(v){pq.add(v,Number.POSITIVE_INFINITY);result.setNode(v)});
// Start from an arbitrary node
pq.decrease(g.nodes()[0],0);var init=false;while(pq.size()>0){v=pq.removeMin();if(parents.hasOwnProperty(v)){result.setEdge(v,parents[v])}else if(init){throw new Error("Input graph is not connected: "+g)}else{init=true}g.nodeEdges(v).forEach(updateNeighbors)}return result}},{"../data/priority-queue":23,"../graph":24}],21:[function(require,module,exports){module.exports=tarjan;function tarjan(g){var index=0;var stack=[];var visited={};// node id -> { onStack, lowlink, index }
var results=[];function dfs(v){var entry=visited[v]={onStack:true,lowlink:index,index:index++};stack.push(v);g.successors(v).forEach(function(w){if(!visited.hasOwnProperty(w)){dfs(w);entry.lowlink=Math.min(entry.lowlink,visited[w].lowlink)}else if(visited[w].onStack){entry.lowlink=Math.min(entry.lowlink,visited[w].index)}});if(entry.lowlink===entry.index){var cmpt=[];var w;do{w=stack.pop();visited[w].onStack=false;cmpt.push(w)}while(v!==w);results.push(cmpt)}}g.nodes().forEach(function(v){if(!visited.hasOwnProperty(v)){dfs(v)}});return results}},{}],22:[function(require,module,exports){function topsort(g){var visited={};var stack={};var results=[];function visit(node){if(stack.hasOwnProperty(node)){throw new CycleException}if(!visited.hasOwnProperty(node)){stack[node]=true;visited[node]=true;g.predecessors(node).forEach(visit);delete stack[node];results.push(node)}}g.sinks().forEach(visit);if(Object.keys(visited).length!==g.nodeCount()){throw new CycleException}return results}class CycleException extends Error{constructor(){super(...arguments)}}module.exports=topsort;topsort.CycleException=CycleException},{}],23:[function(require,module,exports){
/**
 * A min-priority queue data structure. This algorithm is derived from Cormen,
 * et al., "Introduction to Algorithms". The basic idea of a min-priority
 * queue is that you can efficiently (in O(1) time) get the smallest key in
 * the queue. Adding and removing elements takes O(log n) time. A key can
 * have its priority decreased in O(log n) time.
 */
class PriorityQueue{#arr=[];#keyIndices={};
/**
   * Returns the number of elements in the queue. Takes `O(1)` time.
   */size(){return this.#arr.length}
/**
   * Returns the keys that are in the queue. Takes `O(n)` time.
   */keys(){return this.#arr.map(function(x){return x.key})}
/**
   * Returns `true` if **key** is in the queue and `false` if not.
   */has(key){return this.#keyIndices.hasOwnProperty(key)}
/**
   * Returns the priority for **key**. If **key** is not present in the queue
   * then this function returns `undefined`. Takes `O(1)` time.
   *
   * @param {Object} key
   */priority(key){var index=this.#keyIndices[key];if(index!==undefined){return this.#arr[index].priority}}
/**
   * Returns the key for the minimum element in this queue. If the queue is
   * empty this function throws an Error. Takes `O(1)` time.
   */min(){if(this.size()===0){throw new Error("Queue underflow")}return this.#arr[0].key}
/**
   * Inserts a new key into the priority queue. If the key already exists in
   * the queue this function returns `false`; otherwise it will return `true`.
   * Takes `O(n)` time.
   *
   * @param {Object} key the key to add
   * @param {Number} priority the initial priority for the key
   */add(key,priority){var keyIndices=this.#keyIndices;key=String(key);if(!keyIndices.hasOwnProperty(key)){var arr=this.#arr;var index=arr.length;keyIndices[key]=index;arr.push({key:key,priority:priority});this.#decrease(index);return true}return false}
/**
   * Removes and returns the smallest key in the queue. Takes `O(log n)` time.
   */removeMin(){this.#swap(0,this.#arr.length-1);var min=this.#arr.pop();delete this.#keyIndices[min.key];this.#heapify(0);return min.key}
/**
   * Decreases the priority for **key** to **priority**. If the new priority is
   * greater than the previous priority, this function will throw an Error.
   *
   * @param {Object} key the key for which to raise priority
   * @param {Number} priority the new priority for the key
   */decrease(key,priority){var index=this.#keyIndices[key];if(priority>this.#arr[index].priority){throw new Error("New priority is greater than current priority. "+"Key: "+key+" Old: "+this.#arr[index].priority+" New: "+priority)}this.#arr[index].priority=priority;this.#decrease(index)}#heapify(i){var arr=this.#arr;var l=2*i;var r=l+1;var largest=i;if(l<arr.length){largest=arr[l].priority<arr[largest].priority?l:largest;if(r<arr.length){largest=arr[r].priority<arr[largest].priority?r:largest}if(largest!==i){this.#swap(i,largest);this.#heapify(largest)}}}#decrease(index){var arr=this.#arr;var priority=arr[index].priority;var parent;while(index!==0){parent=index>>1;if(arr[parent].priority<priority){break}this.#swap(index,parent);index=parent}}#swap(i,j){var arr=this.#arr;var keyIndices=this.#keyIndices;var origArrI=arr[i];var origArrJ=arr[j];arr[i]=origArrJ;arr[j]=origArrI;keyIndices[origArrJ.key]=i;keyIndices[origArrI.key]=j}}module.exports=PriorityQueue},{}],24:[function(require,module,exports){"use strict";var DEFAULT_EDGE_NAME="\0";var GRAPH_NODE="\0";var EDGE_KEY_DELIM="";
// Implementation notes:
//
//  * Node id query functions should return string ids for the nodes
//  * Edge id query functions should return an "edgeObj", edge object, that is
//    composed of enough information to uniquely identify an edge: {v, w, name}.
//  * Internally we use an "edgeId", a stringified form of the edgeObj, to
//    reference edges. This is because we need a performant way to look these
//    edges up and, object properties, which have string keys, are the closest
//    we're going to get to a performant hashtable in JavaScript.
class Graph{#isDirected=true;#isMultigraph=false;#isCompound=false;
// Label for the graph itself
#label;
// Defaults to be set when creating a new node
#defaultNodeLabelFn=()=>undefined;
// Defaults to be set when creating a new edge
#defaultEdgeLabelFn=()=>undefined;
// v -> label
#nodes={};
// v -> edgeObj
#in={};
// u -> v -> Number
#preds={};
// v -> edgeObj
#out={};
// v -> w -> Number
#sucs={};
// e -> edgeObj
#edgeObjs={};
// e -> label
#edgeLabels={};
/* Number of nodes in the graph. Should only be changed by the implementation. */#nodeCount=0;
/* Number of edges in the graph. Should only be changed by the implementation. */#edgeCount=0;#parent;#children;constructor(opts){if(opts){this.#isDirected=opts.hasOwnProperty("directed")?opts.directed:true;this.#isMultigraph=opts.hasOwnProperty("multigraph")?opts.multigraph:false;this.#isCompound=opts.hasOwnProperty("compound")?opts.compound:false}if(this.#isCompound){
// v -> parent
this.#parent={};
// v -> children
this.#children={};this.#children[GRAPH_NODE]={}}}
/* === Graph functions ========= */
/**
   * Whether graph was created with 'directed' flag set to true or not.
   */isDirected(){return this.#isDirected}
/**
   * Whether graph was created with 'multigraph' flag set to true or not.
   */isMultigraph(){return this.#isMultigraph}
/**
   * Whether graph was created with 'compound' flag set to true or not.
   */isCompound(){return this.#isCompound}
/**
   * Sets the label of the graph.
   */setGraph(label){this.#label=label;return this}
/**
   * Gets the graph label.
   */graph(){return this.#label}
/* === Node functions ========== */
/**
   * Sets the default node label. If newDefault is a function, it will be
   * invoked ach time when setting a label for a node. Otherwise, this label
   * will be assigned as default label in case if no label was specified while
   * setting a node.
   * Complexity: O(1).
   */setDefaultNodeLabel(newDefault){this.#defaultNodeLabelFn=newDefault;if(typeof newDefault!=="function"){this.#defaultNodeLabelFn=()=>newDefault}return this}
/**
   * Gets the number of nodes in the graph.
   * Complexity: O(1).
   */nodeCount(){return this.#nodeCount}
/**
   * Gets all nodes of the graph. Note, the in case of compound graph subnodes are
   * not included in list.
   * Complexity: O(1).
   */nodes(){return Object.keys(this.#nodes)}
/**
   * Gets list of nodes without in-edges.
   * Complexity: O(|V|).
   */sources(){var self=this;return this.nodes().filter(v=>Object.keys(self.#in[v]).length===0)}
/**
   * Gets list of nodes without out-edges.
   * Complexity: O(|V|).
   */sinks(){var self=this;return this.nodes().filter(v=>Object.keys(self.#out[v]).length===0)}
/**
   * Invokes setNode method for each node in names list.
   * Complexity: O(|names|).
   */setNodes(vs,value){var args=arguments;var self=this;vs.forEach(function(v){if(args.length>1){self.setNode(v,value)}else{self.setNode(v)}});return this}
/**
   * Creates or updates the value for the node v in the graph. If label is supplied
   * it is set as the value for the node. If label is not supplied and the node was
   * created by this call then the default node label will be assigned.
   * Complexity: O(1).
   */setNode(v,value){if(this.#nodes.hasOwnProperty(v)){if(arguments.length>1){this.#nodes[v]=value}return this}this.#nodes[v]=arguments.length>1?value:this.#defaultNodeLabelFn(v);if(this.#isCompound){this.#parent[v]=GRAPH_NODE;this.#children[v]={};this.#children[GRAPH_NODE][v]=true}this.#in[v]={};this.#preds[v]={};this.#out[v]={};this.#sucs[v]={};++this.#nodeCount;return this}
/**
   * Gets the label of node with specified name.
   * Complexity: O(|V|).
   */node(v){return this.#nodes[v]}
/**
   * Detects whether graph has a node with specified name or not.
   */hasNode(v){return this.#nodes.hasOwnProperty(v)}
/**
   * Remove the node with the name from the graph or do nothing if the node is not in
   * the graph. If the node was removed this function also removes any incident
   * edges.
   * Complexity: O(1).
   */removeNode(v){var self=this;if(this.#nodes.hasOwnProperty(v)){var removeEdge=e=>self.removeEdge(self.#edgeObjs[e]);delete this.#nodes[v];if(this.#isCompound){this.#removeFromParentsChildList(v);delete this.#parent[v];this.children(v).forEach(function(child){self.setParent(child)});delete this.#children[v]}Object.keys(this.#in[v]).forEach(removeEdge);delete this.#in[v];delete this.#preds[v];Object.keys(this.#out[v]).forEach(removeEdge);delete this.#out[v];delete this.#sucs[v];--this.#nodeCount}return this}
/**
   * Sets node p as a parent for node v if it is defined, or removes the
   * parent for v if p is undefined. Method throws an exception in case of
   * invoking it in context of noncompound graph.
   * Average-case complexity: O(1).
   */setParent(v,parent){if(!this.#isCompound){throw new Error("Cannot set parent in a non-compound graph")}if(parent===undefined){parent=GRAPH_NODE}else{
// Coerce parent to string
parent+="";for(var ancestor=parent;ancestor!==undefined;ancestor=this.parent(ancestor)){if(ancestor===v){throw new Error("Setting "+parent+" as parent of "+v+" would create a cycle")}}this.setNode(parent)}this.setNode(v);this.#removeFromParentsChildList(v);this.#parent[v]=parent;this.#children[parent][v]=true;return this}#removeFromParentsChildList(v){delete this.#children[this.#parent[v]][v]}
/**
   * Gets parent node for node v.
   * Complexity: O(1).
   */parent(v){if(this.#isCompound){var parent=this.#parent[v];if(parent!==GRAPH_NODE){return parent}}}
/**
   * Gets list of direct children of node v.
   * Complexity: O(1).
   */children(v=GRAPH_NODE){if(this.#isCompound){var children=this.#children[v];if(children){return Object.keys(children)}}else if(v===GRAPH_NODE){return this.nodes()}else if(this.hasNode(v)){return[]}}
/**
   * Return all nodes that are predecessors of the specified node or undefined if node v is not in
   * the graph. Behavior is undefined for undirected graphs - use neighbors instead.
   * Complexity: O(|V|).
   */predecessors(v){var predsV=this.#preds[v];if(predsV){return Object.keys(predsV)}}
/**
   * Return all nodes that are successors of the specified node or undefined if node v is not in
   * the graph. Behavior is undefined for undirected graphs - use neighbors instead.
   * Complexity: O(|V|).
   */successors(v){var sucsV=this.#sucs[v];if(sucsV){return Object.keys(sucsV)}}
/**
   * Return all nodes that are predecessors or successors of the specified node or undefined if
   * node v is not in the graph.
   * Complexity: O(|V|).
   */neighbors(v){var preds=this.predecessors(v);if(preds){const union=new Set(preds);for(var succ of this.successors(v)){union.add(succ)}return Array.from(union.values())}}isLeaf(v){var neighbors;if(this.isDirected()){neighbors=this.successors(v)}else{neighbors=this.neighbors(v)}return neighbors.length===0}
/**
   * Creates new graph with nodes filtered via filter. Edges incident to rejected node
   * are also removed. In case of compound graph, if parent is rejected by filter,
   * than all its children are rejected too.
   * Average-case complexity: O(|E|+|V|).
   */filterNodes(filter){var copy=new this.constructor({directed:this.#isDirected,multigraph:this.#isMultigraph,compound:this.#isCompound});copy.setGraph(this.graph());var self=this;Object.entries(this.#nodes).forEach(function([v,value]){if(filter(v)){copy.setNode(v,value)}});Object.values(this.#edgeObjs).forEach(function(e){if(copy.hasNode(e.v)&&copy.hasNode(e.w)){copy.setEdge(e,self.edge(e))}});var parents={};function findParent(v){var parent=self.parent(v);if(parent===undefined||copy.hasNode(parent)){parents[v]=parent;return parent}else if(parent in parents){return parents[parent]}else{return findParent(parent)}}if(this.#isCompound){copy.nodes().forEach(v=>copy.setParent(v,findParent(v)))}return copy}
/* === Edge functions ========== */
/**
   * Sets the default edge label or factory function. This label will be
   * assigned as default label in case if no label was specified while setting
   * an edge or this function will be invoked each time when setting an edge
   * with no label specified and returned value * will be used as a label for edge.
   * Complexity: O(1).
   */setDefaultEdgeLabel(newDefault){this.#defaultEdgeLabelFn=newDefault;if(typeof newDefault!=="function"){this.#defaultEdgeLabelFn=()=>newDefault}return this}
/**
   * Gets the number of edges in the graph.
   * Complexity: O(1).
   */edgeCount(){return this.#edgeCount}
/**
   * Gets edges of the graph. In case of compound graph subgraphs are not considered.
   * Complexity: O(|E|).
   */edges(){return Object.values(this.#edgeObjs)}
/**
   * Establish an edges path over the nodes in nodes list. If some edge is already
   * exists, it will update its label, otherwise it will create an edge between pair
   * of nodes with label provided or default label if no label provided.
   * Complexity: O(|nodes|).
   */setPath(vs,value){var self=this;var args=arguments;vs.reduce(function(v,w){if(args.length>1){self.setEdge(v,w,value)}else{self.setEdge(v,w)}return w});return this}
/**
   * Creates or updates the label for the edge (v, w) with the optionally supplied
   * name. If label is supplied it is set as the value for the edge. If label is not
   * supplied and the edge was created by this call then the default edge label will
   * be assigned. The name parameter is only useful with multigraphs.
   */setEdge(){var v,w,name,value;var valueSpecified=false;var arg0=arguments[0];if(typeof arg0==="object"&&arg0!==null&&"v"in arg0){v=arg0.v;w=arg0.w;name=arg0.name;if(arguments.length===2){value=arguments[1];valueSpecified=true}}else{v=arg0;w=arguments[1];name=arguments[3];if(arguments.length>2){value=arguments[2];valueSpecified=true}}v=""+v;w=""+w;if(name!==undefined){name=""+name}var e=edgeArgsToId(this.#isDirected,v,w,name);if(this.#edgeLabels.hasOwnProperty(e)){if(valueSpecified){this.#edgeLabels[e]=value}return this}if(name!==undefined&&!this.#isMultigraph){throw new Error("Cannot set a named edge when isMultigraph = false")}
// It didn't exist, so we need to create it.
// First ensure the nodes exist.
this.setNode(v);this.setNode(w);this.#edgeLabels[e]=valueSpecified?value:this.#defaultEdgeLabelFn(v,w,name);var edgeObj=edgeArgsToObj(this.#isDirected,v,w,name);
// Ensure we add undirected edges in a consistent way.
v=edgeObj.v;w=edgeObj.w;Object.freeze(edgeObj);this.#edgeObjs[e]=edgeObj;incrementOrInitEntry(this.#preds[w],v);incrementOrInitEntry(this.#sucs[v],w);this.#in[w][e]=edgeObj;this.#out[v][e]=edgeObj;this.#edgeCount++;return this}
/**
   * Gets the label for the specified edge.
   * Complexity: O(1).
   */edge(v,w,name){var e=arguments.length===1?edgeObjToId(this.#isDirected,arguments[0]):edgeArgsToId(this.#isDirected,v,w,name);return this.#edgeLabels[e]}
/**
   * Gets the label for the specified edge and converts it to an object.
   * Complexity: O(1)
   */edgeAsObj(){const edge=this.edge(...arguments);if(typeof edge!=="object"){return{label:edge}}return edge}
/**
   * Detects whether the graph contains specified edge or not. No subgraphs are considered.
   * Complexity: O(1).
   */hasEdge(v,w,name){var e=arguments.length===1?edgeObjToId(this.#isDirected,arguments[0]):edgeArgsToId(this.#isDirected,v,w,name);return this.#edgeLabels.hasOwnProperty(e)}
/**
   * Removes the specified edge from the graph. No subgraphs are considered.
   * Complexity: O(1).
   */removeEdge(v,w,name){var e=arguments.length===1?edgeObjToId(this.#isDirected,arguments[0]):edgeArgsToId(this.#isDirected,v,w,name);var edge=this.#edgeObjs[e];if(edge){v=edge.v;w=edge.w;delete this.#edgeLabels[e];delete this.#edgeObjs[e];decrementOrRemoveEntry(this.#preds[w],v);decrementOrRemoveEntry(this.#sucs[v],w);delete this.#in[w][e];delete this.#out[v][e];this.#edgeCount--}return this}
/**
   * Return all edges that point to the node v. Optionally filters those edges down to just those
   * coming from node u. Behavior is undefined for undirected graphs - use nodeEdges instead.
   * Complexity: O(|E|).
   */inEdges(v,u){var inV=this.#in[v];if(inV){var edges=Object.values(inV);if(!u){return edges}return edges.filter(edge=>edge.v===u)}}
/**
   * Return all edges that are pointed at by node v. Optionally filters those edges down to just
   * those point to w. Behavior is undefined for undirected graphs - use nodeEdges instead.
   * Complexity: O(|E|).
   */outEdges(v,w){var outV=this.#out[v];if(outV){var edges=Object.values(outV);if(!w){return edges}return edges.filter(edge=>edge.w===w)}}
/**
   * Returns all edges to or from node v regardless of direction. Optionally filters those edges
   * down to just those between nodes v and w regardless of direction.
   * Complexity: O(|E|).
   */nodeEdges(v,w){var inEdges=this.inEdges(v,w);if(inEdges){return inEdges.concat(this.outEdges(v,w))}}}function incrementOrInitEntry(map,k){if(map[k]){map[k]++}else{map[k]=1}}function decrementOrRemoveEntry(map,k){if(!--map[k]){delete map[k]}}function edgeArgsToId(isDirected,v_,w_,name){var v=""+v_;var w=""+w_;if(!isDirected&&v>w){var tmp=v;v=w;w=tmp}return v+EDGE_KEY_DELIM+w+EDGE_KEY_DELIM+(name===undefined?DEFAULT_EDGE_NAME:name)}function edgeArgsToObj(isDirected,v_,w_,name){var v=""+v_;var w=""+w_;if(!isDirected&&v>w){var tmp=v;v=w;w=tmp}var edgeObj={v:v,w:w};if(name){edgeObj.name=name}return edgeObj}function edgeObjToId(isDirected,edgeObj){return edgeArgsToId(isDirected,edgeObj.v,edgeObj.w,edgeObj.name)}module.exports=Graph},{}],25:[function(require,module,exports){
// Includes only the "core" of graphlib
module.exports={Graph:require("./graph"),version:require("./version")}},{"./graph":24,"./version":27}],26:[function(require,module,exports){var Graph=require("./graph");module.exports={write:write,read:read};
/**
 * Creates a JSON representation of the graph that can be serialized to a string with
 * JSON.stringify. The graph can later be restored using json.read.
 */function write(g){var json={options:{directed:g.isDirected(),multigraph:g.isMultigraph(),compound:g.isCompound()},nodes:writeNodes(g),edges:writeEdges(g)};if(g.graph()!==undefined){json.value=structuredClone(g.graph())}return json}function writeNodes(g){return g.nodes().map(function(v){var nodeValue=g.node(v);var parent=g.parent(v);var node={v:v};if(nodeValue!==undefined){node.value=nodeValue}if(parent!==undefined){node.parent=parent}return node})}function writeEdges(g){return g.edges().map(function(e){var edgeValue=g.edge(e);var edge={v:e.v,w:e.w};if(e.name!==undefined){edge.name=e.name}if(edgeValue!==undefined){edge.value=edgeValue}return edge})}
/**
 * Takes JSON as input and returns the graph representation.
 *
 * @example
 * var g2 = graphlib.json.read(JSON.parse(str));
 * g2.nodes();
 * // ['a', 'b']
 * g2.edges()
 * // [ { v: 'a', w: 'b' } ]
 */function read(json){var g=new Graph(json.options).setGraph(json.value);json.nodes.forEach(function(entry){g.setNode(entry.v,entry.value);if(entry.parent){g.setParent(entry.v,entry.parent)}});json.edges.forEach(function(entry){g.setEdge({v:entry.v,w:entry.w,name:entry.name},entry.value)});return g}},{"./graph":24}],27:[function(require,module,exports){module.exports="2.1.13"},{}]},{},[1]);
